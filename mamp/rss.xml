<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0">
<channel>
        <title>Ali Baba Tajine - RSS Feed</title>
        <description>Ali Baba Tajine - Ali Baba Tajine</description>
        <link></link>
        <link></link>
        <lastBuildDate>2014-07-09T12:51:44+00:00</lastBuildDate>
        <pubDate>2014-07-09T12:51:44+00:00</pubDate>
        <ttl>1800</ttl>


        <item>
                <title>Nick DiMatteo</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/nick-dimatteo.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/expo/nick-dimatteo.html</link>
                <guid>/expo/nick-dimatteo</guid>
                <pubDate>2014-03-07T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>20jeans</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/20jeans.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/expo/20jeans.html</link>
                <guid>/expo/20jeans</guid>
                <pubDate>2014-03-07T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Unroll.Me</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/unrollme.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/expo/unrollme.html</link>
                <guid>/expo/unrollme</guid>
                <pubDate>2014-02-26T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Robinhood</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/robinhood.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/expo/robinhood.html</link>
                <guid>/expo/robinhood</guid>
                <pubDate>2014-02-26T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Themeclue</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/themeclue.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/expo/themeclue.html</link>
                <guid>/expo/themeclue</guid>
                <pubDate>2014-02-24T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Red Antler</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/redantler.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/expo/redantler.html</link>
                <guid>/expo/redantler</guid>
                <pubDate>2014-02-24T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Newsweek</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/newsweek.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/expo/newsweek.html</link>
                <guid>/expo/newsweek</guid>
                <pubDate>2014-02-12T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Little</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/little.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/expo/little.html</link>
                <guid>/expo/little</guid>
                <pubDate>2014-02-12T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Engine Yard</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/engine-yard.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/expo/engine-yard.html</link>
                <guid>/expo/engine-yard</guid>
                <pubDate>2014-02-10T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Ditto</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/ditto.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/expo/ditto.html</link>
                <guid>/expo/ditto</guid>
                <pubDate>2014-02-10T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Ooomf 2</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/ooomf-2.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/expo/ooomf-2.html</link>
                <guid>/expo/ooomf-2</guid>
                <pubDate>2014-02-07T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Hyde + Hyde</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/hydearchitects.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/expo/hyde-hyde.html</link>
                <guid>/expo/hyde-hyde</guid>
                <pubDate>2014-02-07T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Involvio</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/involvio.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/expo/involvio.html</link>
                <guid>/expo/involvio</guid>
                <pubDate>2014-02-05T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>GRK Fresh</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/grkfresh.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/expo/grkfresh.html</link>
                <guid>/expo/grkfresh</guid>
                <pubDate>2014-02-05T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Webflow 2</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/webflow.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/expo/webflow-2.html</link>
                <guid>/expo/webflow-2</guid>
                <pubDate>2014-02-04T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Playboard</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/playboard.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/expo/playboard.html</link>
                <guid>/expo/playboard</guid>
                <pubDate>2014-02-03T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>MAN Super</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/mansuper.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/expo/mansuper.html</link>
                <guid>/expo/mansuper</guid>
                <pubDate>2014-01-06T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>WildPhotos</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/wildphotos.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/expo/wildphotos.html</link>
                <guid>/expo/wildphotos</guid>
                <pubDate>2013-12-23T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Blimp</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/blimp.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/expo/blimp.html</link>
                <guid>/expo/blimp</guid>
                <pubDate>2013-12-23T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Todaymade</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/todaymade.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/expo/todaymade.html</link>
                <guid>/expo/todaymade</guid>
                <pubDate>2013-12-20T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Flow for Instagram</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/flow-for-instagram.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/expo/flow-for-instagram.html</link>
                <guid>/expo/flow-for-instagram</guid>
                <pubDate>2013-12-20T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Differential</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/differential.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/expo/differential.html</link>
                <guid>/expo/differential</guid>
                <pubDate>2013-12-18T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Exosource</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/exosource.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/expo/exosource.html</link>
                <guid>/expo/exosource</guid>
                <pubDate>2013-11-13T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Hidden Depth</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/hidden-depth.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/expo/hidden-depth.html</link>
                <guid>/expo/hidden-depth</guid>
                <pubDate>2013-08-15T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Black Swan State Theatre Company</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/black-swan-state-theatre-company.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/expo/black-swan-state-theatre-company.html</link>
                <guid>/expo/black-swan-state-theatre-company</guid>
                <pubDate>2013-08-15T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>STYLIGHT</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/stylight.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/expo/stylight.html</link>
                <guid>/expo/stylight</guid>
                <pubDate>2013-08-12T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Localcrime</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/localcrime.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/expo/localcrime.html</link>
                <guid>/expo/localcrime</guid>
                <pubDate>2013-08-08T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Coinbase</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/coinbase.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/expo/coinbase.html</link>
                <guid>/expo/coinbase</guid>
                <pubDate>2013-08-06T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Fortrabbit</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/fortrabbit.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/expo/fortrabbit.html</link>
                <guid>/expo/fortrabbit</guid>
                <pubDate>2013-08-05T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Smart Design</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/smart-design.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/expo/smart-design.html</link>
                <guid>/expo/smart-design</guid>
                <pubDate>2013-08-01T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Gabriel Valdivia</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/gabriel-valdivia.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/expo/gabriel-valdivia.html</link>
                <guid>/expo/gabriel-valdivia</guid>
                <pubDate>2013-07-29T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>MOX</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/mox.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/expo/mox.html</link>
                <guid>/expo/mox</guid>
                <pubDate>2013-07-25T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Les Bonbecs</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/les-bonbecs.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/expo/les-bonbecs.html</link>
                <guid>/expo/les-bonbecs</guid>
                <pubDate>2013-07-22T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Cecchi</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/cecchi.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/expo/cecchi.html</link>
                <guid>/expo/cecchi</guid>
                <pubDate>2013-07-19T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Infinum</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/infinum.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/expo/infinum.html</link>
                <guid>/expo/infinum</guid>
                <pubDate>2013-07-16T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Inc</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/inc.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/expo/inc.html</link>
                <guid>/expo/inc</guid>
                <pubDate>2013-06-21T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Sentry</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/sentry.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/expo/sentry.html</link>
                <guid>/expo/sentry</guid>
                <pubDate>2013-05-09T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Laravel</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/laravel.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/expo/laravel.html</link>
                <guid>/expo/laravel</guid>
                <pubDate>2013-05-07T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Grunt</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/gruntjs.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/expo/gruntjs.html</link>
                <guid>/expo/gruntjs</guid>
                <pubDate>2013-05-06T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>BitTorrent Labs</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/bittorrent-labs.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/expo/bittorrent-labs.html</link>
                <guid>/expo/bittorrent-labs</guid>
                <pubDate>2013-04-28T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Easybring</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/easybring.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/expo/easybring.html</link>
                <guid>/expo/easybring</guid>
                <pubDate>2013-04-25T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Kippt Developers</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/kippt-developers.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/expo/kippt-developers.html</link>
                <guid>/expo/kippt-developers</guid>
                <pubDate>2013-04-22T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Learndot</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/learndot.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/expo/learndot.html</link>
                <guid>/expo/learndot</guid>
                <pubDate>2013-04-18T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Flywheel</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/flywheel.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/expo/flywheel.html</link>
                <guid>/expo/flywheel</guid>
                <pubDate>2013-04-15T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>ooomf</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/ooomf.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/expo/ooomf.html</link>
                <guid>/expo/ooomf</guid>
                <pubDate>2013-04-11T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>KRUNCH</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/krunch.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/expo/krunch.html</link>
                <guid>/expo/krunch</guid>
                <pubDate>2013-04-08T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>YaSound</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/yasound.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/expo/yasound.html</link>
                <guid>/expo/yasound</guid>
                <pubDate>2013-04-04T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Flat UI</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/flat-ui.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/expo/flat-ui.html</link>
                <guid>/expo/flat-ui</guid>
                <pubDate>2013-04-01T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Kippt Neu</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/kippt-new.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/expo/kippt-neu.html</link>
                <guid>/expo/kippt-neu</guid>
                <pubDate>2013-03-19T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Webflow</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/webflow.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/expo/webflow.html</link>
                <guid>/expo/webflow</guid>
                <pubDate>2013-03-18T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Pulse</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/pulse.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/expo/pulse.html</link>
                <guid>/expo/pulse</guid>
                <pubDate>2013-03-16T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Automatic</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/automatic.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/expo/automatic.html</link>
                <guid>/expo/automatic</guid>
                <pubDate>2013-03-14T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Women and Tech</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/womenandtech.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/expo/womenandtech.html</link>
                <guid>/expo/womenandtech</guid>
                <pubDate>2013-03-04T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>DIY.org</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/diy.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/expo/diy.html</link>
                <guid>/expo/diy</guid>
                <pubDate>2013-03-02T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Delicious</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/delicious.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/expo/delicious.html</link>
                <guid>/expo/delicious</guid>
                <pubDate>2013-02-21T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Go Squared</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/gosquared.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/expo/gosquared.html</link>
                <guid>/expo/gosquared</guid>
                <pubDate>2013-02-20T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Easel</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/easel.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/expo/easel.html</link>
                <guid>/expo/easel</guid>
                <pubDate>2013-02-19T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Tonx</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/tonx.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/expo/tonx.html</link>
                <guid>/expo/tonx</guid>
                <pubDate>2013-02-18T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>JSHint</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/jshint.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/expo/jshint.html</link>
                <guid>/expo/jshint</guid>
                <pubDate>2013-02-17T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Synco</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/synco.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/expo/synco.html</link>
                <guid>/expo/synco</guid>
                <pubDate>2013-02-16T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Karma</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/karma.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/expo/karma.html</link>
                <guid>/expo/karma</guid>
                <pubDate>2013-02-15T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>MetroTwit</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/metrotwit.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/expo/metrotwit.html</link>
                <guid>/expo/metrotwit</guid>
                <pubDate>2013-02-14T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Codecademy</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/codecademy.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/expo/codecademy.html</link>
                <guid>/expo/codecademy</guid>
                <pubDate>2013-02-13T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Jetstrap</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/jetstrap.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/expo/jetstrap.html</link>
                <guid>/expo/jetstrap</guid>
                <pubDate>2013-02-12T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>DivShot</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/divshot.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/expo/divshot.html</link>
                <guid>/expo/divshot</guid>
                <pubDate>2013-02-11T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>GatherContent</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/gathercontent.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/expo/gathercontent.html</link>
                <guid>/expo/gathercontent</guid>
                <pubDate>2013-02-10T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Twitter Translation Center</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/twitter-translation-center.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/expo/twitter-translation-center.html</link>
                <guid>/expo/twitter-translation-center</guid>
                <pubDate>2013-02-09T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>SoundReady</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/soundready.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/expo/soundready.html</link>
                <guid>/expo/soundready</guid>
                <pubDate>2013-02-08T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Breaking News</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/breakingnews.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/expo/breakingnews.html</link>
                <guid>/expo/breakingnews</guid>
                <pubDate>2013-02-07T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Desk</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/desk.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/expo/desk.html</link>
                <guid>/expo/desk</guid>
                <pubDate>2013-02-06T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Jumpstart UI</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/jumpstart-ui.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/expo/jumpstart-ui.html</link>
                <guid>/expo/jumpstart-ui</guid>
                <pubDate>2013-02-05T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Athey Creek</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/athey-creek.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/expo/athey-creek.html</link>
                <guid>/expo/athey-creek</guid>
                <pubDate>2013-02-04T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Fleetio</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/fleetio.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/code/fleetio.html</link>
                <guid>/code/fleetio</guid>
                <pubDate>2013-02-03T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Adopt-a-Hydrant</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/adoptahydrant.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/expo/adoptahydrant.html</link>
                <guid>/expo/adoptahydrant</guid>
                <pubDate>2013-02-02T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>8020 Select</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/8020select.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/expo/8020select.html</link>
                <guid>/expo/8020select</guid>
                <pubDate>2013-02-01T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Kippt</title>
                <description>&lt;p&gt;&lt;img src=&quot;/screenshots/kippt.jpg&quot; /&gt;&lt;/p&gt;
</description>
                <link>/expo/kippt.html</link>
                <guid>/expo/kippt</guid>
                <pubDate>2012-09-26T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Combo filters, sorting, AND hash history</title>
                <description>&lt;section id=&quot;copy&quot;&gt;
  &lt;p&gt;Filters can be combined. In addition to filtering for just &lt;code&gt;.red&lt;/code&gt; or &lt;code&gt;.tall&lt;/code&gt;, you can pass in a filter selector of both: &lt;code&gt;.red.tall&lt;/code&gt;.&lt;/p&gt;
&lt;/section&gt;

&lt;section id=&quot;options&quot; class=&quot;clearfix combo-filters&quot;&gt;
  &lt;div class=&quot;clearfix&quot;&gt;
    &lt;h3&gt;Filters&lt;/h3&gt;

    
      &lt;div class=&quot;option-combo color&quot;&gt;
        &lt;h4&gt;color&lt;/h4&gt;
        &lt;ul class=&quot;filter option-set clearfix &quot; data-filter-group=&quot;color&quot;&gt; 
          &lt;li&gt;&lt;a href=&quot;#filter-color-any&quot; data-filter-value=&quot;&quot; class=&quot;selected&quot;&gt;any&lt;/a&gt;
          
            &lt;li&gt;&lt;a href=&quot;#filter-color-red&quot; data-filter-value=&quot;.red&quot;&gt;red&lt;/a&gt;
          
            &lt;li&gt;&lt;a href=&quot;#filter-color-blue&quot; data-filter-value=&quot;.blue&quot;&gt;blue&lt;/a&gt;
          
            &lt;li&gt;&lt;a href=&quot;#filter-color-yellow&quot; data-filter-value=&quot;.yellow&quot;&gt;yellow&lt;/a&gt;
          
        &lt;/ul&gt;
      &lt;/div&gt;
    
      &lt;div class=&quot;option-combo size&quot;&gt;
        &lt;h4&gt;size&lt;/h4&gt;
        &lt;ul class=&quot;filter option-set clearfix &quot; data-filter-group=&quot;size&quot;&gt; 
          &lt;li&gt;&lt;a href=&quot;#filter-size-any&quot; data-filter-value=&quot;&quot; class=&quot;selected&quot;&gt;any&lt;/a&gt;
          
            &lt;li&gt;&lt;a href=&quot;#filter-size-small&quot; data-filter-value=&quot;.small&quot;&gt;small&lt;/a&gt;
          
            &lt;li&gt;&lt;a href=&quot;#filter-size-wide&quot; data-filter-value=&quot;.wide&quot;&gt;wide&lt;/a&gt;
          
            &lt;li&gt;&lt;a href=&quot;#filter-size-tall&quot; data-filter-value=&quot;.tall&quot;&gt;tall&lt;/a&gt;
          
            &lt;li&gt;&lt;a href=&quot;#filter-size-big&quot; data-filter-value=&quot;.big&quot;&gt;big&lt;/a&gt;
          
        &lt;/ul&gt;
      &lt;/div&gt;
    
      &lt;div class=&quot;option-combo shape&quot;&gt;
        &lt;h4&gt;shape&lt;/h4&gt;
        &lt;ul class=&quot;filter option-set clearfix &quot; data-filter-group=&quot;shape&quot;&gt; 
          &lt;li&gt;&lt;a href=&quot;#filter-shape-any&quot; data-filter-value=&quot;&quot; class=&quot;selected&quot;&gt;any&lt;/a&gt;
          
            &lt;li&gt;&lt;a href=&quot;#filter-shape-round&quot; data-filter-value=&quot;.round&quot;&gt;round&lt;/a&gt;
          
            &lt;li&gt;&lt;a href=&quot;#filter-shape-square&quot; data-filter-value=&quot;.square&quot;&gt;square&lt;/a&gt;
          
        &lt;/ul&gt;
      &lt;/div&gt;
    
  &lt;/div&gt;

  &lt;h3&gt;Sort&lt;/h3&gt;
  
    &lt;ul id=&quot;sort-by&quot; class=&quot;option-set clearfix&quot; data-option-key=&quot;sortBy&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=original-order&quot; data-option-value=&quot;original-order&quot; class=&quot;selected&quot; data&gt;original-order&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=color&quot; data-option-value=&quot;color&quot;&gt;color&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=size&quot; data-option-value=&quot;size&quot;&gt;size&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=shape&quot; data-option-value=&quot;shape&quot;&gt;shape&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;


&lt;/section&gt; &lt;!-- #options --&gt;

&lt;div id=&quot;container&quot; class=&quot;clearfix&quot;&gt;
  
    
      
        &lt;div class=&quot;color-shape small round red&quot; data-size=&quot;small&quot; data-color=&quot;red&quot; data-shape=&quot;round&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape small round blue&quot; data-size=&quot;small&quot; data-color=&quot;blue&quot; data-shape=&quot;round&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape small round yellow&quot; data-size=&quot;small&quot; data-color=&quot;yellow&quot; data-shape=&quot;round&quot;&gt;&lt;/div&gt;
      
    
      
        &lt;div class=&quot;color-shape small square red&quot; data-size=&quot;small&quot; data-color=&quot;red&quot; data-shape=&quot;square&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape small square blue&quot; data-size=&quot;small&quot; data-color=&quot;blue&quot; data-shape=&quot;square&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape small square yellow&quot; data-size=&quot;small&quot; data-color=&quot;yellow&quot; data-shape=&quot;square&quot;&gt;&lt;/div&gt;
      
    
  
    
      
        &lt;div class=&quot;color-shape wide round red&quot; data-size=&quot;wide&quot; data-color=&quot;red&quot; data-shape=&quot;round&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape wide round blue&quot; data-size=&quot;wide&quot; data-color=&quot;blue&quot; data-shape=&quot;round&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape wide round yellow&quot; data-size=&quot;wide&quot; data-color=&quot;yellow&quot; data-shape=&quot;round&quot;&gt;&lt;/div&gt;
      
    
      
        &lt;div class=&quot;color-shape wide square red&quot; data-size=&quot;wide&quot; data-color=&quot;red&quot; data-shape=&quot;square&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape wide square blue&quot; data-size=&quot;wide&quot; data-color=&quot;blue&quot; data-shape=&quot;square&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape wide square yellow&quot; data-size=&quot;wide&quot; data-color=&quot;yellow&quot; data-shape=&quot;square&quot;&gt;&lt;/div&gt;
      
    
  
    
      
        &lt;div class=&quot;color-shape tall round red&quot; data-size=&quot;tall&quot; data-color=&quot;red&quot; data-shape=&quot;round&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape tall round blue&quot; data-size=&quot;tall&quot; data-color=&quot;blue&quot; data-shape=&quot;round&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape tall round yellow&quot; data-size=&quot;tall&quot; data-color=&quot;yellow&quot; data-shape=&quot;round&quot;&gt;&lt;/div&gt;
      
    
      
        &lt;div class=&quot;color-shape tall square red&quot; data-size=&quot;tall&quot; data-color=&quot;red&quot; data-shape=&quot;square&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape tall square blue&quot; data-size=&quot;tall&quot; data-color=&quot;blue&quot; data-shape=&quot;square&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape tall square yellow&quot; data-size=&quot;tall&quot; data-color=&quot;yellow&quot; data-shape=&quot;square&quot;&gt;&lt;/div&gt;
      
    
  
    
      
        &lt;div class=&quot;color-shape big round red&quot; data-size=&quot;big&quot; data-color=&quot;red&quot; data-shape=&quot;round&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape big round blue&quot; data-size=&quot;big&quot; data-color=&quot;blue&quot; data-shape=&quot;round&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape big round yellow&quot; data-size=&quot;big&quot; data-color=&quot;yellow&quot; data-shape=&quot;round&quot;&gt;&lt;/div&gt;
      
    
      
        &lt;div class=&quot;color-shape big square red&quot; data-size=&quot;big&quot; data-color=&quot;red&quot; data-shape=&quot;square&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape big square blue&quot; data-size=&quot;big&quot; data-color=&quot;blue&quot; data-shape=&quot;square&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape big square yellow&quot; data-size=&quot;big&quot; data-color=&quot;yellow&quot; data-shape=&quot;square&quot;&gt;&lt;/div&gt;
      
    
  
  
  
  
    
      
        &lt;div class=&quot;color-shape small round red&quot; data-size=&quot;small&quot; data-color=&quot;red&quot; data-shape=&quot;round&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape wide round red&quot; data-size=&quot;wide&quot; data-color=&quot;red&quot; data-shape=&quot;round&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape tall round red&quot; data-size=&quot;tall&quot; data-color=&quot;red&quot; data-shape=&quot;round&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape big round red&quot; data-size=&quot;big&quot; data-color=&quot;red&quot; data-shape=&quot;round&quot;&gt;&lt;/div&gt;
      
    
      
        &lt;div class=&quot;color-shape small square red&quot; data-size=&quot;small&quot; data-color=&quot;red&quot; data-shape=&quot;square&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape wide square red&quot; data-size=&quot;wide&quot; data-color=&quot;red&quot; data-shape=&quot;square&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape tall square red&quot; data-size=&quot;tall&quot; data-color=&quot;red&quot; data-shape=&quot;square&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape big square red&quot; data-size=&quot;big&quot; data-color=&quot;red&quot; data-shape=&quot;square&quot;&gt;&lt;/div&gt;
      
    
  
    
      
        &lt;div class=&quot;color-shape small round blue&quot; data-size=&quot;small&quot; data-color=&quot;blue&quot; data-shape=&quot;round&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape wide round blue&quot; data-size=&quot;wide&quot; data-color=&quot;blue&quot; data-shape=&quot;round&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape tall round blue&quot; data-size=&quot;tall&quot; data-color=&quot;blue&quot; data-shape=&quot;round&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape big round blue&quot; data-size=&quot;big&quot; data-color=&quot;blue&quot; data-shape=&quot;round&quot;&gt;&lt;/div&gt;
      
    
      
        &lt;div class=&quot;color-shape small square blue&quot; data-size=&quot;small&quot; data-color=&quot;blue&quot; data-shape=&quot;square&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape wide square blue&quot; data-size=&quot;wide&quot; data-color=&quot;blue&quot; data-shape=&quot;square&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape tall square blue&quot; data-size=&quot;tall&quot; data-color=&quot;blue&quot; data-shape=&quot;square&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape big square blue&quot; data-size=&quot;big&quot; data-color=&quot;blue&quot; data-shape=&quot;square&quot;&gt;&lt;/div&gt;
      
    
  
    
      
        &lt;div class=&quot;color-shape small round yellow&quot; data-size=&quot;small&quot; data-color=&quot;yellow&quot; data-shape=&quot;round&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape wide round yellow&quot; data-size=&quot;wide&quot; data-color=&quot;yellow&quot; data-shape=&quot;round&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape tall round yellow&quot; data-size=&quot;tall&quot; data-color=&quot;yellow&quot; data-shape=&quot;round&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape big round yellow&quot; data-size=&quot;big&quot; data-color=&quot;yellow&quot; data-shape=&quot;round&quot;&gt;&lt;/div&gt;
      
    
      
        &lt;div class=&quot;color-shape small square yellow&quot; data-size=&quot;small&quot; data-color=&quot;yellow&quot; data-shape=&quot;square&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape wide square yellow&quot; data-size=&quot;wide&quot; data-color=&quot;yellow&quot; data-shape=&quot;square&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape tall square yellow&quot; data-size=&quot;tall&quot; data-color=&quot;yellow&quot; data-shape=&quot;square&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape big square yellow&quot; data-size=&quot;big&quot; data-color=&quot;yellow&quot; data-shape=&quot;square&quot;&gt;&lt;/div&gt;
      
    
  
  
&lt;/div&gt; &lt;!-- #container --&gt;

&lt;script src=&quot;../js/jquery-1.7.1.min.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;../js/jquery.ba-bbq.min.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;../jquery.isotope.min.js&quot;&gt;&lt;/script&gt;
&lt;script&gt;
$(function(){
    
  var $container = $(&#39;#container&#39;);
  var initialOptions = {
    itemSelector : &#39;.color-shape&#39;,
    masonry: {
      columnWidth: 80
    },
    getSortData: {
      color: function( $elem ) {
        return $elem.attr(&#39;data-color&#39;);
      },
      shape: function( $elem ) {
        return $elem.attr(&#39;data-shape&#39;);
      },
      size: function( $elem ) {
        return $elem.attr(&#39;data-size&#39;);
      }
    }
  };
  // build a hash for all our options
  var options = {
    // special hash for combination filters
    comboFilters: {}
  };


  // filter buttons
  $(&#39;.filter&#39;).on( &#39;click&#39;, &#39;a&#39;, function( event ) {
    event.preventDefault();
    var $this = $(this);
    // don&#39;t proceed if already selected
    if ( $this.hasClass(&#39;selected&#39;) ) {
      return false;
    }

    // console.log(&#39;hello world&#39;);
    var $optionSet = $this.parents(&#39;.option-set&#39;);
    var group = $optionSet.attr(&#39;data-filter-group&#39;);
    options.comboFilters[ group ] = $this.attr(&#39;data-filter-value&#39;);
    $.bbq.pushState( options );
  });

  var $sortBy = $(&#39;#sort-by&#39;).on( &#39;click&#39;, &#39;a&#39;, function( event ) {
    event.preventDefault();
    var $this = $(this);
    // don&#39;t proceed if already selected
    if ( $this.hasClass(&#39;selected&#39;) ) {
      return false;
    }
    options.sortBy = $this.attr(&#39;data-option-value&#39;);
    // console.log( options );
    $.bbq.pushState( options );
  });

  function selectLink( $link ) {
    $link.parents(&#39;.option-set&#39;).find(&#39;.selected&#39;).removeClass(&#39;selected&#39;);
    $link.addClass(&#39;selected&#39;)
  }

  var location = window.location;
  var $comboFilterOptionSets = $(&#39;.combo-filters .option-set&#39;);


  function getComboFilterSelector( comboFilters ) {
    // build filter
    var isoFilters = [];
    var filterValue, $link, $optionSet;
    for ( var prop in comboFilters ) {
      filterValue = comboFilters[ prop ];
      isoFilters.push( filterValue );
      // change selected combo filter link
      $optionSet = $comboFilterOptionSets.filter(&#39;[data-filter-group=&quot;&#39; + prop + &#39;&quot;]&#39;);
      $link = $optionSet.find(&#39;a[data-filter-value=&quot;&#39; + filterValue + &#39;&quot;]&#39;);
      selectLink( $link );
    }
    var selector = isoFilters.join(&#39;&#39;);
    return selector;
  }

  $( window ).on( &#39;hashchange&#39;, function() {
    // get options from hash
    if ( location.hash ) {
      $.extend( options, $.deparam.fragment( location.hash, true ) );
    }
    // build options from hash and initial options
    var isoOptions = $.extend( {}, initialOptions, options );

    if ( options.comboFilters ) {
      isoOptions.filter = getComboFilterSelector( options.comboFilters );
    }

    // change selected link for sortBy
    if ( options.sortBy ) {
      var $link = $sortBy.find(&#39;a[data-option-value=&quot;&#39; + options.sortBy + &#39;&quot;]&#39;);
      selectLink( $link );
    }

    $container.isotope( isoOptions );
  })
    // trigger hashchange to capture initial hash options
    .trigger( &#39;hashchange&#39; );

});
  
&lt;/script&gt;

</description>
                <link>/tests/combo-sort-history.html</link>
                <guid>/tests/combo-sort-history</guid>
                <pubDate>2012-08-11T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>onLayout</title>
                <description>&lt;section id=&quot;copy&quot;&gt;
  &lt;p&gt;Tests that &lt;a href=&quot;../docs/options.html#onlayout&quot;&gt;onLayout callback&lt;/a&gt; is triggering properly, after animation/transition has completed.&lt;/p&gt;

&lt;/section&gt;

&lt;section id=&quot;options&quot; class=&quot;clearfix&quot;&gt;

  
      &lt;h3&gt;Filter&lt;/h3&gt;

      &lt;ul id=&quot;filters&quot; class=&quot;option-set clearfix&quot; data-option-key=&quot;filter&quot;&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.metal&quot; class=&quot;selected&quot;&gt;Aktuell&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.nonmetal&quot;&gt;Veranstaltungen&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.alkali, .alkaline-earth&quot;&gt;Rezepte&lt;/a&gt;&lt;/li&gt;
        
        
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.transition&quot;&gt;transition&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.post-transition&quot;&gt;post-transition&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.inner-transition&quot;&gt;inner-transition&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;:not(.transition)&quot;&gt;not transition&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.metal:not(.transition)&quot;&gt;metal but not transition&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;*&quot;&gt;Alles zeigen&lt;/a&gt;&lt;/li&gt;
        
      &lt;/ul&gt;


  
    &lt;h3&gt;Sortierung&lt;/h3&gt;

    &lt;ul id=&quot;sort-by&quot; class=&quot;option-set clearfix&quot; data-option-key=&quot;sortBy&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=original-order&quot; data-option-value=&quot;original-order&quot; class=&quot;selected&quot; data&gt;Original&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=name&quot; data-option-value=&quot;name&quot;&gt;Name&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=symbol&quot; data-option-value=&quot;symbol&quot;&gt;Symbol&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=number&quot; data-option-value=&quot;number&quot;&gt;Nummer&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=weight&quot;  data-option-value=&quot;weight&quot;&gt;Gewicht&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=category&quot; data-option-value=&quot;category&quot;&gt;Kategorie&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=random&quot; data-option-value=&quot;random&quot;&gt;Zufall&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;

    &lt;h3&gt;Sortierreihenfolge&lt;/h3&gt;

    &lt;ul id=&quot;sort-direction&quot; class=&quot;option-set clearfix&quot; data-option-key=&quot;sortAscending&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;#sortAscending=true&quot; data-option-value=&quot;true&quot; class=&quot;selected&quot;&gt;Aufsteigend&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortAscending=false&quot; data-option-value=&quot;false&quot;&gt;Absteigend&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;


  &lt;h3&gt;Etc&lt;/h3&gt;

  &lt;ul id=&quot;etc&quot; class=&quot;clearfix&quot;&gt;
    &lt;li id=&quot;toggle-sizes&quot;&gt;&lt;a href=&quot;#toggle-sizes&quot;&gt;Toggle variable sizes&lt;/a&gt;&lt;/li&gt;
    &lt;li id=&quot;insert&quot;&gt;&lt;a href=&quot;#insert&quot;&gt;Insert new elements&lt;/a&gt;&lt;/li&gt;
    &lt;li id=&quot;append&quot;&gt;&lt;a href=&#39;#append&#39;&gt;Append new elements&lt;/a&gt;&lt;/li&gt;
    &lt;li id=&quot;shuffle&quot;&gt;&lt;a href=&#39;#shuffle&#39;&gt;Shuffle&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;

&lt;/section&gt; &lt;!-- #options --&gt;

&lt;div id=&quot;container&quot; class=&quot;clickable variable-sizes clearfix&quot;&gt;
  
&lt;/div&gt; &lt;!-- #container --&gt;


&lt;script src=&quot;../js/vendor/jquery.min.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;../js/jquery.isotope.min.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;../js/fake-element.js&quot;&gt;&lt;/script&gt;
&lt;script&gt;

  $(function(){
    
    var $container = $(&#39;#container&#39;);
    
    
      // add randomish size classes
      $container.find(&#39;.element&#39;).each(function(){
        var $this = $(this),
            number = parseInt( $this.find(&#39;.number&#39;).text(), 10 );
        if ( number % 7 % 2 === 1 ) {
          $this.addClass(&#39;width2&#39;);
        }
        if ( number % 3 === 0 ) {
          $this.addClass(&#39;height2&#39;);
        }
      });
    
    var colors = [&#39;red&#39;, &#39;green&#39;, &#39;blue&#39;, &#39;yellow&#39;, &#39;purple&#39;, &#39;orange&#39;, &#39;white&#39;],
        colorI = 0;

    function changeBGColor( $elems, instance ) {
      var color = colors[ colorI % colors.length ];
      $container.css({ background: color })
      colorI++;
      // console.log( $elems.length, instance.$filteredAtoms.length );
    }

    function lmk() {
      // console.log(&#39;callback still works&#39;);
    }

    $container.isotope({
      itemSelector : &#39;.element&#39;,
      onLayout: changeBGColor,
      masonry : {
        columnWidth : 120
      },
      masonryHorizontal : {
        rowHeight: 120
      },
      cellsByRow : {
        columnWidth : 240,
        rowHeight : 240
      },
      cellsByColumn : {
        columnWidth : 240,
        rowHeight : 240
      },
      getSortData : {
        symbol : function( $elem ) {
          return $elem.attr(&#39;data-symbol&#39;);
        },
        category : function( $elem ) {
          return $elem.attr(&#39;data-category&#39;);
        },
        number : function( $elem ) {
          return parseInt( $elem.find(&#39;.number&#39;).text(), 10 );
        },
        weight : function( $elem ) {
          return parseFloat( $elem.find(&#39;.weight&#39;).text().replace( /[\(\)]/g, &#39;&#39;) );
        },
        name : function ( $elem ) {
          return $elem.find(&#39;.name&#39;).text();
        }
      }
    }, lmk );
      

    var $optionSets = $(&#39;#options .option-set&#39;),
        $optionLinks = $optionSets.find(&#39;a&#39;);
    
    $optionLinks.click(function(){
      var $this = $(this);
      // don&#39;t proceed if already selected
      if ( $this.hasClass(&#39;selected&#39;) ) {
        return false;
      }
      var $optionSet = $this.parents(&#39;.option-set&#39;);
      $optionSet.find(&#39;.selected&#39;).removeClass(&#39;selected&#39;);
      $this.addClass(&#39;selected&#39;);

      // make option object dynamically, i.e. { filter: &#39;.my-filter-class&#39; }
      var options = {},
          key = $optionSet.attr(&#39;data-option-key&#39;),
          value = $this.attr(&#39;data-option-value&#39;);
      // parse &#39;false&#39; as false boolean
      value = value === &#39;false&#39; ? false : value;
      options[ key ] = value;
      if ( key === &#39;layoutMode&#39; &amp;&amp; typeof changeLayoutMode === &#39;function&#39; ) {
        // changes in layout modes need extra logic
        changeLayoutMode( $this, options )
      } else {
        // otherwise, apply new options
        $container.isotope( options, lmk );
      }
      
      return false;
    });



    $(&#39;#insert a&#39;).click(function(){
      var $newEls = $( fakeElement.getGroup() );
      $container.isotope( &#39;insert&#39;, $newEls, lmk );

      return false;
    });

    $(&#39;#append a&#39;).click(function(){
      var $newEls = $( fakeElement.getGroup() );
      $container.append( $newEls ).isotope( &#39;appended&#39;, $newEls, lmk );

      return false;
    });


    // change size of clicked element
    $container.delegate( &#39;.element&#39;, &#39;click&#39;, function(){
      $(this).toggleClass(&#39;large&#39;);
      $container.isotope( &#39;reLayout&#39;, lmk );
    });

    // toggle variable sizes of all elements
    $(&#39;#toggle-sizes&#39;).find(&#39;a&#39;).click(function(){
      $container
        .toggleClass(&#39;variable-sizes&#39;)
        .isotope( &#39;reLayout&#39;, lmk );
      return false;
    });


    var $sortBy = $(&#39;#sort-by&#39;);
    $(&#39;#shuffle a&#39;).click(function(){
      $container.isotope( &#39;shuffle&#39;, lmk );
      $sortBy.find(&#39;.selected&#39;).removeClass(&#39;selected&#39;);
      $sortBy.find(&#39;[data-option-value=&quot;random&quot;]&#39;).addClass(&#39;selected&#39;);
      return false;
    });
    
  });
&lt;/script&gt;
</description>
                <link>/tests/onlayout.html</link>
                <guid>/tests/onlayout</guid>
                <pubDate>2012-02-07T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Masonry Column Shift</title>
                <description>&lt;style&gt;
  .shifty-item {
    width: 210px;
    margin: 10px;
    float: left;
    background: #AAA;
    border: 5px solid white;
  }

  .shifty-item:hover { z-index: 10; }

  .shifty-item.h1 { height: 140px; background: #66F; }
  .shifty-item.h2 { height: 200px; background: #F66; }
  .shifty-item.h3 { height: 240px; background: #6F6; }
  .shifty-item.h4 { height: 280px; background: #FF6; }

&lt;/style&gt;

&lt;section id=&quot;copy&quot;&gt;
  &lt;p&gt;Custom layout mode &lt;code&gt;masonryColumnShift&lt;/code&gt;. Enabled columns of a Masonry layout to be shifted and not affect other columns. After the size of an item element has changed, you can trigger a special &lt;code&gt;columnShiftOfItem&lt;/code&gt; method that will push the column down. This layout only works with item elements that have the same width&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$container&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#container&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;$container&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isotope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;itemSelector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;.shifty-item&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;layoutMode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;masonryColumnShift&amp;#39;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;$container&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;.shifty-item&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hover&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;css&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;+=100&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// note that element is passed in, not jQuery object&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;$container&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isotope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;shiftColumnOfItem&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;css&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;-=100&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;$container&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isotope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;shiftColumnOfItem&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/section&gt;


&lt;div id=&quot;container&quot;&gt;
  &lt;div class=&quot;shifty-item h1&quot;&gt;&lt;/div&gt;
  &lt;div class=&quot;shifty-item h2&quot;&gt;&lt;/div&gt;
  &lt;div class=&quot;shifty-item h1&quot;&gt;&lt;/div&gt;
  &lt;div class=&quot;shifty-item h4&quot;&gt;&lt;/div&gt;
  &lt;div class=&quot;shifty-item h2&quot;&gt;&lt;/div&gt;
  &lt;div class=&quot;shifty-item h3&quot;&gt;&lt;/div&gt;
  &lt;div class=&quot;shifty-item h1&quot;&gt;&lt;/div&gt;
  &lt;div class=&quot;shifty-item h2&quot;&gt;&lt;/div&gt;
  &lt;div class=&quot;shifty-item h1&quot;&gt;&lt;/div&gt;
  &lt;div class=&quot;shifty-item h4&quot;&gt;&lt;/div&gt;
  &lt;div class=&quot;shifty-item h1&quot;&gt;&lt;/div&gt;
  &lt;div class=&quot;shifty-item h1&quot;&gt;&lt;/div&gt;
  &lt;div class=&quot;shifty-item h2&quot;&gt;&lt;/div&gt;
  &lt;div class=&quot;shifty-item h4&quot;&gt;&lt;/div&gt;
  &lt;div class=&quot;shifty-item h1&quot;&gt;&lt;/div&gt;
  &lt;div class=&quot;shifty-item h2&quot;&gt;&lt;/div&gt;
  &lt;div class=&quot;shifty-item h3&quot;&gt;&lt;/div&gt;
  &lt;div class=&quot;shifty-item h1&quot;&gt;&lt;/div&gt;
  &lt;div class=&quot;shifty-item h2&quot;&gt;&lt;/div&gt;
  &lt;div class=&quot;shifty-item h1&quot;&gt;&lt;/div&gt;
  &lt;div class=&quot;shifty-item h4&quot;&gt;&lt;/div&gt;
  &lt;div class=&quot;shifty-item h1&quot;&gt;&lt;/div&gt;
  &lt;div class=&quot;shifty-item h1&quot;&gt;&lt;/div&gt;
  &lt;div class=&quot;shifty-item h2&quot;&gt;&lt;/div&gt;
  &lt;div class=&quot;shifty-item h1&quot;&gt;&lt;/div&gt;
  &lt;div class=&quot;shifty-item h1&quot;&gt;&lt;/div&gt;
  &lt;div class=&quot;shifty-item h2&quot;&gt;&lt;/div&gt;
  &lt;div class=&quot;shifty-item h4&quot;&gt;&lt;/div&gt;
  &lt;div class=&quot;shifty-item h1&quot;&gt;&lt;/div&gt;
  &lt;div class=&quot;shifty-item h2&quot;&gt;&lt;/div&gt;
  &lt;div class=&quot;shifty-item h3&quot;&gt;&lt;/div&gt;
  &lt;div class=&quot;shifty-item h1&quot;&gt;&lt;/div&gt;
  &lt;div class=&quot;shifty-item h2&quot;&gt;&lt;/div&gt;
  &lt;div class=&quot;shifty-item h1&quot;&gt;&lt;/div&gt;
  &lt;div class=&quot;shifty-item h4&quot;&gt;&lt;/div&gt;
  &lt;div class=&quot;shifty-item h1&quot;&gt;&lt;/div&gt;
  &lt;div class=&quot;shifty-item h1&quot;&gt;&lt;/div&gt;
  &lt;div class=&quot;shifty-item h2&quot;&gt;&lt;/div&gt;

&lt;/div&gt; &lt;!-- #container --&gt;


&lt;script src=&quot;../js/vendor/jquery.min.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;../js/jquery.isotope.min.js&quot;&gt;&lt;/script&gt;
&lt;script&gt;


  // -------------------------- Masonry Column Shift -------------------------- //
  
  // custom layout mode
  $.Isotope.prototype._masonryColumnShiftReset = function() {
    // layout-specific props
    var props = this.masonryColumnShift = {
      columnBricks: []
    };
    // FIXME shouldn&#39;t have to call this again
    this._getSegments();
    var i = props.cols;
    props.colYs = [];
    while (i--) {
      props.colYs.push( 0 );
      // push an array, for bricks in each column
      props.columnBricks.push([])
    }
  };
  
  $.Isotope.prototype._masonryColumnShiftLayout = function( $elems ) {
    var instance = this,
        props = instance.masonryColumnShift;
    $elems.each(function(){
      var $brick  = $(this);
      var setY = props.colYs;

      // get the minimum Y value from the columns
      var minimumY = Math.min.apply( Math, setY ),
          shortCol = 0;

      // Find index of short column, the first from the left
      for (var i=0, len = setY.length; i &lt; len; i++) {
        if ( setY[i] === minimumY ) {
          shortCol = i;
          break;
        }
      }

      // position the brick
      var x = props.columnWidth * shortCol,
          y = minimumY;
      instance._pushPosition( $brick, x, y );
      // keep track of columnIndex
      $.data( this, &#39;masonryColumnIndex&#39;, i );
      props.columnBricks[i].push( this );

      // apply setHeight to necessary columns
      var setHeight = minimumY + $brick.outerHeight(true),
          setSpan = props.cols + 1 - len;
      for ( i=0; i &lt; setSpan; i++ ) {
        props.colYs[ shortCol + i ] = setHeight;
      }

    });
  };
  
 $.Isotope.prototype._masonryColumnShiftGetContainerSize = function() {
    var containerHeight = Math.max.apply( Math, this.masonryColumnShift.colYs );
    return { height: containerHeight };
  };

  $.Isotope.prototype._masonryColumnShiftResizeChanged = function() {
    return this._checkIfSegmentsChanged();
  };
  
  $.Isotope.prototype.shiftColumnOfItem = function( itemElem, callback ) {
    
    var columnIndex = $.data( itemElem, &#39;masonryColumnIndex&#39; );
    
    // don&#39;t proceed if no columnIndex
    if ( !isFinite(columnIndex) ) {
      return;
    }

    var props = this.masonryColumnShift;
    var columnBricks = props.columnBricks[ columnIndex ];
    var $brick;
    var x = props.columnWidth * columnIndex;
    var y = 0;
    for (var i=0, len = columnBricks.length; i &lt; len; i++) {
      $brick = $( columnBricks[i] );
      this._pushPosition( $brick, x, y );
      y += $brick.outerHeight(true);
    }

    // set the size of the container
    if ( this.options.resizesContainer ) {
      var containerStyle = this._masonryColumnShiftGetContainerSize();
      containerStyle.height = Math.max( y, containerStyle.height );
      this.styleQueue.push({ $el: this.element, style: containerStyle });
    }

    this._processStyleQueue( $(columnBricks), callback )

  };

  $(function(){

    var $container = $(&#39;#container&#39;);

    $container.isotope({
      itemSelector: &#39;.shifty-item&#39;,
      layoutMode: &#39;masonryColumnShift&#39;
    });

    $container.find(&#39;.shifty-item&#39;).hover(
      function() {
        $(this).css({ height: &quot;+=100&quot; });
        // note that element is passed in, not jQuery object
        $container.isotope( &#39;shiftColumnOfItem&#39;, this );
      },
      function() {
        $(this).css({ height: &quot;-=100&quot; });
        $container.isotope( &#39;shiftColumnOfItem&#39;, this );
      }
    );

  });
&lt;/script&gt;</description>
                <link>/custom-layout-modes/masonry-column-shift.html</link>
                <guid>/custom-layout-modes/masonry-column-shift</guid>
                <pubDate>2012-01-03T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Removing</title>
                <description>  &lt;section id=&quot;copy&quot;&gt;
    &lt;p&gt;Removing items filters them out then removes them from the page. Click on a button or the item itself to remove them.&lt;/p&gt;
  &lt;/section&gt;
  

  &lt;section id=&quot;options&quot; class=&quot;clearfix&quot;&gt;
    
    
    &lt;h3&gt;Remove&lt;/h3&gt;

    &lt;ul id=&quot;removable&quot; class=&quot;option-set clearfix&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;#remove&quot; data-option-value=&quot;.metal&quot;&gt;metal&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#remove&quot; data-option-value=&quot;.transition&quot;&gt;transition&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#remove&quot; data-option-value=&quot;.post-transition&quot;&gt;post-transition&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#remove&quot; data-option-value=&quot;.nonmetal&quot;&gt;nonmetal&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#remove&quot; data-option-value=&quot;.alkali, .alkaline-earth&quot;&gt;alkali and alkaline-earth&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#remove&quot; data-option-value=&quot;.metalloid&quot;&gt;metalloid&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;

    &lt;ul id=&quot;add-remove&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;#add-remove&quot;&gt;Add / remove&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;

  &lt;/section&gt; &lt;!-- #options --&gt;
  
  &lt;div id=&quot;container&quot; class=&quot;variable-sizes clickable clearfix&quot;&gt;
    
  &lt;/div&gt; &lt;!-- #container --&gt;
  
  &lt;script src=&quot;../js/vendor/jquery.min.js&quot;&gt;&lt;/script&gt;
  &lt;script src=&quot;../js/jquery.isotope.min.js&quot;&gt;&lt;/script&gt;
  &lt;script src=&quot;../js/fake-element.js&quot;&gt;&lt;/script&gt;
  &lt;script&gt;
    $(function(){

      var $container = $(&#39;#container&#39;);

      $container.isotope({
        itemSelector : &#39;.element&#39;
      });

      $(&#39;#removable a&#39;).click( function( jQEvent ) {
        var selector = $(this).attr(&#39;data-option-value&#39;);
        var $removable = $container.find( selector );
        $container.isotope( &#39;remove&#39;, $removable );
        jQEvent.preventDefault();
      });

      $(&#39;#add-remove a&#39;).click( function( jQEvent ) {
        var $newEls = $( fakeElement.getGroup() );
        var $firstTwoElems = $container.data(&#39;isotope&#39;)
          .$filteredAtoms.filter( function( i ) {
            return i &lt; 2;
          });

        $container
          .isotope( &#39;insert&#39;, $newEls )
          .isotope( &#39;remove&#39;, $firstTwoElems, function() {
            // console.log(&#39;items removed&#39;)
          });
        jQEvent.preventDefault();
      });

      // remove item if clicked
      $container.delegate( &#39;.element&#39;, &#39;click&#39;, function(){
        $container.isotope( &#39;remove&#39;, $(this) );
      });

    });
  &lt;/script&gt;
  
</description>
                <link>/demos/removing.html</link>
                <guid>/demos/removing</guid>
                <pubDate>2011-12-22T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>License</title>
                <description>&lt;p&gt;Isotope may be used in commercial projects and applications with the one-time purchase of a commercial license.&lt;/p&gt;

&lt;h3 id=&quot;open-source-license&quot;&gt;Open source license&lt;/h3&gt;

&lt;p&gt;For non-commercial, personal, or open source projects and applications, you may use Isotope under the terms of the MIT License. You may use Isotope for free.&lt;/p&gt;

&lt;h3 id=&quot;what-is-commercial-considered&quot;&gt;What is commercial considered?&lt;/h3&gt;

&lt;p&gt;If you are paid to do your job, and part of your job is implementing Isotope, a commercial license is required.&lt;/p&gt;

&lt;h2 id=&quot;commercial-licensing&quot;&gt;Commercial licensing&lt;/h2&gt;

&lt;p&gt;Purchasing accepts most credit cards and takes seconds. Once purchased, you’ll receive a commercial license PDF and you will be all set to use Isotope in your commercial applications.&lt;/p&gt;

&lt;p&gt;With the purchase of a commercial license:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;You may use Isotope in as many commercial applications you like.&lt;/li&gt;
  &lt;li&gt;You may use Isotope in your own commercial applications and products. For example: premium WordPress, Tumblr, or other CMS themes, plugins and templates.&lt;/li&gt;
  &lt;li&gt;Customers and users of your products do &lt;strong&gt;not&lt;/strong&gt; need to purchase their own license – so long as they are not developing their own commercial products with Isotope.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The commercial license comes in two varieties:&lt;/p&gt;

&lt;h3 id=&quot;isotope-commercial-developer-license&quot;&gt;Isotope Commercial Developer License&lt;/h3&gt;

&lt;p&gt;The Isotope Commercial Developer License is for individual developers. This license is priced per developer. Each individual developer needs to purchase a separate license. A developer is someone who implements Isotope, and probably types &lt;code&gt;.isotope()&lt;/code&gt; at some point.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.simplegoods.co/i/WFOLIVJF&quot; class=&quot;simple-goods-btn&quot;&gt;Buy Developer License - $25.00&lt;/a&gt;
&lt;/p&gt;

&lt;h3 id=&quot;isotope-commercial-organization-license&quot;&gt;Isotope Commercial Organization License&lt;/h3&gt;

&lt;p&gt;The Isotope Commercial Organization License is for an organization with a team of developers. The license covers the entire team no matter how many developers are working on it.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.simplegoods.co/i/NWONVKMO&quot; class=&quot;simple-goods-btn&quot;&gt;Buy Organization License - $90.00&lt;/a&gt;
&lt;/p&gt;

&lt;h3 id=&quot;purchase-via-paypal&quot;&gt;Purchase via PayPal&lt;/h3&gt;

&lt;p&gt;If you’re having trouble using a credit card, try purchasing a license via PayPal:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://pul.ly/b/13620&quot;&gt;Buy Developer License via PayPal&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://pul.ly/b/36595&quot;&gt;Buy Organization License via PayPal&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;isotope-commercial-license-agreement&quot;&gt;Isotope Commercial License Agreement&lt;/h2&gt;

&lt;p&gt;This Commercial License Agreement is a binding legal agreement between you and Metafizzy LLC (&lt;strong&gt;Metafizzy&lt;/strong&gt;). By installing, copying, or using Isotope (the &lt;strong&gt;Software&lt;/strong&gt;), you agree to be bound by these terms of this Agreement.&lt;/p&gt;

&lt;h3 id=&quot;grant-of-license&quot;&gt;Grant of License&lt;/h3&gt;

&lt;p&gt;Subject to the payment of the fee required and the conditions herein, you are hereby granted a non-exclusive, non-transferable right to the Software to design and develop commercial applications (&lt;strong&gt;Applications&lt;/strong&gt;).&lt;/p&gt;

&lt;h4 id=&quot;developer-grant&quot;&gt;Developer Grant&lt;/h4&gt;

&lt;p&gt;The Isotope Commercial Developer License grants 1 license for you as 1 designated user (&lt;strong&gt;Developer&lt;/strong&gt;) to use the Software for the purpose of developing Applications. A Developer is an individual who implements the Software into Applications, most often writing the necessary code to do so. You must purchase another separate license to the Software for each and any additional Developer, or purchase a Isotope Commercial Organization License to cover your organization as a whole.&lt;/p&gt;

&lt;h4 id=&quot;organization-grant&quot;&gt;Organization Grant&lt;/h4&gt;

&lt;p&gt;The Isotope Commercial Organization License grants 1 license for your Organization as 1 designated, collective user (&lt;strong&gt;Organization&lt;/strong&gt;) to use the Software for the purpose of developing Applications. There is no limit or restriction of the number of Developers within your Organization who may develop Applications using the Software.&lt;/p&gt;

&lt;h4 id=&quot;usage&quot;&gt;Usage&lt;/h4&gt;

&lt;p&gt;You are granted the right to use and to modify the source code of the Software for use in Applications. There is no limit or restriction of the number of Applications which use the Software. You own any original work authored by you. Metafizzy continues to retain all copyright and other intellectual property rights in the Software. You are not permitted to move, remove, edit, or obscure any copyright, trademark, attribution, warning or disclaimer notices in the Software.&lt;/p&gt;

&lt;p&gt;You may use the Software only to create Applications that are significantly different than and do not compete with the Software. You are granted the license to distribute the Software as part of your Applications on a royalty-free basis. Users of your Applications are permitted to use the Software or your modifications of the Software as part of your Applications. Users do not need to purchase their own commercial license for the Software, so long as they are not acting as Developers, developing their own commercial Applications with the Software.&lt;/p&gt;

&lt;h3 id=&quot;warranties-and-remedies&quot;&gt;Warranties and Remedies&lt;/h3&gt;

&lt;p&gt;The Software is provided “as is”, without warranty of any kind, express or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. Metafizzy’s entire liability and your exclusive remedy under this agreement shall be return of the price paid for the Software.&lt;/p&gt;

&lt;script src=&quot;https://www.simplegoods.co/assets/embed.js&quot;&gt; &lt;/script&gt;

</description>
                <link>/docs/license.html</link>
                <guid>/docs/license</guid>
                <pubDate>2011-12-20T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Help</title>
                <description>&lt;h2 id=&quot;reporting-bugs-and-issues&quot;&gt;Reporting bugs and issues&lt;/h2&gt;

&lt;p&gt;Please read my &lt;a href=&quot;https://github.com/desandro/issues-agreement/#readme&quot;&gt;Issues Agreement&lt;/a&gt; and then &lt;a href=&quot;http://github.com/desandro/isotope/issues&quot;&gt;report bugs and issues on GitHub&lt;/a&gt;. &lt;/p&gt;

&lt;h2 id=&quot;support&quot;&gt;Support&lt;/h2&gt;

&lt;p&gt;Need help with getting Isotope up and running? Got a time-consuming problem you want to get solved quickly?  Get &lt;a href=&quot;http://codersclan.net/?repo_id=1&quot;&gt;Isotope support on CodersClan&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://codersclan.net/?repo_id=1&quot;&gt;&lt;img src=&quot;http://www.codersclan.net/gs_button/?repo_id=1&quot; width=&quot;200&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;additional-resources&quot;&gt;Additional resources&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;The &lt;a href=&quot;http://metafizzy.co/blog/&quot;&gt;Metafizzy blog&lt;/a&gt; has posts that cover specialized use cases&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.delicious.com/desandro/re:isotope+fiddle&quot;&gt;Various Isotope tests on jsFiddle&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/users/182183/desandro?tab=answers&quot;&gt;My answers on Stack Overflow&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://zootool.com/user/desandro/tag:isotope&quot;&gt;Sites using Isotope on Zootool&lt;/a&gt;, has screenshots&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.delicious.com/desandro/using:isotope&quot;&gt;Sites using Isotope on Delicious&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.delicious.com/desandro/re:isotope&quot;&gt;Miscelleanous Isotope content&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;unloaded-media&quot;&gt;Unloaded media&lt;/h2&gt;

&lt;p&gt;Most layout modes (i.e masonry, fitRows) need to measure the size of each item to appropriately account for its space in the layout. Unloaded media files like images and @font-face fonts can throw off layout and cause item elements to overlap one another. Ideally, Isotope layouts should be initialized after all inner content has loaded.&lt;/p&gt;

&lt;h2 id=&quot;images&quot;&gt;Images&lt;/h2&gt;

&lt;h3 id=&quot;inline-dimensions&quot;&gt;Inline dimensions&lt;/h3&gt;

&lt;p&gt;For images, the best method is to specify the width and height of images inline.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;img-file.jpg&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;280&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;160&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If you’re using a PHP-based CMS, you can use the &lt;a href=&quot;http://php.net/manual/en/function.getimagesize.php&quot;&gt;getimagesize&lt;/a&gt; function.&lt;/p&gt;

&lt;h3 id=&quot;imagesloaded-plugin&quot;&gt;imagesLoaded plugin&lt;/h3&gt;

&lt;p&gt;The next best solution is to use the &lt;a href=&quot;https://github.com/desandro/imagesloaded&quot;&gt;imagesLoaded plugin&lt;/a&gt; included with Isotope. It’s a small plugin that finds all the images in a context, and fires a callback function once all the images have loaded.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$container&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#container&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;$container&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;imagesLoaded&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$container&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isotope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// options...&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;windowload&quot;&gt;&lt;code&gt;$(window).load()&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;Another solution is to initialize Isotope inside &lt;code&gt;$(window).load()&lt;/code&gt; instead of &lt;code&gt;$(document).ready()&lt;/code&gt;. This will trigger Isotope after all the media on the page has loaded.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#container&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isotope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// options...&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;font-face-fonts&quot;&gt;@font-face fonts&lt;/h2&gt;

&lt;p&gt;Both Typekit and Google WebFont Loader provide font events to control scripts based on how fonts are loaded. &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://blog.typekit.com/2010/10/18/more-control-with-typekits-font-events/&quot;&gt;Typekit font events&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://code.google.com/apis/webfonts/docs/webfont_loader.html#Events&quot;&gt;Google WebFont Loader: Events&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;problems-with-css-transforms--css-transforms&quot;&gt;Problems with CSS transforms {: #css-transforms}&lt;/h2&gt;

&lt;p&gt;As the browser implementations of CSS tranforms are still a work-in-progress, they can cause buggy behavoir with other types of dynamic content.&lt;/p&gt;

&lt;div id=&quot;flash&quot;&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://dropshado.ws/post/4085720152/css-transforms-breaking-flash&quot;&gt;Flash content in Safari and Firefox&lt;/a&gt;, like YouTube or Vimeo videos, Flash ads, or Flash audio players.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;disabling-transforms&quot;&gt;Disabling transforms&lt;/h3&gt;

&lt;p&gt;Set &lt;a href=&quot;options.html#transformsenabled&quot;&gt;&lt;code&gt;transformsEnabled&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;false&lt;/code&gt;. This is an easy step to take when troubleshooting.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#container&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isotope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// options...&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;transformsEnabled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;getting-item-position&quot;&gt;Getting item position&lt;/h2&gt;

&lt;p&gt;CSS transforms will break previous patterns for getting the position of an item. See the &lt;a href=&quot;options.html#itempositiondataenabled&quot;&gt;&lt;code&gt;itemPositionDataEnabled&lt;/code&gt;&lt;/a&gt; option for a stop-gap.&lt;/p&gt;

&lt;h2 id=&quot;accessing-the-instance&quot;&gt;Accessing the instance&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://docs.jquery.com/UI_Developer_Guide#Internal_functions_.26_scopes_explained&quot;&gt;Similar to jQuery UI&lt;/a&gt;, Isotope stores a instance containing properties, settings and methods with jQuery.data. You can access the instance with the &lt;code&gt;&#39;isotope&#39;&lt;/code&gt; namespace.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$container&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#container&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// initialize Isotope instance&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;$container&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isotope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// options...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// get Isotope instance&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;isotopeInstance&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$container&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;isotope&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;isotopeInstance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// options&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;isotopeInstance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$filteredAtoms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// jQuery object of filtered &amp;amp; sorted item elements&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;isotopeInstance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;masonry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;columnWidth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Layout mode specific properties&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;css-transforms-in-opera&quot;&gt;CSS transforms in Opera&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://dropshado.ws/post/1260101028/opera-transform-issues&quot;&gt;Using CSS transforms in older versions Opera (&amp;lt; 12) distorts text rendering&lt;/a&gt;. See how to enable &lt;a href=&quot;options.html#transformsEnabled-css&quot;&gt;CSS transitions with top, left positioning&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;infinite-scroll-with-filtering-or-sorting&quot;&gt;Infinite Scroll with filtering or sorting&lt;/h2&gt;

&lt;p&gt;I recommend against using Infinite Scroll with filtering or sorting. This combination produces a unnecessarily complex user interaction that will frustrate your users. New content gets added, but part of it might be hidden. There is no way for the user to tell what gets hidden or re-arranged when Infinite Scroll adds more content. Exercise &lt;a href=&quot;introduction.html#moderation&quot;&gt;moderation&lt;/a&gt; with your Isotope implementation.&lt;/p&gt;

&lt;p&gt;If you do plan on implementing Infinite Scroll with filtering or sorting (which is a &lt;em&gt;bad idea&lt;/em&gt;), use the &lt;code&gt;insert&lt;/code&gt; method instead of &lt;code&gt;appended&lt;/code&gt;.  &lt;/p&gt;

&lt;h2 id=&quot;poor-type-rendering-in-webkit&quot;&gt;Poor type rendering in WebKit&lt;/h2&gt;

&lt;p&gt;Type rendering may appear poor in WebKit browsers like Chrome and Safari. This is because of Isotope’s activation of hardware acceleration. A solution is to add add a matching background to the item elements. See more: &lt;a href=&quot;http://dropshado.ws/post/6142339613/resolving-anti-aliasing-on-webkit-hardware-accelerated&quot;&gt;dropshado.ws - Resolving anti-aliasing on WebKit hardware-accelerated elements&lt;/a&gt;.  Another solution is to &lt;a href=&quot;#disabling_transforms&quot;&gt;disable transforms&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;first-item-breaks-masonry-layout&quot;&gt;First item breaks Masonry layout&lt;/h2&gt;

&lt;p&gt;With &lt;a href=&quot;layout-modes.html#masonry&quot;&gt;Masonry layout mode&lt;/a&gt; If you run into an issue where you re-size the first item, and all the rest of the items no longer fit together in the grid, you most likely need to set &lt;a href=&quot;layout-modes.html#masonry-options&quot;&gt;&lt;code&gt;columnWidth&lt;/code&gt; option&lt;/a&gt;. Without &lt;code&gt;columnWidth&lt;/code&gt; set, the Masonry layout mode will use the width of the first item for the size of its columns.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#container&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isotope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;masonry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;columnWidth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;220&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;right-to-left-layouts&quot;&gt;Right-to-left layouts&lt;/h2&gt;

&lt;p&gt;Isotope can be modified to support right-to-left layouts for languages like Hebrew and Arabic.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;../tests/right-to-left.html&quot;&gt;&lt;strong&gt;See test: Right to left&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You’ll need to make the following changes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Modify Isotope’s &lt;code&gt;_positionAbs&lt;/code&gt; method&lt;/li&gt;
  &lt;li&gt;Set &lt;code&gt;transformsEnabled: false&lt;/code&gt; in the Isotope options&lt;/li&gt;
  &lt;li&gt;Add CSS transition property styles for right/top.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;javascript-for-right-to-left-support&quot;&gt;JavaScript for right-to-left support&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// modify Isotope&amp;#39;s absolute position method&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Isotope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_positionAbs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// initialize Isotope&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#container&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isotope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;transformsEnabled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// other options...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;css-for-right-to-left-support&quot;&gt;CSS for right-to-left support&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.isotope&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.isotope-item&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;webkit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;webkit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;opacity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
     &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;moz&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;moz&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;opacity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ms&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ms&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;opacity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
       &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;opacity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;opacity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;preventing-clicks-on-filtered-items--unclickable-filtered&quot;&gt;Preventing clicks on filtered items {: #unclickable-filtered}&lt;/h2&gt;

&lt;p&gt;The &lt;a href=&quot;filtering.html#recommended_css&quot;&gt;recommended CSS for filtering&lt;/a&gt; includes &lt;code&gt;pointer-events: none&lt;/code&gt; for &lt;code&gt;.isotope-hidden&lt;/code&gt;. Unfortunately, Opera and Internet Explorer still let click events propagate with this style in place. But you can still dismiss click events in your click handler by checking to see if the element or element’s parent is a filtered item.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;../tests/unclickable-filtered.html&quot;&gt;See test: Unclickable filtered&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;.item a&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$this&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// back out if hidden item&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;parents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;.isotope-item&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hasClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;isotope-hidden&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// otherwise, continue to do stuff...&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;item was clicked&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
                <link>/docs/help.html</link>
                <guid>/docs/help</guid>
                <pubDate>2011-12-11T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>BIG Graph</title>
                <description>&lt;section id=&quot;copy&quot;&gt;
  &lt;p&gt;&lt;a href=&quot;../docs/extending-isotope.html&quot;&gt;Custom layout mode&lt;/a&gt; to replicate the Flash interface of &lt;a href=&quot;http://big.dk&quot;&gt;big.dk&lt;/a&gt;. Similiar to &lt;a href=&quot;category-rows.html&quot;&gt;Category rows&lt;/a&gt;, item elements are grouped by their sorting data into columns.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$container&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isotope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;layoutMode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;bigGraph&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;bigGraph&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;columnWidth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;45&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// size of item&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;rowHeight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;45&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// size of item&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;maxRows&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// max number of items vertically&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;gutterWidth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// width of gutter, needs to match getSortData names&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;year&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;scale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;program&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// options...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

  &lt;p&gt;To use this layout mode, grab the &lt;code&gt;$.Isotope.prototype&lt;/code&gt; methods from the script at the bottom of this page&#39;s source.&lt;/p&gt;

&lt;/section&gt;

&lt;section id=&quot;options&quot; class=&quot;clearfix&quot;&gt;

    &lt;h3&gt;Sort&lt;/h3&gt;

    &lt;ul id=&quot;sort-by&quot; class=&quot;option-set clearfix&quot; data-option-key=&quot;sortBy&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=year&quot; data-option-value=&quot;year&quot; class=&quot;selected&quot; data&gt;Chronological&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=title&quot; data-option-value=&quot;title&quot;&gt;Alphabetical&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=program&quot; data-option-value=&quot;program&quot;&gt;Programmatic&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=scale&quot; data-option-value=&quot;scale&quot;&gt;Scale&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=status&quot;  data-option-value=&quot;status&quot;&gt;Status&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;

&lt;/section&gt; &lt;!-- #options --&gt;

&lt;div id=&quot;container&quot; class=&quot;big-graph clearfix&quot;&gt;
  
&lt;/div&gt; &lt;!-- #container --&gt;


&lt;script src=&quot;../js/vendor/jquery.min.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;../js/jquery.isotope.min.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;../js/make-big-graph-projects.js&quot;&gt;&lt;/script&gt; 
&lt;script&gt;

  // categoryRows custom layout mode
  $.extend( $.Isotope.prototype, {

    _bigGraphReset : function() {
      this.bigGraph = {
        x : 0,
        y : 0,
        height : 0,
        column: 0,
        row: 0,
        gutter: 0,
        currentCategory : null
      };
    },

    _bigGraphLayout : function( $elems ) {
      var instance = this,
          containerWidth = this.element.width(),
          bigGraphOpts = this.options.bigGraph,
          sortBy = this.options.sortBy,
          elemsGroup = {},
          props = this.bigGraph;

      // group item elements into categories based on their sorting data
      $elems.each( function() {
        var category = $.data( this, &#39;isotope-sort-data&#39; )[ sortBy ];
        elemsGroup[ category ] = elemsGroup[ category ] || [];
        elemsGroup[ category ].push( this );
      });
  
      var group, groupName, groupMaxRows, groupLen,
          gutterWidth = bigGraphOpts.gutterWidth[ sortBy ],
          x, y;
      // for each group...
      for ( groupName in elemsGroup ) {
        group = elemsGroup[ groupName ];
        groupLen = group.length;
        // make groups look nice, by limiting rows, makes for blockier blocks
        groupMaxRows = groupLen / Math.ceil( groupLen / bigGraphOpts.maxRows );

        $.each( group, function( i, elem ) {
          x = props.column * bigGraphOpts.columnWidth + props.gutter * gutterWidth;
          y = (bigGraphOpts.maxRows - props.row - 1) * bigGraphOpts.rowHeight;
          instance._pushPosition( $(elem), x, y );
          
          if ( props.row &gt;= groupMaxRows - 1 ) {
            // start a new column
            props.row = 0;
            props.column++;
          } else {
            props.row++;
          }
        });
        // start a new group
        if ( props.row &gt; 0 ) {
          props.row = 0;
          props.column++;
        }
        props.gutter++;
      }
      props.gutter--;
      props.width = props.column * bigGraphOpts.columnWidth + props.gutter * gutterWidth;
    },

    _bigGraphGetContainerSize : function () {
      bigGraphOpts = this.options.bigGraph;
      this.bigGraph.column++;
      return {
        width: this.bigGraph.width,
        height: bigGraphOpts.maxRows * bigGraphOpts.rowHeight
      };
    },

    _bigGraphResizeChanged : function() {
      return false;
    }

  });


  $(function(){
    
    // -------- dynamically create items ---------------- //
    
    var i = 120,
        projects = [];
    
    while (i--) {
      projects.push( makeBigGraphProject() );
    }

    var $container = $(&#39;#container&#39;);
    
    $container.append( $( projects.join(&#39;&#39;) ) );
    
    // -------- isotope ---------------- //
    
    $container.isotope({
      itemSelector: &#39;.project&#39;,
      layoutMode: &#39;bigGraph&#39;,
      bigGraph: {
        columnWidth: 100, // size of item
        rowHeight: 100, // size of item
        maxRows: 11, // max number of items vertically
        gutterWidth: { // width of gutter, needs to match getSortData names
          year: 0,
          scale: 0,
          program: 35,
          status: 80,
          title: 0
        }
      },
      sortBy: &#39;year&#39;,
      getSortData: {
        year: function( $elem ) {
          return $elem.attr(&#39;data-year&#39;);
        },
        scale: function( $elem ) {
          return $elem.attr(&#39;data-scale&#39;);
        },
        program: function( $elem ) {
          return $elem.attr(&#39;data-program&#39;);
        },
        status: function( $elem ) {
          return $elem.attr(&#39;data-status&#39;);
        },
        title: function( $elem ) {
          var chara = $elem.find(&#39;p&#39;).text()[0];
          return isNaN( parseInt( chara ) ) ? chara : &#39;0&#39;;
        }
      }
    });
      
    
      var $optionSets = $(&#39;#options .option-set&#39;),
          $optionLinks = $optionSets.find(&#39;a&#39;);

      $optionLinks.click(function(){
        var $this = $(this);
        // don&#39;t proceed if already selected
        if ( $this.hasClass(&#39;selected&#39;) ) {
          return false;
        }
        var $optionSet = $this.parents(&#39;.option-set&#39;);
        $optionSet.find(&#39;.selected&#39;).removeClass(&#39;selected&#39;);
        $this.addClass(&#39;selected&#39;);
  
        // make option object dynamically, i.e. { filter: &#39;.my-filter-class&#39; }
        var options = {},
            key = $optionSet.attr(&#39;data-option-key&#39;),
            value = $this.attr(&#39;data-option-value&#39;);
        // parse &#39;false&#39; as false boolean
        value = value === &#39;false&#39; ? false : value;
        options[ key ] = value;
        if ( key === &#39;layoutMode&#39; &amp;&amp; typeof changeLayoutMode === &#39;function&#39; ) {
          // changes in layout modes need extra logic
          changeLayoutMode( $this, options )
        } else {
          // otherwise, apply new options
          $container.isotope( options );
        }
        
        return false;
      });


    
  });
&lt;/script&gt;
</description>
                <link>/custom-layout-modes/big-graph.html</link>
                <guid>/custom-layout-modes/big-graph</guid>
                <pubDate>2011-12-05T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Callbacks</title>
                <description>&lt;section id=&quot;copy&quot;&gt;
  &lt;p&gt;Tests that callbacks are triggering properly, after animation/transition has completed.&lt;/p&gt;

&lt;/section&gt;

&lt;section id=&quot;options&quot; class=&quot;clearfix&quot;&gt;

  
      &lt;h3&gt;Filter&lt;/h3&gt;

      &lt;ul id=&quot;filters&quot; class=&quot;option-set clearfix&quot; data-option-key=&quot;filter&quot;&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.metal&quot; class=&quot;selected&quot;&gt;Aktuell&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.nonmetal&quot;&gt;Veranstaltungen&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.alkali, .alkaline-earth&quot;&gt;Rezepte&lt;/a&gt;&lt;/li&gt;
        
        
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.transition&quot;&gt;transition&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.post-transition&quot;&gt;post-transition&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.inner-transition&quot;&gt;inner-transition&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;:not(.transition)&quot;&gt;not transition&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.metal:not(.transition)&quot;&gt;metal but not transition&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;*&quot;&gt;Alles zeigen&lt;/a&gt;&lt;/li&gt;
        
      &lt;/ul&gt;


  
    &lt;h3&gt;Sortierung&lt;/h3&gt;

    &lt;ul id=&quot;sort-by&quot; class=&quot;option-set clearfix&quot; data-option-key=&quot;sortBy&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=original-order&quot; data-option-value=&quot;original-order&quot; class=&quot;selected&quot; data&gt;Original&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=name&quot; data-option-value=&quot;name&quot;&gt;Name&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=symbol&quot; data-option-value=&quot;symbol&quot;&gt;Symbol&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=number&quot; data-option-value=&quot;number&quot;&gt;Nummer&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=weight&quot;  data-option-value=&quot;weight&quot;&gt;Gewicht&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=category&quot; data-option-value=&quot;category&quot;&gt;Kategorie&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=random&quot; data-option-value=&quot;random&quot;&gt;Zufall&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;

    &lt;h3&gt;Sortierreihenfolge&lt;/h3&gt;

    &lt;ul id=&quot;sort-direction&quot; class=&quot;option-set clearfix&quot; data-option-key=&quot;sortAscending&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;#sortAscending=true&quot; data-option-value=&quot;true&quot; class=&quot;selected&quot;&gt;Aufsteigend&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortAscending=false&quot; data-option-value=&quot;false&quot;&gt;Absteigend&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;


  &lt;h3&gt;Etc&lt;/h3&gt;

  &lt;ul id=&quot;etc&quot; class=&quot;clearfix&quot;&gt;
    &lt;li id=&quot;toggle-sizes&quot;&gt;&lt;a href=&quot;#toggle-sizes&quot;&gt;Toggle variable sizes&lt;/a&gt;&lt;/li&gt;
    &lt;li id=&quot;insert&quot;&gt;&lt;a href=&quot;#insert&quot;&gt;Insert new elements&lt;/a&gt;&lt;/li&gt;
    &lt;li id=&quot;append&quot;&gt;&lt;a href=&#39;#append&#39;&gt;Append new elements&lt;/a&gt;&lt;/li&gt;
    &lt;li id=&quot;shuffle&quot;&gt;&lt;a href=&#39;#shuffle&#39;&gt;Shuffle&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;

&lt;/section&gt; &lt;!-- #options --&gt;

&lt;div id=&quot;container&quot; class=&quot;clickable variable-sizes clearfix&quot;&gt;
  
&lt;/div&gt; &lt;!-- #container --&gt;


&lt;script src=&quot;../js/vendor/jquery.min.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;../js/jquery.isotope.min.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;../js/fake-element.js&quot;&gt;&lt;/script&gt;
&lt;script&gt;

  $(function(){
    
    var $container = $(&#39;#container&#39;);
    
    
      // add randomish size classes
      $container.find(&#39;.element&#39;).each(function(){
        var $this = $(this),
            number = parseInt( $this.find(&#39;.number&#39;).text(), 10 );
        if ( number % 7 % 2 === 1 ) {
          $this.addClass(&#39;width2&#39;);
        }
        if ( number % 3 === 0 ) {
          $this.addClass(&#39;height2&#39;);
        }
      });
    
    var colors = [&#39;red&#39;, &#39;green&#39;, &#39;blue&#39;, &#39;yellow&#39;, &#39;purple&#39;, &#39;orange&#39;, &#39;white&#39;],
        colorI = 0;

    function changeBGColor() {
      var color = colors[ colorI % colors.length ];
      $container.css({ background: color })
      colorI++;
    }
    
    $container.isotope({
      itemSelector : &#39;.element&#39;,
      masonry : {
        columnWidth : 120
      },
      masonryHorizontal : {
        rowHeight: 120
      },
      cellsByRow : {
        columnWidth : 240,
        rowHeight : 240
      },
      cellsByColumn : {
        columnWidth : 240,
        rowHeight : 240
      },
      getSortData : {
        symbol : function( $elem ) {
          return $elem.attr(&#39;data-symbol&#39;);
        },
        category : function( $elem ) {
          return $elem.attr(&#39;data-category&#39;);
        },
        number : function( $elem ) {
          return parseInt( $elem.find(&#39;.number&#39;).text(), 10 );
        },
        weight : function( $elem ) {
          return parseFloat( $elem.find(&#39;.weight&#39;).text().replace( /[\(\)]/g, &#39;&#39;) );
        },
        name : function ( $elem ) {
          return $elem.find(&#39;.name&#39;).text();
        }
      }
    }, changeBGColor );
      

    var $optionSets = $(&#39;#options .option-set&#39;),
        $optionLinks = $optionSets.find(&#39;a&#39;);
    
    $optionLinks.click(function(){
      var $this = $(this);
      // don&#39;t proceed if already selected
      if ( $this.hasClass(&#39;selected&#39;) ) {
        return false;
      }
      var $optionSet = $this.parents(&#39;.option-set&#39;);
      $optionSet.find(&#39;.selected&#39;).removeClass(&#39;selected&#39;);
      $this.addClass(&#39;selected&#39;);

      // make option object dynamically, i.e. { filter: &#39;.my-filter-class&#39; }
      var options = {},
          key = $optionSet.attr(&#39;data-option-key&#39;),
          value = $this.attr(&#39;data-option-value&#39;);
      // parse &#39;false&#39; as false boolean
      value = value === &#39;false&#39; ? false : value;
      options[ key ] = value;
      if ( key === &#39;layoutMode&#39; &amp;&amp; typeof changeLayoutMode === &#39;function&#39; ) {
        // changes in layout modes need extra logic
        changeLayoutMode( $this, options )
      } else {
        // otherwise, apply new options
        $container.isotope( options, changeBGColor );
      }
      
      return false;
    });



    $(&#39;#insert a&#39;).click(function(){
      var $newEls = $( fakeElement.getGroup() );
      $container.isotope( &#39;insert&#39;, $newEls, changeBGColor );

      return false;
    });

    $(&#39;#append a&#39;).click(function(){
      var $newEls = $( fakeElement.getGroup() );
      $container.append( $newEls ).isotope( &#39;appended&#39;, $newEls, changeBGColor );

      return false;
    });


    // change size of clicked element
    $container.delegate( &#39;.element&#39;, &#39;click&#39;, function(){
      $(this).toggleClass(&#39;large&#39;);
      $container.isotope( &#39;reLayout&#39;, changeBGColor );
    });

    // toggle variable sizes of all elements
    $(&#39;#toggle-sizes&#39;).find(&#39;a&#39;).click(function(){
      $container
        .toggleClass(&#39;variable-sizes&#39;)
        .isotope( &#39;reLayout&#39;, changeBGColor );
      return false;
    });


    var $sortBy = $(&#39;#sort-by&#39;);
    $(&#39;#shuffle a&#39;).click(function(){
      $container.isotope( &#39;shuffle&#39;, changeBGColor );
      $sortBy.find(&#39;.selected&#39;).removeClass(&#39;selected&#39;);
      $sortBy.find(&#39;[data-option-value=&quot;random&quot;]&#39;).addClass(&#39;selected&#39;);
      return false;
    });
    
  });
&lt;/script&gt;</description>
                <link>/tests/callbacks.html</link>
                <guid>/tests/callbacks</guid>
                <pubDate>2011-10-19T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Spine align</title>
                <description>&lt;section id=&quot;copy&quot;&gt;
  &lt;p&gt;&lt;a href=&quot;../docs/extending-isotope.html&quot;&gt;Custom layout mode&lt;/a&gt; that aligns items to the center, placing them either left or right of the spine. &lt;code&gt;gutterWidth&lt;/code&gt; option available.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$container&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isotope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;layoutMode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;spineAlign&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;spineAlign&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;gutterWidth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// options...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

  &lt;p&gt;To use this layout mode, grab the &lt;code&gt;$.Isotope.prototype&lt;/code&gt; methods from the script at the bottom of this page&#39;s source.&lt;/p&gt;

&lt;/section&gt;

&lt;section id=&quot;options&quot; class=&quot;clearfix&quot;&gt;

  
      &lt;h3&gt;Filter&lt;/h3&gt;

      &lt;ul id=&quot;filters&quot; class=&quot;option-set clearfix&quot; data-option-key=&quot;filter&quot;&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.metal&quot; class=&quot;selected&quot;&gt;Aktuell&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.nonmetal&quot;&gt;Veranstaltungen&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.alkali, .alkaline-earth&quot;&gt;Rezepte&lt;/a&gt;&lt;/li&gt;
        
        
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.transition&quot;&gt;transition&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.post-transition&quot;&gt;post-transition&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.inner-transition&quot;&gt;inner-transition&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;:not(.transition)&quot;&gt;not transition&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.metal:not(.transition)&quot;&gt;metal but not transition&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;*&quot;&gt;Alles zeigen&lt;/a&gt;&lt;/li&gt;
        
      &lt;/ul&gt;


  
    &lt;h3&gt;Sortierung&lt;/h3&gt;

    &lt;ul id=&quot;sort-by&quot; class=&quot;option-set clearfix&quot; data-option-key=&quot;sortBy&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=original-order&quot; data-option-value=&quot;original-order&quot; class=&quot;selected&quot; data&gt;Original&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=name&quot; data-option-value=&quot;name&quot;&gt;Name&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=symbol&quot; data-option-value=&quot;symbol&quot;&gt;Symbol&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=number&quot; data-option-value=&quot;number&quot;&gt;Nummer&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=weight&quot;  data-option-value=&quot;weight&quot;&gt;Gewicht&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=category&quot; data-option-value=&quot;category&quot;&gt;Kategorie&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=random&quot; data-option-value=&quot;random&quot;&gt;Zufall&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;

    &lt;h3&gt;Sortierreihenfolge&lt;/h3&gt;

    &lt;ul id=&quot;sort-direction&quot; class=&quot;option-set clearfix&quot; data-option-key=&quot;sortAscending&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;#sortAscending=true&quot; data-option-value=&quot;true&quot; class=&quot;selected&quot;&gt;Aufsteigend&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortAscending=false&quot; data-option-value=&quot;false&quot;&gt;Absteigend&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;


  &lt;h3&gt;Etc&lt;/h3&gt;

  &lt;ul id=&quot;etc&quot; class=&quot;clearfix&quot;&gt;
    &lt;li id=&quot;toggle-sizes&quot;&gt;&lt;a href=&quot;#toggle-sizes&quot;&gt;Toggle variable sizes&lt;/a&gt;&lt;/li&gt;
    &lt;li id=&quot;insert&quot;&gt;&lt;a href=&quot;#insert&quot;&gt;Insert new elements&lt;/a&gt;&lt;/li&gt;
    &lt;li id=&quot;append&quot;&gt;&lt;a href=&#39;#append&#39;&gt;Append new elements&lt;/a&gt;&lt;/li&gt;
    &lt;li id=&quot;shuffle&quot;&gt;&lt;a href=&#39;#shuffle&#39;&gt;Shuffle&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;

&lt;/section&gt; &lt;!-- #options --&gt;

&lt;div id=&quot;container&quot; class=&quot;clickable variable-sizes clearfix&quot;&gt;
  
&lt;/div&gt; &lt;!-- #container --&gt;


&lt;script src=&quot;../js/vendor/jquery.min.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;../js/jquery.isotope.min.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;../js/fake-element.js&quot;&gt;&lt;/script&gt;
&lt;script&gt;

  // custom layout mode spineAlign
  $.Isotope.prototype._spineAlignReset = function() {
    this.spineAlign = {
      colA: 0,
      colB: 0
    };
  };

  $.Isotope.prototype._spineAlignLayout = function( $elems ) {
    var instance = this,
        props = this.spineAlign,
        gutterWidth = Math.round( this.options.spineAlign &amp;&amp; this.options.spineAlign.gutterWidth ) || 0,
        centerX = Math.round(this.element.width() / 2);

    $elems.each(function(){
      var $this = $(this),
          isColA = props.colA &lt;= props.colB,
          x = isColA ?
            centerX - ( $this.outerWidth(true) + gutterWidth / 2 ) : // left side
            centerX + gutterWidth / 2, // right side
          y = isColA ? props.colA : props.colB;
      instance._pushPosition( $this, x, y );
      props[( isColA ? &#39;colA&#39; : &#39;colB&#39; )] += $this.outerHeight(true);
    });
  };

  $.Isotope.prototype._spineAlignGetContainerSize = function() {
    var size = {};
    size.height = this.spineAlign[( this.spineAlign.colB &gt; this.spineAlign.colA ? &#39;colB&#39; : &#39;colA&#39; )];
    return size;
  };

  $.Isotope.prototype._spineAlignResizeChanged = function() {
    return true;
  };


  $(function(){
    
    var $container = $(&#39;#container&#39;);
    
    
      // add randomish size classes
      $container.find(&#39;.element&#39;).each(function(){
        var $this = $(this),
            number = parseInt( $this.find(&#39;.number&#39;).text(), 10 );
        if ( number % 7 % 2 === 1 ) {
          $this.addClass(&#39;width2&#39;);
        }
        if ( number % 3 === 0 ) {
          $this.addClass(&#39;height2&#39;);
        }
      });
    
    $container.isotope({
      itemSelector : &#39;.element&#39;,
      layoutMode: &#39;spineAlign&#39;,
      spineAlign: {
        gutterWidth: 20
      },
      getSortData : {
        symbol : function( $elem ) {
          return $elem.attr(&#39;data-symbol&#39;);
        },
        category : function( $elem ) {
          return $elem.attr(&#39;data-category&#39;);
        },
        number : function( $elem ) {
          return parseInt( $elem.find(&#39;.number&#39;).text(), 10 );
        },
        weight : function( $elem ) {
          return parseFloat( $elem.find(&#39;.weight&#39;).text().replace( /[\(\)]/g, &#39;&#39;) );
        },
        name : function ( $elem ) {
          return $elem.find(&#39;.name&#39;).text();
        }
      }
    });
      
    
      var $optionSets = $(&#39;#options .option-set&#39;),
          $optionLinks = $optionSets.find(&#39;a&#39;);

      $optionLinks.click(function(){
        var $this = $(this);
        // don&#39;t proceed if already selected
        if ( $this.hasClass(&#39;selected&#39;) ) {
          return false;
        }
        var $optionSet = $this.parents(&#39;.option-set&#39;);
        $optionSet.find(&#39;.selected&#39;).removeClass(&#39;selected&#39;);
        $this.addClass(&#39;selected&#39;);
  
        // make option object dynamically, i.e. { filter: &#39;.my-filter-class&#39; }
        var options = {},
            key = $optionSet.attr(&#39;data-option-key&#39;),
            value = $this.attr(&#39;data-option-value&#39;);
        // parse &#39;false&#39; as false boolean
        value = value === &#39;false&#39; ? false : value;
        options[ key ] = value;
        if ( key === &#39;layoutMode&#39; &amp;&amp; typeof changeLayoutMode === &#39;function&#39; ) {
          // changes in layout modes need extra logic
          changeLayoutMode( $this, options )
        } else {
          // otherwise, apply new options
          $container.isotope( options );
        }
        
        return false;
      });


    
      $(&#39;#insert a&#39;).click(function(){
        var $newEls = $( fakeElement.getGroup() );
        $container.isotope( &#39;insert&#39;, $newEls );

        return false;
      });

      $(&#39;#append a&#39;).click(function(){
        var $newEls = $( fakeElement.getGroup() );
        $container.append( $newEls ).isotope( &#39;appended&#39;, $newEls );

        return false;
      });


    
      // change size of clicked element
      $container.delegate( &#39;.element&#39;, &#39;click&#39;, function(){
        $(this).toggleClass(&#39;large&#39;);
        $container.isotope(&#39;reLayout&#39;);
      });

      // toggle variable sizes of all elements
      $(&#39;#toggle-sizes&#39;).find(&#39;a&#39;).click(function(){
        $container
          .toggleClass(&#39;variable-sizes&#39;)
          .isotope(&#39;reLayout&#39;);
        return false;
      });


    var $sortBy = $(&#39;#sort-by&#39;);
    $(&#39;#shuffle a&#39;).click(function(){
      $container.isotope(&#39;shuffle&#39;);
      $sortBy.find(&#39;.selected&#39;).removeClass(&#39;selected&#39;);
      $sortBy.find(&#39;[data-option-value=&quot;random&quot;]&#39;).addClass(&#39;selected&#39;);
      return false;
    });
    
  });
&lt;/script&gt;</description>
                <link>/custom-layout-modes/spine-align.html</link>
                <guid>/custom-layout-modes/spine-align</guid>
                <pubDate>2011-10-18T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Fluid / responsive</title>
                <description>&lt;style&gt;
  /* percentage-based widths for fluid/responsive layout */
  .element {
    margin: 5px 1%;
    width: 18%;
  }

  .variable-sizes .element.width2 { width: 38%; }

  .element.large, 
  .variable-sizes .element.large, 
  .variable-sizes .element.large.width2.height2 {
    width: 58%;
  }

  #container {
    padding: 5px 0;
  }
&lt;/style&gt;

&lt;section id=&quot;copy&quot;&gt;
  &lt;p&gt;This hack allows you to use percentage-based widths for item elements for fluid / responsive layouts.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$container&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#container&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// initialize Isotope&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;$container&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isotope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// options...&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;resizable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// disable normal resizing&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// set columnWidth to a percentage of container width&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;masonry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;columnWidth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$container&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// update columnWidth on window resize&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;smartresize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$container&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isotope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// update columnWidth to a percentage of container width&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;masonry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;columnWidth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$container&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/section&gt;

&lt;section id=&quot;options&quot; class=&quot;clearfix&quot;&gt;

  
      &lt;h3&gt;Filter&lt;/h3&gt;

      &lt;ul id=&quot;filters&quot; class=&quot;option-set clearfix&quot; data-option-key=&quot;filter&quot;&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.metal&quot; class=&quot;selected&quot;&gt;Aktuell&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.nonmetal&quot;&gt;Veranstaltungen&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.alkali, .alkaline-earth&quot;&gt;Rezepte&lt;/a&gt;&lt;/li&gt;
        
        
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.transition&quot;&gt;transition&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.post-transition&quot;&gt;post-transition&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.inner-transition&quot;&gt;inner-transition&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;:not(.transition)&quot;&gt;not transition&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.metal:not(.transition)&quot;&gt;metal but not transition&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;*&quot;&gt;Alles zeigen&lt;/a&gt;&lt;/li&gt;
        
      &lt;/ul&gt;


  
    &lt;h3&gt;Sortierung&lt;/h3&gt;

    &lt;ul id=&quot;sort-by&quot; class=&quot;option-set clearfix&quot; data-option-key=&quot;sortBy&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=original-order&quot; data-option-value=&quot;original-order&quot; class=&quot;selected&quot; data&gt;Original&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=name&quot; data-option-value=&quot;name&quot;&gt;Name&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=symbol&quot; data-option-value=&quot;symbol&quot;&gt;Symbol&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=number&quot; data-option-value=&quot;number&quot;&gt;Nummer&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=weight&quot;  data-option-value=&quot;weight&quot;&gt;Gewicht&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=category&quot; data-option-value=&quot;category&quot;&gt;Kategorie&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=random&quot; data-option-value=&quot;random&quot;&gt;Zufall&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;

    &lt;h3&gt;Sortierreihenfolge&lt;/h3&gt;

    &lt;ul id=&quot;sort-direction&quot; class=&quot;option-set clearfix&quot; data-option-key=&quot;sortAscending&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;#sortAscending=true&quot; data-option-value=&quot;true&quot; class=&quot;selected&quot;&gt;Aufsteigend&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortAscending=false&quot; data-option-value=&quot;false&quot;&gt;Absteigend&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;


  &lt;h3&gt;Etc&lt;/h3&gt;

  &lt;ul id=&quot;etc&quot; class=&quot;clearfix&quot;&gt;
    &lt;li id=&quot;toggle-sizes&quot;&gt;&lt;a href=&quot;#toggle-sizes&quot;&gt;Toggle variable sizes&lt;/a&gt;&lt;/li&gt;
    &lt;li id=&quot;insert&quot;&gt;&lt;a href=&quot;#insert&quot;&gt;Insert new elements&lt;/a&gt;&lt;/li&gt;
    &lt;li id=&quot;append&quot;&gt;&lt;a href=&#39;#append&#39;&gt;Append new elements&lt;/a&gt;&lt;/li&gt;
    &lt;li id=&quot;shuffle&quot;&gt;&lt;a href=&#39;#shuffle&#39;&gt;Shuffle&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;

&lt;/section&gt; &lt;!-- #options --&gt;

&lt;div id=&quot;container&quot; class=&quot;clickable variable-sizes clearfix&quot;&gt;
  
&lt;/div&gt; &lt;!-- #container --&gt;


&lt;script src=&quot;../js/vendor/jquery.min.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;../js/jquery.isotope.min.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;../js/fake-element.js&quot;&gt;&lt;/script&gt;
&lt;script&gt;

  $(function(){
    
    var $container = $(&#39;#container&#39;);
    
    
      // add randomish size classes
      $container.find(&#39;.element&#39;).each(function(){
        var $this = $(this),
            number = parseInt( $this.find(&#39;.number&#39;).text(), 10 );
        if ( number % 7 % 2 === 1 ) {
          $this.addClass(&#39;width2&#39;);
        }
        if ( number % 3 === 0 ) {
          $this.addClass(&#39;height2&#39;);
        }
      });
    
    $container.isotope({
      itemSelector : &#39;.element&#39;,
      // disable resizing
      resizable: false,
      // set columnWidth to a percentage of container width
      masonry: {
        columnWidth: $container.width() / 5
      },
      getSortData : {
        symbol : function( $elem ) {
          return $elem.attr(&#39;data-symbol&#39;);
        },
        category : function( $elem ) {
          return $elem.attr(&#39;data-category&#39;);
        },
        number : function( $elem ) {
          return parseInt( $elem.find(&#39;.number&#39;).text(), 10 );
        },
        weight : function( $elem ) {
          return parseFloat( $elem.find(&#39;.weight&#39;).text().replace( /[\(\)]/g, &#39;&#39;) );
        },
        name : function ( $elem ) {
          return $elem.find(&#39;.name&#39;).text();
        }
      }
    });
    
    // update columnWidth on window resize
    $(window).smartresize(function(){
      $container.isotope({
        // set columnWidth to a percentage of container width
        masonry: {
          columnWidth: $container.width() / 5
        }
      });
    });
      
    
      var $optionSets = $(&#39;#options .option-set&#39;),
          $optionLinks = $optionSets.find(&#39;a&#39;);

      $optionLinks.click(function(){
        var $this = $(this);
        // don&#39;t proceed if already selected
        if ( $this.hasClass(&#39;selected&#39;) ) {
          return false;
        }
        var $optionSet = $this.parents(&#39;.option-set&#39;);
        $optionSet.find(&#39;.selected&#39;).removeClass(&#39;selected&#39;);
        $this.addClass(&#39;selected&#39;);
  
        // make option object dynamically, i.e. { filter: &#39;.my-filter-class&#39; }
        var options = {},
            key = $optionSet.attr(&#39;data-option-key&#39;),
            value = $this.attr(&#39;data-option-value&#39;);
        // parse &#39;false&#39; as false boolean
        value = value === &#39;false&#39; ? false : value;
        options[ key ] = value;
        if ( key === &#39;layoutMode&#39; &amp;&amp; typeof changeLayoutMode === &#39;function&#39; ) {
          // changes in layout modes need extra logic
          changeLayoutMode( $this, options )
        } else {
          // otherwise, apply new options
          $container.isotope( options );
        }
        
        return false;
      });


    
      $(&#39;#insert a&#39;).click(function(){
        var $newEls = $( fakeElement.getGroup() );
        $container.isotope( &#39;insert&#39;, $newEls );

        return false;
      });

      $(&#39;#append a&#39;).click(function(){
        var $newEls = $( fakeElement.getGroup() );
        $container.append( $newEls ).isotope( &#39;appended&#39;, $newEls );

        return false;
      });


    
      // change size of clicked element
      $container.delegate( &#39;.element&#39;, &#39;click&#39;, function(){
        $(this).toggleClass(&#39;large&#39;);
        $container.isotope(&#39;reLayout&#39;);
      });

      // toggle variable sizes of all elements
      $(&#39;#toggle-sizes&#39;).find(&#39;a&#39;).click(function(){
        $container
          .toggleClass(&#39;variable-sizes&#39;)
          .isotope(&#39;reLayout&#39;);
        return false;
      });


    var $sortBy = $(&#39;#sort-by&#39;);
    $(&#39;#shuffle a&#39;).click(function(){
      $container.isotope(&#39;shuffle&#39;);
      $sortBy.find(&#39;.selected&#39;).removeClass(&#39;selected&#39;);
      $sortBy.find(&#39;[data-option-value=&quot;random&quot;]&#39;).addClass(&#39;selected&#39;);
      return false;
    });
    
  });
&lt;/script&gt;</description>
                <link>/demos/fluid-responsive.html</link>
                <guid>/demos/fluid-responsive</guid>
                <pubDate>2011-09-30T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Unclickable filtered</title>
                <description>&lt;style&gt;
  #container {
    width: 50%;
  }
  
  #clicked-display {
    display: inline-block;
    border: 1px dotted white;
    font-size: 1.1em;
    padding: 0 0.5em;
  }
&lt;/style&gt;

&lt;section id=&quot;copy&quot;&gt;
  &lt;p&gt;For Internet Explorer and Opera, you might need to dismiss event on filtered out items. You should not be able to click on the big red blocks when filtered-out&lt;/p&gt;
  &lt;p id=&quot;clicked-display&quot;&gt;(Last item clicked)&lt;/p&gt;
&lt;/section&gt;

&lt;section id=&quot;options&quot; class=&quot;clearfix&quot;&gt;

  &lt;ul id=&quot;etc&quot; class=&quot;clearfix&quot;&gt;
    &lt;li id=&quot;toggle-red&quot;&gt;&lt;a href=&quot;#toggle-red&quot;&gt;Toggle big red blocks&lt;/a&gt;&lt;/li&gt;
    &lt;li id=&quot;shuffle&quot;&gt;&lt;a href=&#39;#shuffle&#39;&gt;Shuffle&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;

&lt;/section&gt; &lt;!-- #options --&gt;

&lt;div id=&quot;container&quot; class=&quot;clearfix&quot;&gt;
  &lt;div class=&quot;color-shape small blue round&quot;&gt;&lt;a href=&quot;#small-blue-circle&quot;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;div class=&quot;color-shape small blue round&quot;&gt;&lt;a href=&quot;#small-blue-circle&quot;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;div class=&quot;color-shape small blue round&quot;&gt;&lt;a href=&quot;#small-blue-circle&quot;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;div class=&quot;color-shape small blue round&quot;&gt;&lt;a href=&quot;#small-blue-circle&quot;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;div class=&quot;color-shape small blue round&quot;&gt;&lt;a href=&quot;#small-blue-circle&quot;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;div class=&quot;color-shape small blue round&quot;&gt;&lt;a href=&quot;#small-blue-circle&quot;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;div class=&quot;color-shape big red&quot;&gt;&lt;a href=&quot;#big-red-block&quot;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;div class=&quot;color-shape small blue round&quot;&gt;&lt;a href=&quot;#small-blue-circle&quot;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;div class=&quot;color-shape small blue round&quot;&gt;&lt;a href=&quot;#small-blue-circle&quot;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;div class=&quot;color-shape small blue round&quot;&gt;&lt;a href=&quot;#small-blue-circle&quot;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;div class=&quot;color-shape small blue round&quot;&gt;&lt;a href=&quot;#small-blue-circle&quot;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;div class=&quot;color-shape big red&quot;&gt;&lt;a href=&quot;#big-red-block&quot;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;div class=&quot;color-shape small blue round&quot;&gt;&lt;a href=&quot;#small-blue-circle&quot;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;div class=&quot;color-shape small blue round&quot;&gt;&lt;a href=&quot;#small-blue-circle&quot;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;div class=&quot;color-shape small blue round&quot;&gt;&lt;a href=&quot;#small-blue-circle&quot;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;div class=&quot;color-shape small blue round&quot;&gt;&lt;a href=&quot;#small-blue-circle&quot;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;div class=&quot;color-shape small blue round&quot;&gt;&lt;a href=&quot;#small-blue-circle&quot;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;div class=&quot;color-shape small blue round&quot;&gt;&lt;a href=&quot;#small-blue-circle&quot;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;div class=&quot;color-shape small blue round&quot;&gt;&lt;a href=&quot;#small-blue-circle&quot;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;div class=&quot;color-shape small blue round&quot;&gt;&lt;a href=&quot;#small-blue-circle&quot;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;div class=&quot;color-shape small blue round&quot;&gt;&lt;a href=&quot;#small-blue-circle&quot;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;div class=&quot;color-shape big red&quot;&gt;&lt;a href=&quot;#big-red-block&quot;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;div class=&quot;color-shape small blue round&quot;&gt;&lt;a href=&quot;#small-blue-circle&quot;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;div class=&quot;color-shape small blue round&quot;&gt;&lt;a href=&quot;#small-blue-circle&quot;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;div class=&quot;color-shape small blue round&quot;&gt;&lt;a href=&quot;#small-blue-circle&quot;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;div class=&quot;color-shape small blue round&quot;&gt;&lt;a href=&quot;#small-blue-circle&quot;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;div class=&quot;color-shape small blue round&quot;&gt;&lt;a href=&quot;#small-blue-circle&quot;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;div class=&quot;color-shape small blue round&quot;&gt;&lt;a href=&quot;#small-blue-circle&quot;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;div class=&quot;color-shape small blue round&quot;&gt;&lt;a href=&quot;#small-blue-circle&quot;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;div class=&quot;color-shape small blue round&quot;&gt;&lt;a href=&quot;#small-blue-circle&quot;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;div class=&quot;color-shape small blue round&quot;&gt;&lt;a href=&quot;#small-blue-circle&quot;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;div class=&quot;color-shape small blue round&quot;&gt;&lt;a href=&quot;#small-blue-circle&quot;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;div class=&quot;color-shape small blue round&quot;&gt;&lt;a href=&quot;#small-blue-circle&quot;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;div class=&quot;color-shape small blue round&quot;&gt;&lt;a href=&quot;#small-blue-circle&quot;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;div class=&quot;color-shape small blue round&quot;&gt;&lt;a href=&quot;#small-blue-circle&quot;&gt;&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;script src=&quot;../js/vendor/jquery.min.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;../js/jquery.isotope.min.js&quot;&gt;&lt;/script&gt;
&lt;script&gt;
  $(function(){

    var $container = $(&#39;#container&#39;),
        isRedFiltered = true;

    $container.isotope({
      itemSelector : &#39;.color-shape&#39;,
      masonry: {
        columnWidth: 80
      },
      hiddenStyle: {
        opacity: 0.25
      }
    }).isotope({
      filter: &#39;.blue&#39;
    }).isotope(&#39;shuffle&#39;);
    
    $(&#39;#toggle-red a&#39;).click(function(){
      isRedFiltered = !isRedFiltered;
      var selector = isRedFiltered ? &#39;.blue&#39; : &#39;*&#39;;
      $container.isotope({ filter: selector });
      return false;
    });
    
    $(&#39;#shuffle a&#39;).click(function(){
      $container.isotope(&#39;shuffle&#39;);
      return false;
    });

    var $clickedDisplay = $(&#39;#clicked-display&#39;);

    $(&#39;.color-shape a&#39;).click(function(){
      var $this = $(this);
      // back out if hidden item
      if ( $this.parents(&#39;.isotope-item&#39;).hasClass(&#39;isotope-hidden&#39;) ) {
        return;
      }
      $clickedDisplay.text( $(this).attr(&#39;href&#39;) );
    });

  });
&lt;/script&gt;</description>
                <link>/tests/unclickable-filtered.html</link>
                <guid>/tests/unclickable-filtered</guid>
                <pubDate>2011-08-23T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Right to left</title>
                <description>&lt;style&gt;
  #content { direction: rtl; }
  
  #options li { float: right; }

  .isotope .isotope-item {
    -webkit-transition-property: right, top, -webkit-transform, opacity;
       -moz-transition-property: right, top, -moz-transform, opacity;
        -ms-transition-property: right, top, -ms-transform, opacity;
         -o-transition-property: right, top, -o-transform, opacity;
            transition-property: right, top, transform, opacity;
  }
&lt;/style&gt;

&lt;section id=&quot;copy&quot;&gt;
  &lt;p&gt;Isotope can support right-to-left layouts for languages like Hebrew and Arabic. See docs: &lt;a href=&quot;../docs/help.html#righttoleft_layouts&quot;&gt;Help - Right to left layouts&lt;/a&gt;.&lt;/p&gt;
&lt;/section&gt;

&lt;section id=&quot;options&quot; class=&quot;clearfix&quot;&gt;

  
      &lt;h3&gt;Filter&lt;/h3&gt;

      &lt;ul id=&quot;filters&quot; class=&quot;option-set clearfix&quot; data-option-key=&quot;filter&quot;&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.metal&quot; class=&quot;selected&quot;&gt;Aktuell&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.nonmetal&quot;&gt;Veranstaltungen&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.alkali, .alkaline-earth&quot;&gt;Rezepte&lt;/a&gt;&lt;/li&gt;
        
        
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.transition&quot;&gt;transition&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.post-transition&quot;&gt;post-transition&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.inner-transition&quot;&gt;inner-transition&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;:not(.transition)&quot;&gt;not transition&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.metal:not(.transition)&quot;&gt;metal but not transition&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;*&quot;&gt;Alles zeigen&lt;/a&gt;&lt;/li&gt;
        
      &lt;/ul&gt;


  
    &lt;h3&gt;Sortierung&lt;/h3&gt;

    &lt;ul id=&quot;sort-by&quot; class=&quot;option-set clearfix&quot; data-option-key=&quot;sortBy&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=original-order&quot; data-option-value=&quot;original-order&quot; class=&quot;selected&quot; data&gt;Original&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=name&quot; data-option-value=&quot;name&quot;&gt;Name&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=symbol&quot; data-option-value=&quot;symbol&quot;&gt;Symbol&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=number&quot; data-option-value=&quot;number&quot;&gt;Nummer&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=weight&quot;  data-option-value=&quot;weight&quot;&gt;Gewicht&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=category&quot; data-option-value=&quot;category&quot;&gt;Kategorie&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=random&quot; data-option-value=&quot;random&quot;&gt;Zufall&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;

    &lt;h3&gt;Sortierreihenfolge&lt;/h3&gt;

    &lt;ul id=&quot;sort-direction&quot; class=&quot;option-set clearfix&quot; data-option-key=&quot;sortAscending&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;#sortAscending=true&quot; data-option-value=&quot;true&quot; class=&quot;selected&quot;&gt;Aufsteigend&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortAscending=false&quot; data-option-value=&quot;false&quot;&gt;Absteigend&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;


  
    &lt;h3&gt;Layout&lt;/h3&gt;

    &lt;ul id=&quot;layouts&quot; class=&quot;option-set clearfix&quot; data-option-key=&quot;layoutMode&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;#fitRows&quot; data-option-value=&quot;fitRows&quot; class=&quot;selected&quot;&gt;Standard&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#cellsByRow&quot; data-option-value=&quot;cellsByRow&quot;&gt;Zellen&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#masonry&quot; data-option-value=&quot;masonry&quot; &gt;Masonry&lt;/a&gt;&lt;/li&gt;
&lt;!--      &lt;li&gt;&lt;a href=&quot;#straightDown&quot; data-option-value=&quot;straightDown&quot;&gt;straightDown&lt;/a&gt;&lt;/li&gt;--&gt;
&lt;!--      &lt;li&gt;&lt;a href=&quot;#masonryHorizontal&quot; data-option-value=&quot;masonryHorizontal&quot; class=&quot;horizontal&quot;&gt;masonryHorizontal&lt;/a&gt;&lt;/li&gt;--&gt;
      &lt;li&gt;&lt;a href=&quot;#fitColumns&quot; data-option-value=&quot;fitColumns&quot; class=&quot;horizontal&quot;&gt;fitColumns&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#cellsByColumn&quot; data-option-value=&quot;cellsByColumn&quot; class=&quot;horizontal&quot;&gt;cellsByColumn&lt;/a&gt;&lt;/li&gt;
&lt;!--      &lt;li&gt;&lt;a href=&quot;#straightAcross&quot; data-option-value=&quot;straightAcross&quot; class=&quot;horizontal&quot;&gt;straightAcross&lt;/a&gt;&lt;/li&gt;--&gt;
    &lt;/ul&gt;


  &lt;h3&gt;Etc&lt;/h3&gt;

  &lt;ul id=&quot;etc&quot; class=&quot;clearfix&quot;&gt;
    &lt;li id=&quot;toggle-sizes&quot;&gt;&lt;a href=&quot;#toggle-sizes&quot;&gt;Toggle variable sizes&lt;/a&gt;&lt;/li&gt;
    &lt;li id=&quot;insert&quot;&gt;&lt;a href=&quot;#insert&quot;&gt;Insert new elements&lt;/a&gt;&lt;/li&gt;
    &lt;li id=&quot;append&quot;&gt;&lt;a href=&#39;#append&#39;&gt;Append new elements&lt;/a&gt;&lt;/li&gt;
    &lt;li id=&quot;shuffle&quot;&gt;&lt;a href=&#39;#shuffle&#39;&gt;Shuffle&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;

&lt;/section&gt; &lt;!-- #options --&gt;


&lt;div id=&quot;container&quot; class=&quot;clickable clearfix&quot;&gt;
  
&lt;/div&gt;


&lt;script src=&quot;../js/vendor/jquery.min.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;../js/jquery.isotope.min.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;../js/fake-element.js&quot;&gt;&lt;/script&gt;
&lt;script&gt;
  $.Isotope.prototype._positionAbs = function( x, y ) {
    return { right: x, top: y };
  };

  $(function(){
    
    var $container = $(&#39;#container&#39;);

    
      // add randomish size classes
      $container.find(&#39;.element&#39;).each(function(){
        var $this = $(this),
            number = parseInt( $this.find(&#39;.number&#39;).text(), 10 );
        if ( number % 7 % 2 === 1 ) {
          $this.addClass(&#39;width2&#39;);
        }
        if ( number % 3 === 0 ) {
          $this.addClass(&#39;height2&#39;);
        }
      });

    $container.isotope({
      itemSelector : &#39;.element&#39;,
      transformsEnabled: false,
      masonry : {
        columnWidth : 120
      },
      masonryHorizontal : {
        rowHeight: 120
      },
      cellsByRow : {
        columnWidth : 240,
        rowHeight : 240
      },
      cellsByColumn : {
        columnWidth : 240,
        rowHeight : 240
      },
      getSortData : {
        symbol : function( $elem ) {
          return $elem.attr(&#39;data-symbol&#39;);
        },
        category : function( $elem ) {
          return $elem.attr(&#39;data-category&#39;);
        },
        number : function( $elem ) {
          return parseInt( $elem.find(&#39;.number&#39;).text(), 10 );
        },
        weight : function( $elem ) {
          return parseFloat( $elem.find(&#39;.weight&#39;).text().replace( /[\(\)]/g, &#39;&#39;) );
        },
        name : function ( $elem ) {
          return $elem.find(&#39;.name&#39;).text();
        }
      }
    });
    
    var $optionSets = $(&#39;#options .option-set&#39;),
        $optionLinks = $optionSets.find(&#39;a&#39;);

    $optionLinks.click(function(){
      var $this = $(this);
      // don&#39;t proceed if already selected
      if ( $this.hasClass(&#39;selected&#39;) ) {
        return false;
      }
      var $optionSet = $this.parents(&#39;.option-set&#39;);
      $optionSet.find(&#39;.selected&#39;).removeClass(&#39;selected&#39;);
      $this.addClass(&#39;selected&#39;);

      // make option object dynamically, i.e. { filter: &#39;.my-filter-class&#39; }
      var options = {},
          key = $optionSet.attr(&#39;data-option-key&#39;),
          value = $this.attr(&#39;data-option-value&#39;);
      // parse &#39;false&#39; as false boolean
      value = value === &#39;false&#39; ? false : value;
      options[ key ] = value;

      if ( key === &#39;layoutMode&#39; &amp;&amp; changeLayoutMode ) {
        // changes in layout modes need extra logic
        changeLayoutMode( $this, options )
      } else {
        // otherwise, apply new options
        $container.isotope( options );
      }

      return false;
    });

    
      // change layout
      var isHorizontal = false;
      function changeLayoutMode( $link, options ) {
        var wasHorizontal = isHorizontal;
        isHorizontal = $link.hasClass(&#39;horizontal&#39;);

        if ( wasHorizontal !== isHorizontal ) {
          // orientation change
          // need to do some clean up for transitions and sizes
          var style = isHorizontal ? 
            { height: &#39;80%&#39;, width: $container.width() } : 
            { width: &#39;auto&#39; };
          // stop any animation on container height / width
          $container.filter(&#39;:animated&#39;).stop();
          // disable transition, apply revised style
          $container.addClass(&#39;no-transition&#39;).css( style );
          setTimeout(function(){
            $container.removeClass(&#39;no-transition&#39;).isotope( options );
          }, 100 )
        } else {
          $container.isotope( options );
        }
      }

    
    
      // change size of clicked element
      $container.delegate( &#39;.element&#39;, &#39;click&#39;, function(){
        $(this).toggleClass(&#39;large&#39;);
        $container.isotope(&#39;reLayout&#39;);
      });

      // toggle variable sizes of all elements
      $(&#39;#toggle-sizes&#39;).find(&#39;a&#39;).click(function(){
        $container
          .toggleClass(&#39;variable-sizes&#39;)
          .isotope(&#39;reLayout&#39;);
        return false;
      });


    
      $(&#39;#insert a&#39;).click(function(){
        var $newEls = $( fakeElement.getGroup() );
        $container.isotope( &#39;insert&#39;, $newEls );

        return false;
      });

      $(&#39;#append a&#39;).click(function(){
        var $newEls = $( fakeElement.getGroup() );
        $container.append( $newEls ).isotope( &#39;appended&#39;, $newEls );

        return false;
      });


    var $sortBy = $(&#39;#sort-by&#39;);
    $(&#39;#shuffle a&#39;).click(function(){
      $container.isotope(&#39;shuffle&#39;);
      $sortBy.find(&#39;.selected&#39;).removeClass(&#39;selected&#39;);
      $sortBy.find(&#39;[data-option-value=&quot;random&quot;]&#39;).addClass(&#39;selected&#39;);
      return false;
    });

  });
&lt;/script&gt;
</description>
                <link>/tests/right-to-left.html</link>
                <guid>/tests/right-to-left</guid>
                <pubDate>2011-08-19T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Masonry gutters</title>
                <description>&lt;style&gt;
.element {
  margin: 5px 0;
}

#container {
  padding: 5px 0;
}
&lt;/style&gt;

&lt;section id=&quot;copy&quot;&gt;
  &lt;p&gt;&lt;a href=&quot;../docs/layout-modes.html#modified_layout_modes&quot;&gt;Modified masonry layout mode&lt;/a&gt; for gutterWidth. The items have no padding, so they can be lined-up horizontally adjacent to the container.&lt;/p&gt;
  &lt;p&gt;Set &lt;code&gt;gutterWidth&lt;/code&gt; within &lt;code&gt;masonry&lt;/code&gt; options.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#container&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isotope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;masonry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;columnWidth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;110&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;gutterWidth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/section&gt;

&lt;section id=&quot;options&quot; class=&quot;clearfix&quot;&gt;

  
      &lt;h3&gt;Filter&lt;/h3&gt;

      &lt;ul id=&quot;filters&quot; class=&quot;option-set clearfix&quot; data-option-key=&quot;filter&quot;&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.metal&quot; class=&quot;selected&quot;&gt;Aktuell&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.nonmetal&quot;&gt;Veranstaltungen&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.alkali, .alkaline-earth&quot;&gt;Rezepte&lt;/a&gt;&lt;/li&gt;
        
        
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.transition&quot;&gt;transition&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.post-transition&quot;&gt;post-transition&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.inner-transition&quot;&gt;inner-transition&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;:not(.transition)&quot;&gt;not transition&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.metal:not(.transition)&quot;&gt;metal but not transition&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;*&quot;&gt;Alles zeigen&lt;/a&gt;&lt;/li&gt;
        
      &lt;/ul&gt;


  
    &lt;h3&gt;Sortierung&lt;/h3&gt;

    &lt;ul id=&quot;sort-by&quot; class=&quot;option-set clearfix&quot; data-option-key=&quot;sortBy&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=original-order&quot; data-option-value=&quot;original-order&quot; class=&quot;selected&quot; data&gt;Original&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=name&quot; data-option-value=&quot;name&quot;&gt;Name&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=symbol&quot; data-option-value=&quot;symbol&quot;&gt;Symbol&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=number&quot; data-option-value=&quot;number&quot;&gt;Nummer&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=weight&quot;  data-option-value=&quot;weight&quot;&gt;Gewicht&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=category&quot; data-option-value=&quot;category&quot;&gt;Kategorie&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=random&quot; data-option-value=&quot;random&quot;&gt;Zufall&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;

    &lt;h3&gt;Sortierreihenfolge&lt;/h3&gt;

    &lt;ul id=&quot;sort-direction&quot; class=&quot;option-set clearfix&quot; data-option-key=&quot;sortAscending&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;#sortAscending=true&quot; data-option-value=&quot;true&quot; class=&quot;selected&quot;&gt;Aufsteigend&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortAscending=false&quot; data-option-value=&quot;false&quot;&gt;Absteigend&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;


  &lt;h3&gt;Etc&lt;/h3&gt;

  &lt;ul id=&quot;etc&quot; class=&quot;clearfix&quot;&gt;
    &lt;li id=&quot;toggle-sizes&quot;&gt;&lt;a href=&quot;#toggle-sizes&quot;&gt;Toggle variable sizes&lt;/a&gt;&lt;/li&gt;
    &lt;li id=&quot;insert&quot;&gt;&lt;a href=&quot;#insert&quot;&gt;Insert new elements&lt;/a&gt;&lt;/li&gt;
    &lt;li id=&quot;append&quot;&gt;&lt;a href=&#39;#append&#39;&gt;Append new elements&lt;/a&gt;&lt;/li&gt;
    &lt;li id=&quot;shuffle&quot;&gt;&lt;a href=&#39;#shuffle&#39;&gt;Shuffle&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;

&lt;/section&gt; &lt;!-- #options --&gt;

&lt;div id=&quot;container&quot; class=&quot;clickable clearfix&quot;&gt;
  
&lt;/div&gt; &lt;!-- #container --&gt;


&lt;script src=&quot;../js/vendor/jquery.min.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;../js/jquery.isotope.min.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;../js/fake-element.js&quot;&gt;&lt;/script&gt;
&lt;script&gt;

  // modified Isotope methods for gutters in masonry
  $.Isotope.prototype._getMasonryGutterColumns = function() {
    var gutter = this.options.masonry &amp;&amp; this.options.masonry.gutterWidth || 0;
        containerWidth = this.element.width();
  
    this.masonry.columnWidth = this.options.masonry &amp;&amp; this.options.masonry.columnWidth ||
                  // or use the size of the first item
                  this.$filteredAtoms.outerWidth(true) ||
                  // if there&#39;s no items, use size of container
                  containerWidth;

    this.masonry.columnWidth += gutter;

    this.masonry.cols = Math.floor( ( containerWidth + gutter ) / this.masonry.columnWidth );
    this.masonry.cols = Math.max( this.masonry.cols, 1 );
  };

  $.Isotope.prototype._masonryReset = function() {
    // layout-specific props
    this.masonry = {};
    // FIXME shouldn&#39;t have to call this again
    this._getMasonryGutterColumns();
    var i = this.masonry.cols;
    this.masonry.colYs = [];
    while (i--) {
      this.masonry.colYs.push( 0 );
    }
  };

  $.Isotope.prototype._masonryResizeChanged = function() {
    var prevSegments = this.masonry.cols;
    // update cols/rows
    this._getMasonryGutterColumns();
    // return if updated cols/rows is not equal to previous
    return ( this.masonry.cols !== prevSegments );
  };


  $(function(){
    
    var $container = $(&#39;#container&#39;);
    
    
      // add randomish size classes
      $container.find(&#39;.element&#39;).each(function(){
        var $this = $(this),
            number = parseInt( $this.find(&#39;.number&#39;).text(), 10 );
        if ( number % 7 % 2 === 1 ) {
          $this.addClass(&#39;width2&#39;);
        }
        if ( number % 3 === 0 ) {
          $this.addClass(&#39;height2&#39;);
        }
      });
    
    $container.isotope({
      itemSelector : &#39;.element&#39;,
      masonry : {
        columnWidth : 110,
        gutterWidth : 10
      },
      getSortData : {
        symbol : function( $elem ) {
          return $elem.attr(&#39;data-symbol&#39;);
        },
        category : function( $elem ) {
          return $elem.attr(&#39;data-category&#39;);
        },
        number : function( $elem ) {
          return parseInt( $elem.find(&#39;.number&#39;).text(), 10 );
        },
        weight : function( $elem ) {
          return parseFloat( $elem.find(&#39;.weight&#39;).text().replace( /[\(\)]/g, &#39;&#39;) );
        },
        name : function ( $elem ) {
          return $elem.find(&#39;.name&#39;).text();
        }
      }
    });
      
    
      var $optionSets = $(&#39;#options .option-set&#39;),
          $optionLinks = $optionSets.find(&#39;a&#39;);

      $optionLinks.click(function(){
        var $this = $(this);
        // don&#39;t proceed if already selected
        if ( $this.hasClass(&#39;selected&#39;) ) {
          return false;
        }
        var $optionSet = $this.parents(&#39;.option-set&#39;);
        $optionSet.find(&#39;.selected&#39;).removeClass(&#39;selected&#39;);
        $this.addClass(&#39;selected&#39;);
  
        // make option object dynamically, i.e. { filter: &#39;.my-filter-class&#39; }
        var options = {},
            key = $optionSet.attr(&#39;data-option-key&#39;),
            value = $this.attr(&#39;data-option-value&#39;);
        // parse &#39;false&#39; as false boolean
        value = value === &#39;false&#39; ? false : value;
        options[ key ] = value;
        if ( key === &#39;layoutMode&#39; &amp;&amp; typeof changeLayoutMode === &#39;function&#39; ) {
          // changes in layout modes need extra logic
          changeLayoutMode( $this, options )
        } else {
          // otherwise, apply new options
          $container.isotope( options );
        }
        
        return false;
      });


    
      $(&#39;#insert a&#39;).click(function(){
        var $newEls = $( fakeElement.getGroup() );
        $container.isotope( &#39;insert&#39;, $newEls );

        return false;
      });

      $(&#39;#append a&#39;).click(function(){
        var $newEls = $( fakeElement.getGroup() );
        $container.append( $newEls ).isotope( &#39;appended&#39;, $newEls );

        return false;
      });


    
      // change size of clicked element
      $container.delegate( &#39;.element&#39;, &#39;click&#39;, function(){
        $(this).toggleClass(&#39;large&#39;);
        $container.isotope(&#39;reLayout&#39;);
      });

      // toggle variable sizes of all elements
      $(&#39;#toggle-sizes&#39;).find(&#39;a&#39;).click(function(){
        $container
          .toggleClass(&#39;variable-sizes&#39;)
          .isotope(&#39;reLayout&#39;);
        return false;
      });


    var $sortBy = $(&#39;#sort-by&#39;);
    $(&#39;#shuffle a&#39;).click(function(){
      $container.isotope(&#39;shuffle&#39;);
      $sortBy.find(&#39;.selected&#39;).removeClass(&#39;selected&#39;);
      $sortBy.find(&#39;[data-option-value=&quot;random&quot;]&#39;).addClass(&#39;selected&#39;);
      return false;
    });
    
  });
&lt;/script&gt;</description>
                <link>/custom-layout-modes/masonry-gutters.html</link>
                <guid>/custom-layout-modes/masonry-gutters</guid>
                <pubDate>2011-07-14T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Masonry corner stamp</title>
                <description>&lt;style&gt;
  .corner-stamp {
    width: 280px;
    height: 340px;
    padding: 10px;
    margin: 10px;
    float: right;
    background: red;
    color: white;
    -webkit-border-radius: 5px;
       -moz-border-radius: 5px;
            border-radius: 5px;
  }
&lt;/style&gt;

&lt;section id=&quot;copy&quot;&gt;
  &lt;p&gt;&lt;a href=&quot;../docs/layout-modes.html#modified_layout_modes&quot;&gt;Modified masonry layout mode&lt;/a&gt; for corner stamp. An element can be &quot;stamped&quot; in the right top corner.&lt;/p&gt;
  &lt;p&gt;Set &lt;code&gt;cornerStampSelector&lt;/code&gt; within &lt;code&gt;masonry&lt;/code&gt; options. &lt;code&gt;itemSelector&lt;/code&gt; needs to be set as well.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#container&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isotope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;itemSelector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;.item&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;masonry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;columnWidth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;120&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;cornerStampSelector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;.corner-stamp&amp;#39;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/section&gt;

&lt;section id=&quot;options&quot; class=&quot;clearfix&quot;&gt;

  
      &lt;h3&gt;Filter&lt;/h3&gt;

      &lt;ul id=&quot;filters&quot; class=&quot;option-set clearfix&quot; data-option-key=&quot;filter&quot;&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.metal&quot; class=&quot;selected&quot;&gt;Aktuell&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.nonmetal&quot;&gt;Veranstaltungen&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.alkali, .alkaline-earth&quot;&gt;Rezepte&lt;/a&gt;&lt;/li&gt;
        
        
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.transition&quot;&gt;transition&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.post-transition&quot;&gt;post-transition&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.inner-transition&quot;&gt;inner-transition&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;:not(.transition)&quot;&gt;not transition&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.metal:not(.transition)&quot;&gt;metal but not transition&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;*&quot;&gt;Alles zeigen&lt;/a&gt;&lt;/li&gt;
        
      &lt;/ul&gt;


  
    &lt;h3&gt;Sortierung&lt;/h3&gt;

    &lt;ul id=&quot;sort-by&quot; class=&quot;option-set clearfix&quot; data-option-key=&quot;sortBy&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=original-order&quot; data-option-value=&quot;original-order&quot; class=&quot;selected&quot; data&gt;Original&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=name&quot; data-option-value=&quot;name&quot;&gt;Name&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=symbol&quot; data-option-value=&quot;symbol&quot;&gt;Symbol&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=number&quot; data-option-value=&quot;number&quot;&gt;Nummer&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=weight&quot;  data-option-value=&quot;weight&quot;&gt;Gewicht&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=category&quot; data-option-value=&quot;category&quot;&gt;Kategorie&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=random&quot; data-option-value=&quot;random&quot;&gt;Zufall&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;

    &lt;h3&gt;Sortierreihenfolge&lt;/h3&gt;

    &lt;ul id=&quot;sort-direction&quot; class=&quot;option-set clearfix&quot; data-option-key=&quot;sortAscending&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;#sortAscending=true&quot; data-option-value=&quot;true&quot; class=&quot;selected&quot;&gt;Aufsteigend&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortAscending=false&quot; data-option-value=&quot;false&quot;&gt;Absteigend&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;


  &lt;h3&gt;Etc&lt;/h3&gt;

  &lt;ul id=&quot;etc&quot; class=&quot;clearfix&quot;&gt;
    &lt;li id=&quot;toggle-sizes&quot;&gt;&lt;a href=&quot;#toggle-sizes&quot;&gt;Toggle variable sizes&lt;/a&gt;&lt;/li&gt;
    &lt;li id=&quot;insert&quot;&gt;&lt;a href=&quot;#insert&quot;&gt;Insert new elements&lt;/a&gt;&lt;/li&gt;
    &lt;li id=&quot;append&quot;&gt;&lt;a href=&#39;#append&#39;&gt;Append new elements&lt;/a&gt;&lt;/li&gt;
    &lt;li id=&quot;shuffle&quot;&gt;&lt;a href=&#39;#shuffle&#39;&gt;Shuffle&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;

&lt;/section&gt; &lt;!-- #options --&gt;

&lt;div id=&quot;container&quot; class=&quot;clickable clearfix&quot;&gt;

  &lt;div class=&quot;corner-stamp&quot;&gt;corner stamp here.&lt;/div&gt;
  
  
&lt;/div&gt; &lt;!-- #container --&gt;


&lt;script src=&quot;../js/vendor/jquery.min.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;../js/jquery.isotope.min.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;../js/fake-element.js&quot;&gt;&lt;/script&gt;
&lt;script&gt;

  $.Isotope.prototype._masonryResizeChanged = function() {
    return true;
  };

  $.Isotope.prototype._masonryReset = function() {
    // layout-specific props
    this.masonry = {};
    this._getSegments();
    var i = this.masonry.cols;
    this.masonry.colYs = [];
    while (i--) {
      this.masonry.colYs.push( 0 );
    }
  
    if ( this.options.masonry.cornerStampSelector ) {
      var $cornerStamp = this.element.find( this.options.masonry.cornerStampSelector ),
          stampWidth = $cornerStamp.outerWidth(true) - ( this.element.width() % this.masonry.columnWidth ),
          cornerCols = Math.ceil( stampWidth / this.masonry.columnWidth ),
          cornerStampHeight = $cornerStamp.outerHeight(true);
      for ( i = Math.max( this.masonry.cols - cornerCols, cornerCols ); i &lt; this.masonry.cols; i++ ) {
        this.masonry.colYs[i] = cornerStampHeight;
      }
    }
  };


  $(function(){
    
    var $container = $(&#39;#container&#39;);
    
    
      // add randomish size classes
      $container.find(&#39;.element&#39;).each(function(){
        var $this = $(this),
            number = parseInt( $this.find(&#39;.number&#39;).text(), 10 );
        if ( number % 7 % 2 === 1 ) {
          $this.addClass(&#39;width2&#39;);
        }
        if ( number % 3 === 0 ) {
          $this.addClass(&#39;height2&#39;);
        }
      });
    
    $container.isotope({
      itemSelector : &#39;.element&#39;,
      masonry : {
        columnWidth : 120,
        cornerStampSelector: &#39;.corner-stamp&#39;
      },
      getSortData : {
        symbol : function( $elem ) {
          return $elem.attr(&#39;data-symbol&#39;);
        },
        category : function( $elem ) {
          return $elem.attr(&#39;data-category&#39;);
        },
        number : function( $elem ) {
          return parseInt( $elem.find(&#39;.number&#39;).text(), 10 );
        },
        weight : function( $elem ) {
          return parseFloat( $elem.find(&#39;.weight&#39;).text().replace( /[\(\)]/g, &#39;&#39;) );
        },
        name : function ( $elem ) {
          return $elem.find(&#39;.name&#39;).text();
        }
      }
    });
      
    
      var $optionSets = $(&#39;#options .option-set&#39;),
          $optionLinks = $optionSets.find(&#39;a&#39;);

      $optionLinks.click(function(){
        var $this = $(this);
        // don&#39;t proceed if already selected
        if ( $this.hasClass(&#39;selected&#39;) ) {
          return false;
        }
        var $optionSet = $this.parents(&#39;.option-set&#39;);
        $optionSet.find(&#39;.selected&#39;).removeClass(&#39;selected&#39;);
        $this.addClass(&#39;selected&#39;);
  
        // make option object dynamically, i.e. { filter: &#39;.my-filter-class&#39; }
        var options = {},
            key = $optionSet.attr(&#39;data-option-key&#39;),
            value = $this.attr(&#39;data-option-value&#39;);
        // parse &#39;false&#39; as false boolean
        value = value === &#39;false&#39; ? false : value;
        options[ key ] = value;
        if ( key === &#39;layoutMode&#39; &amp;&amp; typeof changeLayoutMode === &#39;function&#39; ) {
          // changes in layout modes need extra logic
          changeLayoutMode( $this, options )
        } else {
          // otherwise, apply new options
          $container.isotope( options );
        }
        
        return false;
      });


    
      $(&#39;#insert a&#39;).click(function(){
        var $newEls = $( fakeElement.getGroup() );
        $container.isotope( &#39;insert&#39;, $newEls );

        return false;
      });

      $(&#39;#append a&#39;).click(function(){
        var $newEls = $( fakeElement.getGroup() );
        $container.append( $newEls ).isotope( &#39;appended&#39;, $newEls );

        return false;
      });


    
      // change size of clicked element
      $container.delegate( &#39;.element&#39;, &#39;click&#39;, function(){
        $(this).toggleClass(&#39;large&#39;);
        $container.isotope(&#39;reLayout&#39;);
      });

      // toggle variable sizes of all elements
      $(&#39;#toggle-sizes&#39;).find(&#39;a&#39;).click(function(){
        $container
          .toggleClass(&#39;variable-sizes&#39;)
          .isotope(&#39;reLayout&#39;);
        return false;
      });


    var $sortBy = $(&#39;#sort-by&#39;);
    $(&#39;#shuffle a&#39;).click(function(){
      $container.isotope(&#39;shuffle&#39;);
      $sortBy.find(&#39;.selected&#39;).removeClass(&#39;selected&#39;);
      $sortBy.find(&#39;[data-option-value=&quot;random&quot;]&#39;).addClass(&#39;selected&#39;);
      return false;
    });
    
  });
&lt;/script&gt;</description>
                <link>/custom-layout-modes/masonry-corner-stamp.html</link>
                <guid>/custom-layout-modes/masonry-corner-stamp</guid>
                <pubDate>2011-07-07T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Hash history</title>
                <description>&lt;p&gt;As cool as Isotope is, the only thing that could make it even cooler would be adding bookmark-able URL hashes. Ben Alman’s &lt;a href=&quot;http://benalman.com/projects/jquery-bbq-plugin/&quot;&gt;jQuery BBQ&lt;/a&gt; allows us to do just that.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;jQuery BBQ leverages the HTML5 hashchange event to allow simple, yet powerful bookmarkable #hash history.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;../demos/hash-history.html&quot;&gt;&lt;strong&gt;See Demo: Hash history&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;BBQ is a marvelous plugin that provides for a lot more functionality. The &lt;a href=&quot;../demos/hash-history.html&quot;&gt;hash history demo&lt;/a&gt; uses multiple options (&lt;code&gt;sortBy&lt;/code&gt;, &lt;code&gt;sortAscending&lt;/code&gt;, and &lt;code&gt;layoutMode&lt;/code&gt; in addition to &lt;code&gt;filter&lt;/code&gt;), the ability to use back-button history, and properly highlights selected links.&lt;/p&gt;

&lt;p&gt;Given BBQ’s tremendous capabilities, the code can grow to be a bit complex. Be sure to read through &lt;a href=&quot;http://benalman.com/code/projects/jquery-bbq/docs/files/jquery-ba-bbq-js.html&quot;&gt;BBQ’s docs&lt;/a&gt; and take look at &lt;a href=&quot;http://benalman.com/code/projects/jquery-bbq/examples/&quot;&gt;its examples&lt;/a&gt; before you dive in and code up your own solution.&lt;/p&gt;

&lt;h2 id=&quot;markup&quot;&gt;Markup&lt;/h2&gt;

&lt;p&gt;Instead of setting the option values and keys with &lt;code&gt;data&lt;/code&gt; attributes, we can add the option in the &lt;code&gt;href&lt;/code&gt; for each link.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;option-set&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;#filter=*&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;selected&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;show all&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;#filter=.metal&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;metal&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;#filter=.transition&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;transition&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;#filter=.alkali%2C+.alkaline-earth&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;alkali and alkaline-earth&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;#filter=%3Anot(.transition)&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;not transition&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;#filter=.metal%3Anot(.transition)&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;metal but not transition&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The &lt;code&gt;href&lt;/code&gt; value is a serialized string, suitable for a URL. These values can be created with &lt;a href=&quot;http://api.jquery.com/jQuery.param/&quot;&gt;jQuery.param()&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;param&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;.metal&amp;#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// &amp;gt;&amp;gt; &amp;quot;filter=.metal&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;param&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;.alkali, alkaline-earth&amp;#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// &amp;gt;&amp;gt; &amp;quot;filter=.alkali%2C+alkaline-earth&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;param&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;:not(.transition)&amp;#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// &amp;gt;&amp;gt; &amp;quot;#filter=%3Anot(.transition)&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;jquery-script&quot;&gt;jQuery script&lt;/h2&gt;

&lt;p&gt;These serialized &lt;code&gt;href&lt;/code&gt; values can be converted into their proper jQuery object form when clicked using  &lt;a href=&quot;http://benalman.com/code/projects/jquery-bbq/docs/files/jquery-ba-bbq-js.html#jQuery.deparam&quot;&gt;jQuery.deparam()&lt;/a&gt; from jQuery BBQ.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;.option-set a&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;// get href attr, remove leading #&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;href&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;href&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/^#/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;// convert href into object&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;// i.e. &amp;#39;filter=.inner-transition&amp;#39; -&amp;gt; { filter: &amp;#39;.inner-transition&amp;#39; }&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;option&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;deparam&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// set hash, triggers hashchange on window&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bbq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pushState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;option&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Calling &lt;a href=&quot;http://benalman.com/code/projects/jquery-bbq/docs/files/jquery-ba-bbq-js.html#jQuery.bbq.pushState&quot;&gt;$.bbq.pushState()&lt;/a&gt; will trigger the &lt;code&gt;hashchange&lt;/code&gt; event. At that point, we can parse the hash from the URL and use it to trigger the proper change in the Isotope instance.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;hashchange&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// get options object from hash&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;hashOptions&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;deparam&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fragment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// apply options from hash&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$container&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isotope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;hashOptions&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// trigger hashchange to capture any hash data on init&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;trigger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;hashchange&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now any filter buttons that are clicked will update the URL hash, so these options can be bookmarked.&lt;/p&gt;
</description>
                <link>/docs/hash-history.html</link>
                <guid>/docs/hash-history</guid>
                <pubDate>2011-06-16T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Hash history</title>
                <description>  &lt;section id=&quot;copy&quot;&gt;
    &lt;p&gt;&lt;a href=&quot;http://benalman.com/projects/jquery-bbq-plugin/&quot;&gt;jQuery BBQ&lt;/a&gt; by Ben Alman allows you to use hash history to save Isotope options. Try clicking a couple options then hitting the back button, or copying the URL and pasting it into a new window.&lt;/p&gt;
  &lt;/section&gt;

  &lt;section id=&quot;options&quot; class=&quot;clearfix&quot;&gt;

    &lt;h3&gt;Filters&lt;/h3&gt;

    &lt;ul class=&quot;option-set clearfix&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;#filter=*&quot; class=&quot;selected&quot;&gt;show all&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#filter=.metal&quot;&gt;metal&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#filter=.transition&quot;&gt;transition&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#filter=.post-transition&quot;&gt;post-transition&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#filter=.nonmetal&quot;&gt;nonmetal&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#filter=.inner-transition&quot;&gt;inner-transition&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#filter=.alkali%2C+.alkaline-earth&quot;&gt;alkali and alkaline-earth&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#filter=%3Anot(.transition)&quot;&gt;not transition&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#filter=.metal%3Anot(.transition)&quot;&gt;metal but not transition&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;

    &lt;h3&gt;Sort&lt;/h3&gt;

    &lt;ul class=&quot;option-set clearfix&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=original-order&quot; class=&quot;selected&quot;&gt;original-order&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=name&quot;&gt;name&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=symbol&quot;&gt;symbol&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=number&quot;&gt;number&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=weight&quot;&gt;weight&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=category&quot;&gt;category&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=random&quot;&gt;random&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  
    &lt;h3&gt;Sort direction&lt;/h3&gt;
  
    &lt;ul class=&quot;option-set clearfix&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;#sortAscending=true&quot; class=&quot;selected&quot;&gt;sort ascending&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortAscending=false&quot;&gt;sort descending&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;

    &lt;h3&gt;Layout modes&lt;/h3&gt;

    &lt;ul class=&quot;option-set clearfix&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;#layoutMode=masonry&quot; class=&quot;selected&quot;&gt;masonry&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#layoutMode=fitRows&quot;&gt;fitRows&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#layoutMode=cellsByRow&quot;&gt;cellsByRow&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#layoutMode=straightDown&quot;&gt;straightDown&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;

  &lt;/section&gt; &lt;!-- #options --&gt;

  &lt;div id=&quot;container&quot; class=&quot;variable-sizes clearfix&quot;&gt;
    
  &lt;/div&gt; &lt;!-- #container --&gt;

  &lt;script src=&quot;../js/vendor/jquery.min.js&quot;&gt;&lt;/script&gt;
  &lt;script src=&quot;../js/jquery.isotope.min.js&quot;&gt;&lt;/script&gt;
  &lt;script src=&quot;../js/jquery.ba-bbq.min.js&quot;&gt;&lt;/script&gt;
  &lt;script&gt;
    $(function(){
  
      var $container = $(&#39;#container&#39;),
          // object that will keep track of options
          isotopeOptions = {},
          // defaults, used if not explicitly set in hash
          defaultOptions = {
            filter: &#39;*&#39;,
            sortBy: &#39;original-order&#39;,
            sortAscending: true,
            layoutMode: &#39;masonry&#39;
          };

      
      // add randomish size classes
      $container.find(&#39;.element&#39;).each(function(){
        var $this = $(this),
            number = parseInt( $this.find(&#39;.number&#39;).text(), 10 );
        if ( number % 7 % 2 === 1 ) {
          $this.addClass(&#39;width2&#39;);
        }
        if ( number % 3 === 0 ) {
          $this.addClass(&#39;height2&#39;);
        }
      });
  
      var setupOptions = $.extend( {}, defaultOptions, {
        itemSelector : &#39;.element&#39;,
        masonry : {
          columnWidth : 120
        },
        cellsByRow : {
          columnWidth : 240,
          rowHeight : 240
        },
        getSortData : {
          symbol : function( $elem ) {
            return $elem.attr(&#39;data-symbol&#39;);
          },
          category : function( $elem ) {
            return $elem.attr(&#39;data-category&#39;);
          },
          number : function( $elem ) {
            return parseInt( $elem.find(&#39;.number&#39;).text(), 10 );
          },
          weight : function( $elem ) {
            return parseFloat( $elem.find(&#39;.weight&#39;).text().replace( /[\(\)]/g, &#39;&#39;) );
          },
          name : function ( $elem ) {
            return $elem.find(&#39;.name&#39;).text();
          }
        }
      });
  
      // set up Isotope
      $container.isotope( setupOptions );
  
      var $optionSets = $(&#39;#options&#39;).find(&#39;.option-set&#39;),
          isOptionLinkClicked = false;
  
      // switches selected class on buttons
      function changeSelectedLink( $elem ) {
        // remove selected class on previous item
        $elem.parents(&#39;.option-set&#39;).find(&#39;.selected&#39;).removeClass(&#39;selected&#39;);
        // set selected class on new item
        $elem.addClass(&#39;selected&#39;);
      }
  
  
      $optionSets.find(&#39;a&#39;).click(function(){
        var $this = $(this);
        // don&#39;t proceed if already selected
        if ( $this.hasClass(&#39;selected&#39;) ) {
          return;
        }
        changeSelectedLink( $this );
            // get href attr, remove leading #
        var href = $this.attr(&#39;href&#39;).replace( /^#/, &#39;&#39; ),
            // convert href into object
            // i.e. &#39;filter=.inner-transition&#39; -&gt; { filter: &#39;.inner-transition&#39; }
            option = $.deparam( href, true );
        // apply new option to previous
        $.extend( isotopeOptions, option );
        // set hash, triggers hashchange on window
        $.bbq.pushState( isotopeOptions );
        isOptionLinkClicked = true;
        return false;
      });

      var hashChanged = false;

      $(window).bind( &#39;hashchange&#39;, function( event ){
        // get options object from hash
        var hashOptions = window.location.hash ? $.deparam.fragment( window.location.hash, true ) : {},
            // do not animate first call
            aniEngine = hashChanged ? &#39;best-available&#39; : &#39;none&#39;,
            // apply defaults where no option was specified
            options = $.extend( {}, defaultOptions, hashOptions, { animationEngine: aniEngine } );
        // apply options from hash
        $container.isotope( options );
        // save options
        isotopeOptions = hashOptions;
    
        // if option link was not clicked
        // then we&#39;ll need to update selected links
        if ( !isOptionLinkClicked ) {
          // iterate over options
          var hrefObj, hrefValue, $selectedLink;
          for ( var key in options ) {
            hrefObj = {};
            hrefObj[ key ] = options[ key ];
            // convert object into parameter string
            // i.e. { filter: &#39;.inner-transition&#39; } -&gt; &#39;filter=.inner-transition&#39;
            hrefValue = $.param( hrefObj );
            // get matching link
            $selectedLink = $optionSets.find(&#39;a[href=&quot;#&#39; + hrefValue + &#39;&quot;]&#39;);
            changeSelectedLink( $selectedLink );
          }
        }
    
        isOptionLinkClicked = false;
        hashChanged = true;
      })
        // trigger hashchange to capture any hash data on init
        .trigger(&#39;hashchange&#39;);

    });
  &lt;/script&gt;
  
</description>
                <link>/demos/hash-history.html</link>
                <guid>/demos/hash-history</guid>
                <pubDate>2011-06-13T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Tiny text</title>
                <description>&lt;style&gt;
  .text-box {
    width: 200px;
    margin: 10px;
    color: #000;
    float: left;
    font-size: 11px;
    line-height: 1.3em;
    padding: 10px;
  }
  
  .blue { background: #88F; }
  .red { background: #F88; }
&lt;/style&gt;

&lt;section id=&quot;copy&quot;&gt;
  &lt;p&gt;Test to see how IE7 deals with type rendering&lt;/p&gt;
&lt;/section&gt;

&lt;section id=&quot;options&quot; class=&quot;clearfix&quot;&gt;

  &lt;h3&gt;Filters&lt;/h3&gt;

  &lt;ul id=&quot;filters&quot; class=&quot;option-set clearfix&quot; data-option-key=&quot;filter&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;#show-all&quot; data-option-value=&quot;*&quot; class=&quot;selected&quot;&gt;show all&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;#red&quot; data-option-value=&quot;.red&quot;&gt;red&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;#blue&quot; data-option-value=&quot;.blue&quot;&gt;blue&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;

&lt;/section&gt; &lt;!-- #options --&gt;

&lt;div id=&quot;container&quot; class=&quot;clearfix&quot;&gt;
  &lt;div class=&quot;red text-box&quot;&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.&lt;/div&gt;
  &lt;div class=&quot;blue text-box&quot;&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.&lt;/div&gt;
  &lt;div class=&quot;red text-box&quot;&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.&lt;/div&gt;
  &lt;div class=&quot;blue text-box&quot;&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.&lt;/div&gt;
  &lt;div class=&quot;red text-box&quot;&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.&lt;/div&gt;
  &lt;div class=&quot;blue text-box&quot;&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.&lt;/div&gt;
  &lt;div class=&quot;red text-box&quot;&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.&lt;/div&gt;
  &lt;div class=&quot;blue text-box&quot;&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.&lt;/div&gt;
  &lt;div class=&quot;red text-box&quot;&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.&lt;/div&gt;
  &lt;div class=&quot;blue text-box&quot;&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.&lt;/div&gt;
  &lt;div class=&quot;red text-box&quot;&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.&lt;/div&gt;
  &lt;div class=&quot;blue text-box&quot;&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.&lt;/div&gt;
  &lt;div class=&quot;red text-box&quot;&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.&lt;/div&gt;
  &lt;div class=&quot;blue text-box&quot;&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.&lt;/div&gt;
&lt;/div&gt;


&lt;script src=&quot;../js/vendor/jquery.min.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;../js/jquery.isotope.min.js&quot;&gt;&lt;/script&gt;
&lt;script&gt;
  $(function(){

    var $container = $(&#39;#container&#39;);

    $container.isotope({
    });
    
    
      var $optionSets = $(&#39;#options .option-set&#39;),
          $optionLinks = $optionSets.find(&#39;a&#39;);

      $optionLinks.click(function(){
        var $this = $(this);
        // don&#39;t proceed if already selected
        if ( $this.hasClass(&#39;selected&#39;) ) {
          return false;
        }
        var $optionSet = $this.parents(&#39;.option-set&#39;);
        $optionSet.find(&#39;.selected&#39;).removeClass(&#39;selected&#39;);
        $this.addClass(&#39;selected&#39;);
  
        // make option object dynamically, i.e. { filter: &#39;.my-filter-class&#39; }
        var options = {},
            key = $optionSet.attr(&#39;data-option-key&#39;),
            value = $this.attr(&#39;data-option-value&#39;);
        // parse &#39;false&#39; as false boolean
        value = value === &#39;false&#39; ? false : value;
        options[ key ] = value;
        if ( key === &#39;layoutMode&#39; &amp;&amp; typeof changeLayoutMode === &#39;function&#39; ) {
          // changes in layout modes need extra logic
          changeLayoutMode( $this, options )
        } else {
          // otherwise, apply new options
          $container.isotope( options );
        }
        
        return false;
      });


  });
&lt;/script&gt;</description>
                <link>/tests/tiny-text.html</link>
                <guid>/tests/tiny-text</guid>
                <pubDate>2011-05-31T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Extending Isotope</title>
                <description>&lt;p&gt;Isotope uses a constructor pattern, &lt;code&gt;$.Isotope&lt;/code&gt;. To extend Isotope, you need only to add a method to &lt;code&gt;$.Isotope.prototype&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Isotope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;myMethod&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// or, using jQuery extend utility&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;extend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Isotope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;myMethod&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Before diving in, try &lt;a href=&quot;../jquery.isotope.js&quot;&gt;looking over the source&lt;/a&gt; to get a better understand of the internal logic behind Isotope.&lt;/p&gt;

&lt;h2 id=&quot;custom-layout-modes&quot;&gt;Custom layout modes&lt;/h2&gt;

&lt;p&gt;Isotope’s layout modes are built around four methods: &lt;code&gt;Reset&lt;/code&gt;, &lt;code&gt;Layout&lt;/code&gt;, &lt;code&gt;GetContainerSize&lt;/code&gt;, and &lt;code&gt;ResizeChanged&lt;/code&gt;. These methods are the hooks that allow you to develop your own custom layout mode, without getting your hands dirty dealing with sorting, filtering, or other functionality. These layout mode methods need to be prefixed with an underscore and the name of the layout mode.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// adding layout mode methods for &amp;#39;customMode&amp;#39;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;extend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Isotope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;_customModeReset&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;_customModeLayout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$elems&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;_customModeGetContainerSize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;_customModeResizeChanged&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;../custom-layout-modes/category-rows.html&quot;&gt;&lt;strong&gt;See Custom layout mode: Category Rows&lt;/strong&gt;&lt;/a&gt;
&lt;a href=&quot;../custom-layout-modes/spine-align.html&quot;&gt;&lt;strong&gt;See Custom layout mode: Spine align&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;All of the &lt;a href=&quot;../docs/layout-modes.html&quot;&gt;default layout modes&lt;/a&gt; follow this pattern. We’ll look at the code behind the &lt;em&gt;fitRows&lt;/em&gt; layout mode.&lt;/p&gt;

&lt;h3 id=&quot;reset&quot;&gt;Reset&lt;/h3&gt;

&lt;p&gt;Each layout mode should have its own set of properties that only it can use and not be affected by other layout modes. These properties can be accessed in the instance as an object whose value matches the layout mode name (i.e. &lt;code&gt;this.fitRows&lt;/code&gt; for &lt;em&gt;fitRows&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;Reset&lt;/code&gt; layout mode method is called with every &lt;code&gt;reLayout&lt;/code&gt;, where Isotope will go through each item element and position it. This method resets layout mode properties.&lt;/p&gt;

&lt;p&gt;The &lt;em&gt;fitRows&lt;/em&gt; layout mode keeps track of x and y position, as well as the height of the container. These properties are set back to zero in &lt;code&gt;Reset&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;_fitRowsReset&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fitRows&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;layout&quot;&gt;Layout&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;Layout&lt;/code&gt; layout mode method is where items are positioned. Most of your layout logic happens here. This method provides one argument &lt;code&gt;$elems&lt;/code&gt; – a jQuery object with the item elements that need to be positioned.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;$elems.each&lt;/code&gt; is the principle loop, iterating over each item element and positioning it. Items are positioned with the &lt;code&gt;_pushPosition&lt;/code&gt; method (see below). The layout modes properties are &lt;/p&gt;

&lt;p&gt;For &lt;em&gt;fitRows&lt;/em&gt;, items are placed with the &lt;code&gt;this.fitRows.x&lt;/code&gt; and &lt;code&gt;this.fitRows.y&lt;/code&gt; values. This position is determined by if the item can fit in the current row, or if a new row needs to be started.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;_fitRowsLayout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$elems&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;instance&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;containerWidth&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fitRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  
  &lt;span class=&quot;nx&quot;&gt;$elems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;each&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$this&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;atomW&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;outerWidth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;atomH&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;outerHeight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;atomW&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;containerWidth&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;// if this element cannot fit in the current row&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; 
  
    &lt;span class=&quot;c1&quot;&gt;// position the atom&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;instance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_pushPosition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;atomH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;atomW&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;getcontainersize&quot;&gt;GetContainerSize&lt;/h3&gt;

&lt;p&gt;After the script goes through positioning each item, it needs to resize the container. &lt;code&gt;GetContainerSize&lt;/code&gt; returns the style for the size of the container.&lt;/p&gt;

&lt;p&gt;In &lt;em&gt;fitRows&lt;/em&gt;, the height property is returned as the value for height.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;_fitRowsGetContainerSize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fitRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;resizechanged&quot;&gt;ResizeChanged&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;ResizeChanged&lt;/code&gt; is triggered whenever the browser window is resized. Before Isotope adjusts the layout, this method is triggered to determine if the layout has actually changed. The methods return a boolean.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;_fitRowsResizeChanged&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;helper-methods&quot;&gt;Helper methods&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;_pushPosition&lt;/code&gt; method is used within a layout mode’s &lt;code&gt;Layout&lt;/code&gt; method. It takes 3 arguments: the item element currently being positioned, the x position, and the y position.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;_pushPosition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;_getSegments&lt;/code&gt; is used within the layout mode’s &lt;code&gt;Reset&lt;/code&gt; method. It performs several utilities:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Determines the &lt;code&gt;columnWidth&lt;/code&gt; for the layout mode (&lt;code&gt;rowHeight&lt;/code&gt; for horizontal layout modes). This is either passed in as an option (i.e. &lt;code&gt;masonry { columnWidth: 90 }&lt;/code&gt;), or the width of the first item element. This property is then set for the layout mode, i.e. &lt;code&gt;this.masonry.columnWidth&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Calculates the number of number of columns (or rows, if horizontal) given the size of the container. This property is then set for the layout mode, i.e. &lt;code&gt;this.masonry.cols&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;_getSegments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;isHorizontal&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// for example&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;_cellsByRowReset&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cellsByRow&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// get this.cellsByRow.columnWidth&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_getSegments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// get this.cellsByRow.rowHeight&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_getSegments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Similarly, &lt;code&gt;_checkIfSegmentsChanged&lt;/code&gt; is used within &lt;code&gt;ResizeChanged&lt;/code&gt;. It returns a boolean indicating whether or not the number of columns or rows has changed since the window has been resized.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;_checkIfSegmentsChanged&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;isHorizontal&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// for example&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;_masonryResizeChanged&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_checkIfSegmentsChanged&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

</description>
                <link>/docs/extending-isotope.html</link>
                <guid>/docs/extending-isotope</guid>
                <pubDate>2011-05-25T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>elements complete test</title>
                <description>&lt;section id=&quot;copy&quot;&gt;
  &lt;p&gt;Isotope&amp;rsquo;s capabilities are designed to be used together cohesively. You can do it all &amp;mdash; filter, sort, change layout modes, add items &amp;mdash; and Isotope will handle it with ease.&lt;/p&gt;
&lt;/section&gt;

&lt;section id=&quot;options&quot; class=&quot;clearfix&quot;&gt;

  
      &lt;h3&gt;Filter&lt;/h3&gt;

      &lt;ul id=&quot;filters&quot; class=&quot;option-set clearfix&quot; data-option-key=&quot;filter&quot;&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.metal&quot; class=&quot;selected&quot;&gt;Aktuell&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.nonmetal&quot;&gt;Veranstaltungen&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.alkali, .alkaline-earth&quot;&gt;Rezepte&lt;/a&gt;&lt;/li&gt;
        
        
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.transition&quot;&gt;transition&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.post-transition&quot;&gt;post-transition&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.inner-transition&quot;&gt;inner-transition&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;:not(.transition)&quot;&gt;not transition&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.metal:not(.transition)&quot;&gt;metal but not transition&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;*&quot;&gt;Alles zeigen&lt;/a&gt;&lt;/li&gt;
        
      &lt;/ul&gt;


  
    &lt;h3&gt;Sortierung&lt;/h3&gt;

    &lt;ul id=&quot;sort-by&quot; class=&quot;option-set clearfix&quot; data-option-key=&quot;sortBy&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=original-order&quot; data-option-value=&quot;original-order&quot; class=&quot;selected&quot; data&gt;Original&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=name&quot; data-option-value=&quot;name&quot;&gt;Name&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=symbol&quot; data-option-value=&quot;symbol&quot;&gt;Symbol&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=number&quot; data-option-value=&quot;number&quot;&gt;Nummer&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=weight&quot;  data-option-value=&quot;weight&quot;&gt;Gewicht&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=category&quot; data-option-value=&quot;category&quot;&gt;Kategorie&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=random&quot; data-option-value=&quot;random&quot;&gt;Zufall&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;

    &lt;h3&gt;Sortierreihenfolge&lt;/h3&gt;

    &lt;ul id=&quot;sort-direction&quot; class=&quot;option-set clearfix&quot; data-option-key=&quot;sortAscending&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;#sortAscending=true&quot; data-option-value=&quot;true&quot; class=&quot;selected&quot;&gt;Aufsteigend&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortAscending=false&quot; data-option-value=&quot;false&quot;&gt;Absteigend&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;


  
    &lt;h3&gt;Layout&lt;/h3&gt;

    &lt;ul id=&quot;layouts&quot; class=&quot;option-set clearfix&quot; data-option-key=&quot;layoutMode&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;#fitRows&quot; data-option-value=&quot;fitRows&quot; class=&quot;selected&quot;&gt;Standard&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#cellsByRow&quot; data-option-value=&quot;cellsByRow&quot;&gt;Zellen&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#masonry&quot; data-option-value=&quot;masonry&quot; &gt;Masonry&lt;/a&gt;&lt;/li&gt;
&lt;!--      &lt;li&gt;&lt;a href=&quot;#straightDown&quot; data-option-value=&quot;straightDown&quot;&gt;straightDown&lt;/a&gt;&lt;/li&gt;--&gt;
&lt;!--      &lt;li&gt;&lt;a href=&quot;#masonryHorizontal&quot; data-option-value=&quot;masonryHorizontal&quot; class=&quot;horizontal&quot;&gt;masonryHorizontal&lt;/a&gt;&lt;/li&gt;--&gt;
      &lt;li&gt;&lt;a href=&quot;#fitColumns&quot; data-option-value=&quot;fitColumns&quot; class=&quot;horizontal&quot;&gt;fitColumns&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#cellsByColumn&quot; data-option-value=&quot;cellsByColumn&quot; class=&quot;horizontal&quot;&gt;cellsByColumn&lt;/a&gt;&lt;/li&gt;
&lt;!--      &lt;li&gt;&lt;a href=&quot;#straightAcross&quot; data-option-value=&quot;straightAcross&quot; class=&quot;horizontal&quot;&gt;straightAcross&lt;/a&gt;&lt;/li&gt;--&gt;
    &lt;/ul&gt;


  &lt;h3&gt;Etc&lt;/h3&gt;

  &lt;ul id=&quot;etc&quot; class=&quot;clearfix&quot;&gt;
    &lt;li id=&quot;toggle-sizes&quot;&gt;&lt;a href=&quot;#toggle-sizes&quot;&gt;Toggle variable sizes&lt;/a&gt;&lt;/li&gt;
    &lt;li id=&quot;insert&quot;&gt;&lt;a href=&quot;#insert&quot;&gt;Insert new elements&lt;/a&gt;&lt;/li&gt;
    &lt;li id=&quot;append&quot;&gt;&lt;a href=&#39;#append&#39;&gt;Append new elements&lt;/a&gt;&lt;/li&gt;
    &lt;li id=&quot;shuffle&quot;&gt;&lt;a href=&#39;#shuffle&#39;&gt;Shuffle&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;

&lt;/section&gt; &lt;!-- #options --&gt;


&lt;div id=&quot;container&quot; class=&quot;clickable clearfix&quot;&gt;
  
&lt;/div&gt;


&lt;script src=&quot;../js/vendor/jquery.min.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;../js/jquery.isotope.min.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;../js/fake-element.js&quot;&gt;&lt;/script&gt;
&lt;script&gt;
  $(function(){
    
    var $container = $(&#39;#container&#39;);

    
      // add randomish size classes
      $container.find(&#39;.element&#39;).each(function(){
        var $this = $(this),
            number = parseInt( $this.find(&#39;.number&#39;).text(), 10 );
        if ( number % 7 % 2 === 1 ) {
          $this.addClass(&#39;width2&#39;);
        }
        if ( number % 3 === 0 ) {
          $this.addClass(&#39;height2&#39;);
        }
      });

    console.time(&#39;init&#39;);
    $container.isotope({
      itemSelector : &#39;.element&#39;,
      // layoutMode : &#39;fitRows&#39;,
      masonry : {
        columnWidth : 120
      },
      masonryHorizontal : {
        rowHeight: 120
      },
      cellsByRow : {
        columnWidth : 240,
        rowHeight : 240
      },
      cellsByColumn : {
        columnWidth : 240,
        rowHeight : 240
      },
      getSortData : {
        symbol : function( $elem ) {
          return $elem.attr(&#39;data-symbol&#39;);
        },
        category : function( $elem ) {
          return $elem.attr(&#39;data-category&#39;);
        },
        number : function( $elem ) {
          return parseInt( $elem.find(&#39;.number&#39;).text(), 10 );
        },
        weight : function( $elem ) {
          return parseFloat( $elem.find(&#39;.weight&#39;).text().replace( /[\(\)]/g, &#39;&#39;) );
        },
        name : function ( $elem ) {
          return $elem.find(&#39;.name&#39;).text();
        }
      }
    });
    
    console.timeEnd(&#39;init&#39;);

    var $optionSets = $(&#39;#options .option-set&#39;),
        $optionLinks = $optionSets.find(&#39;a&#39;);

    $optionLinks.click(function(){
      var $this = $(this);
      // don&#39;t proceed if already selected
      if ( $this.hasClass(&#39;selected&#39;) ) {
        return false;
      }
      var $optionSet = $this.parents(&#39;.option-set&#39;);
      $optionSet.find(&#39;.selected&#39;).removeClass(&#39;selected&#39;);
      $this.addClass(&#39;selected&#39;);

      // make option object dynamically, i.e. { filter: &#39;.my-filter-class&#39; }
      var options = {},
          key = $optionSet.attr(&#39;data-option-key&#39;),
          value = $this.attr(&#39;data-option-value&#39;);
      // parse &#39;false&#39; as false boolean
      value = value === &#39;false&#39; ? false : value;
      options[ key ] = value;

      console.time( key );
      if ( key === &#39;layoutMode&#39; &amp;&amp; changeLayoutMode ) {
        // changes in layout modes need extra logic
        changeLayoutMode( $this, options )
      } else {
        // otherwise, apply new options
        $container.isotope( options );
      }
      console.timeEnd( key );

      return false;
    });

    
      // change layout
      var isHorizontal = false;
      function changeLayoutMode( $link, options ) {
        var wasHorizontal = isHorizontal;
        isHorizontal = $link.hasClass(&#39;horizontal&#39;);

        if ( wasHorizontal !== isHorizontal ) {
          // orientation change
          // need to do some clean up for transitions and sizes
          var style = isHorizontal ? 
            { height: &#39;80%&#39;, width: $container.width() } : 
            { width: &#39;auto&#39; };
          // stop any animation on container height / width
          $container.filter(&#39;:animated&#39;).stop();
          // disable transition, apply revised style
          $container.addClass(&#39;no-transition&#39;).css( style );
          setTimeout(function(){
            $container.removeClass(&#39;no-transition&#39;).isotope( options );
          }, 100 )
        } else {
          $container.isotope( options );
        }
      }

    
    
      // change size of clicked element
      $container.delegate( &#39;.element&#39;, &#39;click&#39;, function(){
        $(this).toggleClass(&#39;large&#39;);
        $container.isotope(&#39;reLayout&#39;);
      });

      // toggle variable sizes of all elements
      $(&#39;#toggle-sizes&#39;).find(&#39;a&#39;).click(function(){
        $container
          .toggleClass(&#39;variable-sizes&#39;)
          .isotope(&#39;reLayout&#39;);
        return false;
      });


    
      $(&#39;#insert a&#39;).click(function(){
        var $newEls = $( fakeElement.getGroup() );
        $container.isotope( &#39;insert&#39;, $newEls );

        return false;
      });

      $(&#39;#append a&#39;).click(function(){
        var $newEls = $( fakeElement.getGroup() );
        $container.append( $newEls ).isotope( &#39;appended&#39;, $newEls );

        return false;
      });


    var $sortBy = $(&#39;#sort-by&#39;);
    $(&#39;#shuffle a&#39;).click(function(){
      console.time(&#39;shuffle&#39;);
      $container.isotope(&#39;shuffle&#39;);
      $sortBy.find(&#39;.selected&#39;).removeClass(&#39;selected&#39;);
      $sortBy.find(&#39;[data-option-value=&quot;random&quot;]&#39;).addClass(&#39;selected&#39;);
      console.timeEnd(&#39;shuffle&#39;);
      return false;
    });

  });
&lt;/script&gt;
</description>
                <link>/tests/elements-complete-test.html</link>
                <guid>/tests/elements-complete-test</guid>
                <pubDate>2011-05-24T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Category rows</title>
                <description>&lt;section id=&quot;copy&quot;&gt;
  &lt;p&gt;This demo uses a &lt;a href=&quot;../docs/extending-isotope.html&quot;&gt;custom layout mode&lt;/a&gt;, &lt;code&gt;categoryRows&lt;/code&gt; that arranges elements into rows based on their category. The layout mode logic relies on sorting to define rows.&lt;/p&gt;
&lt;/section&gt;

&lt;section id=&quot;options&quot; class=&quot;clearfix&quot;&gt;

  
      &lt;h3&gt;Filter&lt;/h3&gt;

      &lt;ul id=&quot;filters&quot; class=&quot;option-set clearfix&quot; data-option-key=&quot;filter&quot;&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.metal&quot; class=&quot;selected&quot;&gt;Aktuell&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.nonmetal&quot;&gt;Veranstaltungen&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.alkali, .alkaline-earth&quot;&gt;Rezepte&lt;/a&gt;&lt;/li&gt;
        
        
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.transition&quot;&gt;transition&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.post-transition&quot;&gt;post-transition&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.inner-transition&quot;&gt;inner-transition&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;:not(.transition)&quot;&gt;not transition&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.metal:not(.transition)&quot;&gt;metal but not transition&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;*&quot;&gt;Alles zeigen&lt;/a&gt;&lt;/li&gt;
        
      &lt;/ul&gt;


  &lt;h3&gt;Etc&lt;/h3&gt;

  &lt;ul id=&quot;etc&quot; class=&quot;clearfix&quot;&gt;
    &lt;li id=&quot;toggle-sizes&quot;&gt;&lt;a href=&quot;#toggle-sizes&quot;&gt;Toggle variable sizes&lt;/a&gt;&lt;/li&gt;
    &lt;li id=&quot;insert&quot;&gt;&lt;a href=&quot;#insert&quot;&gt;Insert new elements&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/section&gt; &lt;!-- #options --&gt;

&lt;div id=&quot;container&quot; class=&quot;clearfix&quot;&gt;
  
&lt;/div&gt;

&lt;script src=&quot;../js/vendor/jquery.min.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;../js/jquery.isotope.min.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;../js/fake-element.js&quot;&gt;&lt;/script&gt;
&lt;script&gt;

  // categoryRows custom layout mode
  $.extend( $.Isotope.prototype, {
  
    _categoryRowsReset : function() {
      this.categoryRows = {
        x : 0,
        y : 0,
        height : 0,
        currentCategory : null
      };
    },
  
    _categoryRowsLayout : function( $elems ) {
      var instance = this,
          containerWidth = this.element.width(),
          sortBy = this.options.sortBy,
          props = this.categoryRows;
      
      $elems.each( function() {
        var $this = $(this),
            atomW = $this.outerWidth(true),
            atomH = $this.outerHeight(true),
            category = $.data( this, &#39;isotope-sort-data&#39; )[ sortBy ],
            x, y;
      
        if ( category !== props.currentCategory ) {
          // new category, new row
          props.x = 0;
          props.height += props.currentCategory ? instance.options.categoryRows.gutter : 0;
          props.y = props.height;
          props.currentCategory = category;
        } else if ( props.x !== 0 &amp;&amp; atomW + props.x &gt; containerWidth ) {
          // if this element cannot fit in the current row
          props.x = 0;
          props.y = props.height;
        } 
      
        // position the atom
        instance._pushPosition( $this, props.x, props.y );
  
        props.height = Math.max( props.y + atomH, props.height );
        props.x += atomW;
  
      });
    },
  
    _categoryRowsGetContainerSize : function () {
      return { height : this.categoryRows.height };
    },
  
    _categoryRowsResizeChanged : function() {
      return true;
    }
  
  });
  
  $(function(){
    
    var $container = $(&#39;#container&#39;);
    
    
      // add randomish size classes
      $container.find(&#39;.element&#39;).each(function(){
        var $this = $(this),
            number = parseInt( $this.find(&#39;.number&#39;).text(), 10 );
        if ( number % 7 % 2 === 1 ) {
          $this.addClass(&#39;width2&#39;);
        }
        if ( number % 3 === 0 ) {
          $this.addClass(&#39;height2&#39;);
        }
      });
    
    $container.isotope({
      itemSelector : &#39;.element&#39;,
      layoutMode : &#39;categoryRows&#39;,
      categoryRows : {
        gutter : 20
      },
      getSortData : {
        category : function( $elem ) {
          return $elem.attr(&#39;data-category&#39;);
        }
      },
      sortBy: &#39;category&#39;
    });

    
      var $optionSets = $(&#39;#options .option-set&#39;),
          $optionLinks = $optionSets.find(&#39;a&#39;);

      $optionLinks.click(function(){
        var $this = $(this);
        // don&#39;t proceed if already selected
        if ( $this.hasClass(&#39;selected&#39;) ) {
          return false;
        }
        var $optionSet = $this.parents(&#39;.option-set&#39;);
        $optionSet.find(&#39;.selected&#39;).removeClass(&#39;selected&#39;);
        $this.addClass(&#39;selected&#39;);
  
        // make option object dynamically, i.e. { filter: &#39;.my-filter-class&#39; }
        var options = {},
            key = $optionSet.attr(&#39;data-option-key&#39;),
            value = $this.attr(&#39;data-option-value&#39;);
        // parse &#39;false&#39; as false boolean
        value = value === &#39;false&#39; ? false : value;
        options[ key ] = value;
        if ( key === &#39;layoutMode&#39; &amp;&amp; typeof changeLayoutMode === &#39;function&#39; ) {
          // changes in layout modes need extra logic
          changeLayoutMode( $this, options )
        } else {
          // otherwise, apply new options
          $container.isotope( options );
        }
        
        return false;
      });


    
      $(&#39;#insert a&#39;).click(function(){
        var $newEls = $( fakeElement.getGroup() );
        $container.isotope( &#39;insert&#39;, $newEls );

        return false;
      });

      $(&#39;#append a&#39;).click(function(){
        var $newEls = $( fakeElement.getGroup() );
        $container.append( $newEls ).isotope( &#39;appended&#39;, $newEls );

        return false;
      });


    // toggle variable sizes of all elements
    $(&#39;#toggle-sizes&#39;).find(&#39;a&#39;).click(function(){
      $container
        .toggleClass(&#39;variable-sizes&#39;)
        .isotope(&#39;reLayout&#39;);
      return false;
    });

  });
&lt;/script&gt;
  
  </description>
                <link>/custom-layout-modes/category-rows.html</link>
                <guid>/custom-layout-modes/category-rows</guid>
                <pubDate>2011-05-22T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Centered Masonry</title>
                <description>&lt;style&gt;
  #container {
    margin: 0 auto 20px;
  }
&lt;/style&gt;

&lt;section id=&quot;copy&quot;&gt;
  &lt;p&gt;&lt;a href=&quot;../docs/layout-modes.html#modified_layout_modes&quot;&gt;Modified masonry layout mode&lt;/a&gt; for centered container.&lt;/p&gt;
&lt;/section&gt;

&lt;section id=&quot;options&quot; class=&quot;clearfix&quot;&gt;

  
      &lt;h3&gt;Filter&lt;/h3&gt;

      &lt;ul id=&quot;filters&quot; class=&quot;option-set clearfix&quot; data-option-key=&quot;filter&quot;&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.metal&quot; class=&quot;selected&quot;&gt;Aktuell&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.nonmetal&quot;&gt;Veranstaltungen&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.alkali, .alkaline-earth&quot;&gt;Rezepte&lt;/a&gt;&lt;/li&gt;
        
        
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.transition&quot;&gt;transition&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.post-transition&quot;&gt;post-transition&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.inner-transition&quot;&gt;inner-transition&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;:not(.transition)&quot;&gt;not transition&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.metal:not(.transition)&quot;&gt;metal but not transition&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;*&quot;&gt;Alles zeigen&lt;/a&gt;&lt;/li&gt;
        
      &lt;/ul&gt;


  
    &lt;h3&gt;Sortierung&lt;/h3&gt;

    &lt;ul id=&quot;sort-by&quot; class=&quot;option-set clearfix&quot; data-option-key=&quot;sortBy&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=original-order&quot; data-option-value=&quot;original-order&quot; class=&quot;selected&quot; data&gt;Original&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=name&quot; data-option-value=&quot;name&quot;&gt;Name&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=symbol&quot; data-option-value=&quot;symbol&quot;&gt;Symbol&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=number&quot; data-option-value=&quot;number&quot;&gt;Nummer&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=weight&quot;  data-option-value=&quot;weight&quot;&gt;Gewicht&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=category&quot; data-option-value=&quot;category&quot;&gt;Kategorie&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=random&quot; data-option-value=&quot;random&quot;&gt;Zufall&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;

    &lt;h3&gt;Sortierreihenfolge&lt;/h3&gt;

    &lt;ul id=&quot;sort-direction&quot; class=&quot;option-set clearfix&quot; data-option-key=&quot;sortAscending&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;#sortAscending=true&quot; data-option-value=&quot;true&quot; class=&quot;selected&quot;&gt;Aufsteigend&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortAscending=false&quot; data-option-value=&quot;false&quot;&gt;Absteigend&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;


  &lt;h3&gt;Etc&lt;/h3&gt;

  &lt;ul id=&quot;etc&quot; class=&quot;clearfix&quot;&gt;
    &lt;li id=&quot;toggle-sizes&quot;&gt;&lt;a href=&quot;#toggle-sizes&quot;&gt;Toggle variable sizes&lt;/a&gt;&lt;/li&gt;
    &lt;li id=&quot;insert&quot;&gt;&lt;a href=&quot;#insert&quot;&gt;Insert new elements&lt;/a&gt;&lt;/li&gt;
    &lt;li id=&quot;append&quot;&gt;&lt;a href=&#39;#append&#39;&gt;Append new elements&lt;/a&gt;&lt;/li&gt;
    &lt;li id=&quot;shuffle&quot;&gt;&lt;a href=&#39;#shuffle&#39;&gt;Shuffle&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;

&lt;/section&gt; &lt;!-- #options --&gt;

&lt;div id=&quot;container&quot; class=&quot;clickable clearfix&quot;&gt;
  
&lt;/div&gt; &lt;!-- #container --&gt;


&lt;script src=&quot;../js/vendor/jquery.min.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;../js/jquery.isotope.min.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;http://mamp:8888/js/fake-element.js&quot;&gt;&lt;/script&gt;
&lt;script&gt;

  $.Isotope.prototype._getCenteredMasonryColumns = function() {
    this.width = this.element.width();
    
    var parentWidth = this.element.parent().width();
    
                  // i.e. options.masonry &amp;&amp; options.masonry.columnWidth
    var colW = this.options.masonry &amp;&amp; this.options.masonry.columnWidth ||
                  // or use the size of the first item
                  this.$filteredAtoms.outerWidth(true) ||
                  // if there&#39;s no items, use size of container
                  parentWidth;
    
    var cols = Math.floor( parentWidth / colW );
    cols = Math.max( cols, 1 );

    // i.e. this.masonry.cols = ....
    this.masonry.cols = cols;
    // i.e. this.masonry.columnWidth = ...
    this.masonry.columnWidth = colW;
  };
  
  $.Isotope.prototype._masonryReset = function() {
    // layout-specific props
    this.masonry = {};
    // FIXME shouldn&#39;t have to call this again
    this._getCenteredMasonryColumns();
    var i = this.masonry.cols;
    this.masonry.colYs = [];
    while (i--) {
      this.masonry.colYs.push( 0 );
    }
  };

  $.Isotope.prototype._masonryResizeChanged = function() {
    var prevColCount = this.masonry.cols;
    // get updated colCount
    this._getCenteredMasonryColumns();
    return ( this.masonry.cols !== prevColCount );
  };
  
  $.Isotope.prototype._masonryGetContainerSize = function() {
    var unusedCols = 0,
        i = this.masonry.cols;
    // count unused columns
    while ( --i ) {
      if ( this.masonry.colYs[i] !== 0 ) {
        break;
      }
      unusedCols++;
    }
    
    return {
          height : Math.max.apply( Math, this.masonry.colYs ),
          // fit container to columns that have been used;
          width : (this.masonry.cols - unusedCols) * this.masonry.columnWidth
        };
  };


  $(function(){
    
    var $container = $(&#39;#container&#39;);
    
    
      // add randomish size classes
      $container.find(&#39;.element&#39;).each(function(){
        var $this = $(this),
            number = parseInt( $this.find(&#39;.number&#39;).text(), 10 );
        if ( number % 7 % 2 === 1 ) {
          $this.addClass(&#39;width2&#39;);
        }
        if ( number % 3 === 0 ) {
          $this.addClass(&#39;height2&#39;);
        }
      });
    
    $container.isotope({
      itemSelector : &#39;.element&#39;,
      masonry : {
        columnWidth : 120
      },
      getSortData : {
        symbol : function( $elem ) {
          return $elem.attr(&#39;data-symbol&#39;);
        },
        category : function( $elem ) {
          return $elem.attr(&#39;data-category&#39;);
        },
        number : function( $elem ) {
          return parseInt( $elem.find(&#39;.number&#39;).text(), 10 );
        },
        weight : function( $elem ) {
          return parseFloat( $elem.find(&#39;.weight&#39;).text().replace( /[\(\)]/g, &#39;&#39;) );
        },
        name : function ( $elem ) {
          return $elem.find(&#39;.name&#39;).text();
        }
      }
    });
      
    
      var $optionSets = $(&#39;#options .option-set&#39;),
          $optionLinks = $optionSets.find(&#39;a&#39;);

      $optionLinks.click(function(){
        var $this = $(this);
        // don&#39;t proceed if already selected
        if ( $this.hasClass(&#39;selected&#39;) ) {
          return false;
        }
        var $optionSet = $this.parents(&#39;.option-set&#39;);
        $optionSet.find(&#39;.selected&#39;).removeClass(&#39;selected&#39;);
        $this.addClass(&#39;selected&#39;);
  
        // make option object dynamically, i.e. { filter: &#39;.my-filter-class&#39; }
        var options = {},
            key = $optionSet.attr(&#39;data-option-key&#39;),
            value = $this.attr(&#39;data-option-value&#39;);
        // parse &#39;false&#39; as false boolean
        value = value === &#39;false&#39; ? false : value;
        options[ key ] = value;
        if ( key === &#39;layoutMode&#39; &amp;&amp; typeof changeLayoutMode === &#39;function&#39; ) {
          // changes in layout modes need extra logic
          changeLayoutMode( $this, options )
        } else {
          // otherwise, apply new options
          $container.isotope( options );
        }
        
        return false;
      });


    
      $(&#39;#insert a&#39;).click(function(){
        var $newEls = $( fakeElement.getGroup() );
        $container.isotope( &#39;insert&#39;, $newEls );

        return false;
      });

      $(&#39;#append a&#39;).click(function(){
        var $newEls = $( fakeElement.getGroup() );
        $container.append( $newEls ).isotope( &#39;appended&#39;, $newEls );

        return false;
      });


    
      // change size of clicked element
      $container.delegate( &#39;.element&#39;, &#39;click&#39;, function(){
        $(this).toggleClass(&#39;large&#39;);
        $container.isotope(&#39;reLayout&#39;);
      });

      // toggle variable sizes of all elements
      $(&#39;#toggle-sizes&#39;).find(&#39;a&#39;).click(function(){
        $container
          .toggleClass(&#39;variable-sizes&#39;)
          .isotope(&#39;reLayout&#39;);
        return false;
      });


    var $sortBy = $(&#39;#sort-by&#39;);
    $(&#39;#shuffle a&#39;).click(function(){
      $container.isotope(&#39;shuffle&#39;);
      $sortBy.find(&#39;.selected&#39;).removeClass(&#39;selected&#39;);
      $sortBy.find(&#39;[data-option-value=&quot;random&quot;]&#39;).addClass(&#39;selected&#39;);
      return false;
    });
    
  });
&lt;/script&gt;</description>
                <link>/custom-layout-modes/centered-masonry.html</link>
                <guid>/custom-layout-modes/centered-masonry</guid>
                <pubDate>2011-05-18T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>jquery animation</title>
                <description>&lt;style&gt;
  .isotope,
  .isotope .isotope-item {
    -webkit-transition: none;
       -moz-transition: none;
        -ms-transition: none;
         -o-transition: none;
            transition: none;
  }
&lt;/style&gt;

&lt;section id=&quot;copy&quot;&gt;
  &lt;p&gt;Check that the option setter for animationEngine is properly triggered.&lt;/p&gt;
&lt;/section&gt;

&lt;section id=&quot;options&quot; class=&quot;clearfix&quot;&gt;


  
      &lt;h3&gt;Filter&lt;/h3&gt;

      &lt;ul id=&quot;filters&quot; class=&quot;option-set clearfix&quot; data-option-key=&quot;filter&quot;&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.metal&quot; class=&quot;selected&quot;&gt;Aktuell&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.nonmetal&quot;&gt;Veranstaltungen&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.alkali, .alkaline-earth&quot;&gt;Rezepte&lt;/a&gt;&lt;/li&gt;
        
        
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.transition&quot;&gt;transition&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.post-transition&quot;&gt;post-transition&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.inner-transition&quot;&gt;inner-transition&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;:not(.transition)&quot;&gt;not transition&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.metal:not(.transition)&quot;&gt;metal but not transition&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;*&quot;&gt;Alles zeigen&lt;/a&gt;&lt;/li&gt;
        
      &lt;/ul&gt;


  
    &lt;h3&gt;Sortierung&lt;/h3&gt;

    &lt;ul id=&quot;sort-by&quot; class=&quot;option-set clearfix&quot; data-option-key=&quot;sortBy&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=original-order&quot; data-option-value=&quot;original-order&quot; class=&quot;selected&quot; data&gt;Original&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=name&quot; data-option-value=&quot;name&quot;&gt;Name&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=symbol&quot; data-option-value=&quot;symbol&quot;&gt;Symbol&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=number&quot; data-option-value=&quot;number&quot;&gt;Nummer&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=weight&quot;  data-option-value=&quot;weight&quot;&gt;Gewicht&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=category&quot; data-option-value=&quot;category&quot;&gt;Kategorie&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=random&quot; data-option-value=&quot;random&quot;&gt;Zufall&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;

    &lt;h3&gt;Sortierreihenfolge&lt;/h3&gt;

    &lt;ul id=&quot;sort-direction&quot; class=&quot;option-set clearfix&quot; data-option-key=&quot;sortAscending&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;#sortAscending=true&quot; data-option-value=&quot;true&quot; class=&quot;selected&quot;&gt;Aufsteigend&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortAscending=false&quot; data-option-value=&quot;false&quot;&gt;Absteigend&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;


  &lt;h3&gt;Etc&lt;/h3&gt;

  &lt;ul id=&quot;etc&quot; class=&quot;clearfix&quot;&gt;

    &lt;li id=&quot;toggle-animation&quot;&gt;&lt;a href=&quot;#toggle-animation&quot;&gt;Toggle jQuery animation&lt;/a&gt;&lt;/li&gt;
    &lt;li id=&quot;toggle-sizes&quot;&gt;&lt;a href=&quot;#toggle-sizes&quot;&gt;Toggle variable sizes&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/section&gt; &lt;!-- #options --&gt;

&lt;div id=&quot;container&quot; class=&quot;clickable clearfix&quot;&gt;
  
&lt;/div&gt; &lt;!-- #container --&gt;

&lt;script src=&quot;../js/vendor/jquery.min.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;../js/jquery.isotope.min.js&quot;&gt;&lt;/script&gt;
&lt;script&gt;
  $(function(){
  
    var $container = $(&#39;#container&#39;);
    
    
      // add randomish size classes
      $container.find(&#39;.element&#39;).each(function(){
        var $this = $(this),
            number = parseInt( $this.find(&#39;.number&#39;).text(), 10 );
        if ( number % 7 % 2 === 1 ) {
          $this.addClass(&#39;width2&#39;);
        }
        if ( number % 3 === 0 ) {
          $this.addClass(&#39;height2&#39;);
        }
      });
    
    $container.isotope({
      itemSelector: &#39;.element&#39;,
      transformsEnabled: false,
      animationEngine: &#39;jquery&#39;,
      masonry: {
        columnWidth : 120
      },
      getSortData : {
        symbol : function( $elem ) {
          return $elem.attr(&#39;data-symbol&#39;);
        },
        category : function( $elem ) {
          return $elem.attr(&#39;data-category&#39;);
        },
        number : function( $elem ) {
          return parseInt( $elem.find(&#39;.number&#39;).text(), 10 );
        },
        weight : function( $elem ) {
          return parseFloat( $elem.find(&#39;.weight&#39;).text().replace( /[\(\)]/g, &#39;&#39;) );
        },
        name : function ( $elem ) {
          return $elem.find(&#39;.name&#39;).text();
        }
      }
    });
    
    
      var $optionSets = $(&#39;#options .option-set&#39;),
          $optionLinks = $optionSets.find(&#39;a&#39;);

      $optionLinks.click(function(){
        var $this = $(this);
        // don&#39;t proceed if already selected
        if ( $this.hasClass(&#39;selected&#39;) ) {
          return false;
        }
        var $optionSet = $this.parents(&#39;.option-set&#39;);
        $optionSet.find(&#39;.selected&#39;).removeClass(&#39;selected&#39;);
        $this.addClass(&#39;selected&#39;);
  
        // make option object dynamically, i.e. { filter: &#39;.my-filter-class&#39; }
        var options = {},
            key = $optionSet.attr(&#39;data-option-key&#39;),
            value = $this.attr(&#39;data-option-value&#39;);
        // parse &#39;false&#39; as false boolean
        value = value === &#39;false&#39; ? false : value;
        options[ key ] = value;
        if ( key === &#39;layoutMode&#39; &amp;&amp; typeof changeLayoutMode === &#39;function&#39; ) {
          // changes in layout modes need extra logic
          changeLayoutMode( $this, options )
        } else {
          // otherwise, apply new options
          $container.isotope( options );
        }
        
        return false;
      });


    
      // change size of clicked element
      $container.delegate( &#39;.element&#39;, &#39;click&#39;, function(){
        $(this).toggleClass(&#39;large&#39;);
        $container.isotope(&#39;reLayout&#39;);
      });

      // toggle variable sizes of all elements
      $(&#39;#toggle-sizes&#39;).find(&#39;a&#39;).click(function(){
        $container
          .toggleClass(&#39;variable-sizes&#39;)
          .isotope(&#39;reLayout&#39;);
        return false;
      });

    
    var isAnimated = true;
    $(&#39;#toggle-animation&#39;).click(function(){
      isAnimated = !isAnimated;
      var aniEngine = isAnimated ? &#39;jquery&#39; : &#39;css&#39;;
      $container.isotope( &#39;option&#39;, { animationEngine: aniEngine } );
      return false;
    });

  });
&lt;/script&gt;</description>
                <link>/tests/jquery-animation.html</link>
                <guid>/tests/jquery-animation</guid>
                <pubDate>2011-05-13T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>item position data</title>
                <description>  &lt;section id=&quot;copy&quot;&gt;
    &lt;p&gt;&lt;code&gt;itemPositionDataEnabled&lt;/code&gt; option is enabled.  &lt;/p&gt;
  &lt;/section&gt;
  
  &lt;section id=&quot;options&quot; class=&quot;clearfix&quot;&gt;

    
    &lt;h3&gt;Sortierung&lt;/h3&gt;

    &lt;ul id=&quot;sort-by&quot; class=&quot;option-set clearfix&quot; data-option-key=&quot;sortBy&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=original-order&quot; data-option-value=&quot;original-order&quot; class=&quot;selected&quot; data&gt;Original&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=name&quot; data-option-value=&quot;name&quot;&gt;Name&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=symbol&quot; data-option-value=&quot;symbol&quot;&gt;Symbol&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=number&quot; data-option-value=&quot;number&quot;&gt;Nummer&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=weight&quot;  data-option-value=&quot;weight&quot;&gt;Gewicht&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=category&quot; data-option-value=&quot;category&quot;&gt;Kategorie&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=random&quot; data-option-value=&quot;random&quot;&gt;Zufall&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;

    &lt;h3&gt;Sortierreihenfolge&lt;/h3&gt;

    &lt;ul id=&quot;sort-direction&quot; class=&quot;option-set clearfix&quot; data-option-key=&quot;sortAscending&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;#sortAscending=true&quot; data-option-value=&quot;true&quot; class=&quot;selected&quot;&gt;Aufsteigend&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortAscending=false&quot; data-option-value=&quot;false&quot;&gt;Absteigend&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;


    &lt;h3&gt;Etc&lt;/h3&gt;

    &lt;ul id=&quot;etc&quot; class=&quot;clearfix&quot;&gt;

      &lt;li id=&quot;toggle-sizes&quot;&gt;&lt;a href=&quot;#toggle-sizes&quot;&gt;Toggle variable sizes&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/section&gt; &lt;!-- #options --&gt;

  &lt;div id=&quot;container&quot; class=&quot;clickable clearfix&quot;&gt;
    
  &lt;/div&gt; &lt;!-- #container --&gt;

  &lt;script src=&quot;../js/vendor/jquery.min.js&quot;&gt;&lt;/script&gt;
  &lt;script src=&quot;../js/jquery.isotope.min.js&quot;&gt;&lt;/script&gt;
  &lt;script&gt;
  
    $(function(){
    
      var $container = $(&#39;#container&#39;);
      
      
      // add randomish size classes
      $container.find(&#39;.element&#39;).each(function(){
        var $this = $(this),
            number = parseInt( $this.find(&#39;.number&#39;).text(), 10 );
        if ( number % 7 % 2 === 1 ) {
          $this.addClass(&#39;width2&#39;);
        }
        if ( number % 3 === 0 ) {
          $this.addClass(&#39;height2&#39;);
        }
      });
      
      $container.isotope({
        itemSelector: &#39;.element&#39;,
        itemPositionDataEnabled: true,
        masonry: {
          columnWidth : 120
        },
        getSortData : {
          symbol : function( $elem ) {
            return $elem.attr(&#39;data-symbol&#39;);
          },
          category : function( $elem ) {
            return $elem.attr(&#39;data-category&#39;);
          },
          number : function( $elem ) {
            return parseInt( $elem.find(&#39;.number&#39;).text(), 10 );
          },
          weight : function( $elem ) {
            return parseFloat( $elem.find(&#39;.weight&#39;).text().replace( /[\(\)]/g, &#39;&#39;) );
          },
          name : function ( $elem ) {
            return $elem.find(&#39;.name&#39;).text();
          }
        }
      });
      
      
      var $optionSets = $(&#39;#options .option-set&#39;),
          $optionLinks = $optionSets.find(&#39;a&#39;);

      $optionLinks.click(function(){
        var $this = $(this);
        // don&#39;t proceed if already selected
        if ( $this.hasClass(&#39;selected&#39;) ) {
          return false;
        }
        var $optionSet = $this.parents(&#39;.option-set&#39;);
        $optionSet.find(&#39;.selected&#39;).removeClass(&#39;selected&#39;);
        $this.addClass(&#39;selected&#39;);
  
        // make option object dynamically, i.e. { filter: &#39;.my-filter-class&#39; }
        var options = {},
            key = $optionSet.attr(&#39;data-option-key&#39;),
            value = $this.attr(&#39;data-option-value&#39;);
        // parse &#39;false&#39; as false boolean
        value = value === &#39;false&#39; ? false : value;
        options[ key ] = value;
        if ( key === &#39;layoutMode&#39; &amp;&amp; typeof changeLayoutMode === &#39;function&#39; ) {
          // changes in layout modes need extra logic
          changeLayoutMode( $this, options )
        } else {
          // otherwise, apply new options
          $container.isotope( options );
        }
        
        return false;
      });


      
      // change size of clicked element
      $container.delegate( &#39;.element&#39;, &#39;click&#39;, function(){
        $(this).toggleClass(&#39;large&#39;);
        $container.isotope(&#39;reLayout&#39;);
      });

      // toggle variable sizes of all elements
      $(&#39;#toggle-sizes&#39;).find(&#39;a&#39;).click(function(){
        $container
          .toggleClass(&#39;variable-sizes&#39;)
          .isotope(&#39;reLayout&#39;);
        return false;
      });

    
    });
  &lt;/script&gt;</description>
                <link>/tests/item-position-data.html</link>
                <guid>/tests/item-position-data</guid>
                <pubDate>2011-04-26T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Kombinationsfilter</title>
                <description>&lt;section id=&quot;copy&quot;&gt;
  &lt;p&gt;Filters can be combined. In addition to filtering for just &lt;code&gt;.red&lt;/code&gt; or &lt;code&gt;.tall&lt;/code&gt;, you can pass in a filter selector of both: &lt;code&gt;.red.tall&lt;/code&gt;.&lt;/p&gt;
&lt;/section&gt;

&lt;section id=&quot;options&quot; class=&quot;clearfix combo-filters&quot;&gt;
  
  &lt;h3&gt;Filters&lt;/h3&gt;

  
    &lt;div class=&quot;option-combo color&quot;&gt;
      &lt;h4&gt;color&lt;/h4&gt;
      &lt;ul class=&quot;filter option-set clearfix &quot; data-filter-group=&quot;color&quot;&gt; 
        &lt;li&gt;&lt;a href=&quot;#filter-color-any&quot; data-filter-value=&quot;&quot; class=&quot;selected&quot;&gt;any&lt;/a&gt;
        
          &lt;li&gt;&lt;a href=&quot;#filter-color-red&quot; data-filter-value=&quot;.red&quot;&gt;red&lt;/a&gt;
        
          &lt;li&gt;&lt;a href=&quot;#filter-color-blue&quot; data-filter-value=&quot;.blue&quot;&gt;blue&lt;/a&gt;
        
          &lt;li&gt;&lt;a href=&quot;#filter-color-yellow&quot; data-filter-value=&quot;.yellow&quot;&gt;yellow&lt;/a&gt;
        
      &lt;/ul&gt;
    &lt;/div&gt;
  
    &lt;div class=&quot;option-combo size&quot;&gt;
      &lt;h4&gt;size&lt;/h4&gt;
      &lt;ul class=&quot;filter option-set clearfix &quot; data-filter-group=&quot;size&quot;&gt; 
        &lt;li&gt;&lt;a href=&quot;#filter-size-any&quot; data-filter-value=&quot;&quot; class=&quot;selected&quot;&gt;any&lt;/a&gt;
        
          &lt;li&gt;&lt;a href=&quot;#filter-size-small&quot; data-filter-value=&quot;.small&quot;&gt;small&lt;/a&gt;
        
          &lt;li&gt;&lt;a href=&quot;#filter-size-wide&quot; data-filter-value=&quot;.wide&quot;&gt;wide&lt;/a&gt;
        
          &lt;li&gt;&lt;a href=&quot;#filter-size-tall&quot; data-filter-value=&quot;.tall&quot;&gt;tall&lt;/a&gt;
        
          &lt;li&gt;&lt;a href=&quot;#filter-size-big&quot; data-filter-value=&quot;.big&quot;&gt;big&lt;/a&gt;
        
      &lt;/ul&gt;
    &lt;/div&gt;
  
    &lt;div class=&quot;option-combo shape&quot;&gt;
      &lt;h4&gt;shape&lt;/h4&gt;
      &lt;ul class=&quot;filter option-set clearfix &quot; data-filter-group=&quot;shape&quot;&gt; 
        &lt;li&gt;&lt;a href=&quot;#filter-shape-any&quot; data-filter-value=&quot;&quot; class=&quot;selected&quot;&gt;any&lt;/a&gt;
        
          &lt;li&gt;&lt;a href=&quot;#filter-shape-round&quot; data-filter-value=&quot;.round&quot;&gt;round&lt;/a&gt;
        
          &lt;li&gt;&lt;a href=&quot;#filter-shape-square&quot; data-filter-value=&quot;.square&quot;&gt;square&lt;/a&gt;
        
      &lt;/ul&gt;
    &lt;/div&gt;
  

&lt;/section&gt; &lt;!-- #options --&gt;

&lt;div id=&quot;container&quot; class=&quot;clearfix&quot;&gt;
  
    
      
        &lt;div class=&quot;color-shape small round red&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape small round blue&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape small round yellow&quot;&gt;&lt;/div&gt;
      
    
      
        &lt;div class=&quot;color-shape small square red&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape small square blue&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape small square yellow&quot;&gt;&lt;/div&gt;
      
    
  
    
      
        &lt;div class=&quot;color-shape wide round red&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape wide round blue&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape wide round yellow&quot;&gt;&lt;/div&gt;
      
    
      
        &lt;div class=&quot;color-shape wide square red&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape wide square blue&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape wide square yellow&quot;&gt;&lt;/div&gt;
      
    
  
    
      
        &lt;div class=&quot;color-shape tall round red&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape tall round blue&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape tall round yellow&quot;&gt;&lt;/div&gt;
      
    
      
        &lt;div class=&quot;color-shape tall square red&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape tall square blue&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape tall square yellow&quot;&gt;&lt;/div&gt;
      
    
  
    
      
        &lt;div class=&quot;color-shape big round red&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape big round blue&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape big round yellow&quot;&gt;&lt;/div&gt;
      
    
      
        &lt;div class=&quot;color-shape big square red&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape big square blue&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape big square yellow&quot;&gt;&lt;/div&gt;
      
    
  
  
  
  
    
      
        &lt;div class=&quot;color-shape small round red&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape wide round red&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape tall round red&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape big round red&quot;&gt;&lt;/div&gt;
      
    
      
        &lt;div class=&quot;color-shape small square red&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape wide square red&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape tall square red&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape big square red&quot;&gt;&lt;/div&gt;
      
    
  
    
      
        &lt;div class=&quot;color-shape small round blue&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape wide round blue&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape tall round blue&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape big round blue&quot;&gt;&lt;/div&gt;
      
    
      
        &lt;div class=&quot;color-shape small square blue&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape wide square blue&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape tall square blue&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape big square blue&quot;&gt;&lt;/div&gt;
      
    
  
    
      
        &lt;div class=&quot;color-shape small round yellow&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape wide round yellow&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape tall round yellow&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape big round yellow&quot;&gt;&lt;/div&gt;
      
    
      
        &lt;div class=&quot;color-shape small square yellow&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape wide square yellow&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape tall square yellow&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape big square yellow&quot;&gt;&lt;/div&gt;
      
    
  
  
&lt;/div&gt; &lt;!-- #container --&gt;

&lt;script src=&quot;../js/vendor/jquery.min.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;../js/jquery.isotope.min.js&quot;&gt;&lt;/script&gt;
&lt;script&gt;
  $(function(){
    
    var $container = $(&#39;#container&#39;),
        filters = {};

    $container.isotope({
      itemSelector : &#39;.color-shape&#39;,
      masonry: {
        columnWidth: 80
      }
    });

    // filter buttons
    $(&#39;.filter a&#39;).click(function(){
      var $this = $(this);
      // don&#39;t proceed if already selected
      if ( $this.hasClass(&#39;selected&#39;) ) {
        return;
      }
      
      var $optionSet = $this.parents(&#39;.option-set&#39;);
      // change selected class
      $optionSet.find(&#39;.selected&#39;).removeClass(&#39;selected&#39;);
      $this.addClass(&#39;selected&#39;);
      
      // store filter value in object
      // i.e. filters.color = &#39;red&#39;
      var group = $optionSet.attr(&#39;data-filter-group&#39;);
      filters[ group ] = $this.attr(&#39;data-filter-value&#39;);
      // convert object into array
      var isoFilters = [];
      for ( var prop in filters ) {
        isoFilters.push( filters[ prop ] )
      }
      var selector = isoFilters.join(&#39;&#39;);
      $container.isotope({ filter: selector });

      return false;
    });

  });
&lt;/script&gt;</description>
                <link>/demos/combination-filters%202.html</link>
                <guid>/demos/combination-filters 2</guid>
                <pubDate>2011-03-29T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Kombinationsfilter ABT</title>
                <description>&lt;section id=&quot;copy&quot;&gt;
  &lt;p&gt;Filters can be combined. In addition to filtering for just &lt;code&gt;.red&lt;/code&gt; or &lt;code&gt;.tall&lt;/code&gt;, you can pass in a filter selector of both: &lt;code&gt;.red.tall&lt;/code&gt;.&lt;/p&gt;
&lt;/section&gt;

&lt;section id=&quot;options&quot; class=&quot;clearfix combo-filters&quot;&gt;
  
  &lt;h3&gt;Filter&lt;/h3&gt;

  
    &lt;div class=&quot;option-combo color&quot;&gt;
      &lt;h4&gt;color&lt;/h4&gt;
      &lt;ul class=&quot;filter option-set clearfix &quot; data-filter-group=&quot;color&quot;&gt; 
        &lt;li&gt;&lt;a href=&quot;#filter-color-any&quot; data-filter-value=&quot;&quot; class=&quot;selected&quot;&gt;any&lt;/a&gt;
        
          &lt;li&gt;&lt;a href=&quot;#filter-color-red&quot; data-filter-value=&quot;.red&quot;&gt;red&lt;/a&gt;
        
          &lt;li&gt;&lt;a href=&quot;#filter-color-blue&quot; data-filter-value=&quot;.blue&quot;&gt;blue&lt;/a&gt;
        
          &lt;li&gt;&lt;a href=&quot;#filter-color-yellow&quot; data-filter-value=&quot;.yellow&quot;&gt;yellow&lt;/a&gt;
        
      &lt;/ul&gt;
    &lt;/div&gt;
  
    &lt;div class=&quot;option-combo size&quot;&gt;
      &lt;h4&gt;size&lt;/h4&gt;
      &lt;ul class=&quot;filter option-set clearfix &quot; data-filter-group=&quot;size&quot;&gt; 
        &lt;li&gt;&lt;a href=&quot;#filter-size-any&quot; data-filter-value=&quot;&quot; class=&quot;selected&quot;&gt;any&lt;/a&gt;
        
          &lt;li&gt;&lt;a href=&quot;#filter-size-small&quot; data-filter-value=&quot;.small&quot;&gt;small&lt;/a&gt;
        
          &lt;li&gt;&lt;a href=&quot;#filter-size-wide&quot; data-filter-value=&quot;.wide&quot;&gt;wide&lt;/a&gt;
        
          &lt;li&gt;&lt;a href=&quot;#filter-size-tall&quot; data-filter-value=&quot;.tall&quot;&gt;tall&lt;/a&gt;
        
          &lt;li&gt;&lt;a href=&quot;#filter-size-big&quot; data-filter-value=&quot;.big&quot;&gt;big&lt;/a&gt;
        
      &lt;/ul&gt;
    &lt;/div&gt;
  
    &lt;div class=&quot;option-combo shape&quot;&gt;
      &lt;h4&gt;shape&lt;/h4&gt;
      &lt;ul class=&quot;filter option-set clearfix &quot; data-filter-group=&quot;shape&quot;&gt; 
        &lt;li&gt;&lt;a href=&quot;#filter-shape-any&quot; data-filter-value=&quot;&quot; class=&quot;selected&quot;&gt;any&lt;/a&gt;
        
          &lt;li&gt;&lt;a href=&quot;#filter-shape-round&quot; data-filter-value=&quot;.round&quot;&gt;round&lt;/a&gt;
        
          &lt;li&gt;&lt;a href=&quot;#filter-shape-square&quot; data-filter-value=&quot;.square&quot;&gt;square&lt;/a&gt;
        
      &lt;/ul&gt;
    &lt;/div&gt;
  

&lt;/section&gt; &lt;!-- #options --&gt;

&lt;div id=&quot;container&quot; class=&quot;clearfix&quot;&gt;
  
    
      
        &lt;div class=&quot;color-shape small round red&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape small round blue&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape small round yellow&quot;&gt;&lt;/div&gt;
      
    
      
        &lt;div class=&quot;color-shape small square red&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape small square blue&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape small square yellow&quot;&gt;&lt;/div&gt;
      
    
  
    
      
        &lt;div class=&quot;color-shape wide round red&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape wide round blue&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape wide round yellow&quot;&gt;&lt;/div&gt;
      
    
      
        &lt;div class=&quot;color-shape wide square red&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape wide square blue&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape wide square yellow&quot;&gt;&lt;/div&gt;
      
    
  
    
      
        &lt;div class=&quot;color-shape tall round red&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape tall round blue&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape tall round yellow&quot;&gt;&lt;/div&gt;
      
    
      
        &lt;div class=&quot;color-shape tall square red&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape tall square blue&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape tall square yellow&quot;&gt;&lt;/div&gt;
      
    
  
    
      
        &lt;div class=&quot;color-shape big round red&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape big round blue&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape big round yellow&quot;&gt;&lt;/div&gt;
      
    
      
        &lt;div class=&quot;color-shape big square red&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape big square blue&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape big square yellow&quot;&gt;&lt;/div&gt;
      
    
  
  
  
  
    
      
        &lt;div class=&quot;color-shape small round red&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape wide round red&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape tall round red&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape big round red&quot;&gt;&lt;/div&gt;
      
    
      
        &lt;div class=&quot;color-shape small square red&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape wide square red&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape tall square red&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape big square red&quot;&gt;&lt;/div&gt;
      
    
  
    
      
        &lt;div class=&quot;color-shape small round blue&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape wide round blue&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape tall round blue&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape big round blue&quot;&gt;&lt;/div&gt;
      
    
      
        &lt;div class=&quot;color-shape small square blue&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape wide square blue&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape tall square blue&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape big square blue&quot;&gt;&lt;/div&gt;
      
    
  
    
      
        &lt;div class=&quot;color-shape small round yellow&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape wide round yellow&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape tall round yellow&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape big round yellow&quot;&gt;&lt;/div&gt;
      
    
      
        &lt;div class=&quot;color-shape small square yellow&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape wide square yellow&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape tall square yellow&quot;&gt;&lt;/div&gt;
      
        &lt;div class=&quot;color-shape big square yellow&quot;&gt;&lt;/div&gt;
      
    
  
  
&lt;/div&gt; &lt;!-- #container --&gt;

&lt;script src=&quot;../js/vendor/jquery.min.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;../js/jquery.isotope.min.js&quot;&gt;&lt;/script&gt;
&lt;script&gt;
  $(function(){
    
    var $container = $(&#39;#container&#39;),
        filters = {};

    $container.isotope({
      itemSelector : &#39;.color-shape&#39;,
      masonry: {
        columnWidth: 80
      }
    });

    // filter buttons
    $(&#39;.filter a&#39;).click(function(){
      var $this = $(this);
      // don&#39;t proceed if already selected
      if ( $this.hasClass(&#39;selected&#39;) ) {
        return;
      }
      
      var $optionSet = $this.parents(&#39;.option-set&#39;);
      // change selected class
      $optionSet.find(&#39;.selected&#39;).removeClass(&#39;selected&#39;);
      $this.addClass(&#39;selected&#39;);
      
      // store filter value in object
      // i.e. filters.color = &#39;red&#39;
      var group = $optionSet.attr(&#39;data-filter-group&#39;);
      filters[ group ] = $this.attr(&#39;data-filter-value&#39;);
      // convert object into array
      var isoFilters = [];
      for ( var prop in filters ) {
        isoFilters.push( filters[ prop ] )
      }
      var selector = isoFilters.join(&#39;&#39;);
      $container.isotope({ filter: selector });

      return false;
    });

  });
&lt;/script&gt;</description>
                <link>/demos/combination-filters.html</link>
                <guid>/demos/combination-filters</guid>
                <pubDate>2011-03-29T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>no items</title>
                <description>  &lt;section id=&quot;copy&quot;&gt;
    &lt;p&gt;What happens when there are no items for Isotope? If no items match `itemSelector`, container collapses.  Plugin still &lt;code&gt;return this&lt;/code&gt;.&lt;/p&gt;
  &lt;/section&gt;

  &lt;div id=&quot;container&quot;&gt;
    
  &lt;/div&gt; &lt;!-- #container --&gt;

  &lt;script src=&quot;../js/vendor/jquery.min.js&quot;&gt;&lt;/script&gt;
  &lt;script src=&quot;../js/jquery.isotope.min.js&quot;&gt;&lt;/script&gt;
  &lt;script&gt;
    $(function(){
    
      var $container = $(&#39;#container&#39;);
    
      $container.isotope({
        itemSelector: &#39;.foo&#39;
      }).css(&#39;border&#39;, &#39;10px solid&#39;);
    
    });
  &lt;/script&gt;</description>
                <link>/tests/no-items.html</link>
                <guid>/tests/no-items</guid>
                <pubDate>2011-03-27T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>flash</title>
                <description>  &lt;style&gt;
    .item {
      width: 500px;
      margin: 5px;
      float: left;
      background: #333;
    }
  &lt;/style&gt;

  &lt;section id=&quot;copy&quot;&gt;
    &lt;p&gt;Flash content like YouTube or Vimeo videos&lt;/p&gt;
  &lt;/section&gt;

  &lt;section id=&quot;options&quot; class=&quot;clearfix&quot;&gt;
    
    &lt;h3&gt;Filters&lt;/h3&gt;

    &lt;ul id=&quot;filters&quot; class=&quot;option-set clearfix&quot; data-option-key=&quot;filter&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;#filter-show-all&quot; data-option-value=&quot;*&quot; class=&quot;selected&quot;&gt;show all&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#filter-link&quot; data-option-value=&quot;.link&quot;&gt;link&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#filter-audio&quot; data-option-value=&quot;.audio&quot;&gt;audio&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#filter-video&quot; data-option-value=&quot;.video&quot;&gt;video&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#filter-photo&quot; data-option-value=&quot;.photo&quot;&gt;photo&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;

  &lt;/section&gt; &lt;!-- #options --&gt;

  &lt;div id=&quot;container&quot; class=&quot;clearfix&quot;&gt;
    
    &lt;div class=&quot;item video&quot;&gt;
      
      &lt;object width=&quot;500&quot; height=&quot;305&quot;&gt;&lt;param name=&quot;movie&quot; value=&quot;http://www.youtube.com/v/GaoLU6zKaws&amp;amp;rel=0&amp;amp;egm=0&amp;amp;showinfo=0&amp;amp;fs=1&quot;&gt;&lt;param name=&quot;wmode&quot; value=&quot;transparent&quot;&gt;&lt;param name=&quot;allowFullScreen&quot; value=&quot;true&quot;&gt;&lt;embed src=&quot;http://www.youtube.com/v/GaoLU6zKaws&amp;amp;rel=0&amp;amp;egm=0&amp;amp;showinfo=0&amp;amp;fs=1&quot; type=&quot;application/x-shockwave-flash&quot; width=&quot;500&quot; height=&quot;305&quot; allowfullscreen=&quot;true&quot; wmode=&quot;transparent&quot;&gt;&lt;/object&gt;
        
      &lt;p&gt;Sexy Sax Man (Careless Whisper Saxophone Prank!!) directors cut (by &lt;a href=&quot;http://www.youtube.com/watch?v=GaoLU6zKaws&amp;amp;feature=youtu.be&quot;&gt;mikedahlquist&lt;/a&gt;)&lt;/p&gt;
      
    &lt;/div&gt;
    
    &lt;div class=&quot;item photo&quot;&gt;
      &lt;figure class=&quot;content&quot;&gt;
        &lt;a href=&quot;http://danimaree.tumblr.com&quot;&gt;&lt;img src=&quot;http://29.media.tumblr.com/tumblr_lhbbz91Wg51qa5ylbo1_500.gif&quot; alt=&quot;WIN&quot;&gt;&lt;/a&gt;
        &lt;figcaption&gt;&lt;p&gt;WIN&lt;/p&gt;&lt;/figcaption&gt;
      &lt;/figure&gt;
      
    &lt;/div&gt;
    
    &lt;div class=&quot;item audio&quot;&gt;
      &lt;figure class=&quot;content audio&quot;&gt;

                    &lt;script type=&quot;text/javascript&quot; language=&quot;javascript&quot; src=&quot;http://assets.tumblr.com/javascript/tumblelog.js?505&quot;&gt;&lt;/script&gt;&lt;span id=&quot;audio_player_3674118149&quot;&gt;[&lt;a href=&quot;http://www.adobe.com/shockwave/download/download.cgi?P1_Prod_Version=ShockwaveFlash&quot; target=&quot;_blank&quot;&gt;Flash 9&lt;/a&gt; is required to listen to audio.]&lt;/span&gt;&lt;script type=&quot;text/javascript&quot;&gt;replaceIfFlash(9,&quot;audio_player_3674118149&quot;,&#39;\x3cdiv class=\x22audio_player\x22\x3e&lt;embed type=&quot;application/x-shockwave-flash&quot; src=&quot;http://assets.tumblr.com/swf/audio_player_black.swf?audio_file=http://www.tumblr.com/audio_file/3674118149/tumblr_lhmdlpR0Kl1qashpb&amp;color=FFFFFF&quot; height=&quot;27&quot; width=&quot;207&quot; quality=&quot;best&quot;&gt;&lt;/embed&gt;\x3c/div\x3e&#39;)&lt;/script&gt;
                    Smashing Pumpkins
                    &lt;em&gt;Set The Ray To Jerry&lt;/em&gt;
                    Judas 0: B-Sides and Rarities
                    &lt;figcaption&gt;&lt;blockquote&gt; 
        &lt;p&gt;I’ll believe until the day I die that the Smashing Pumpkins were more unique and more complex than most people will ever give them credit for. But I also understand that casual listeners aren’t going to go out of their way to hear the hundreds of lesser-known Pumpkins tracks that are often just as good as anything that’s made its way onto an album. So I’m telling you to start with “Set the Ray to Jerry.”&lt;/p&gt; 
      &lt;/blockquote&gt; 

      &lt;p&gt;&amp;#8212; Ross McGowan &lt;a href=&quot;http://www.stylusmagazine.com/articles/seconds/the-smashing-pumpkins-set-the-ray-to-jerry.htm&quot;&gt;The Smashing Pumpkins: Set the Ray to Jerry&lt;/a&gt;&lt;/p&gt;&lt;/figcaption&gt;
                  &lt;/figure&gt;

      
    &lt;/div&gt;
    
    &lt;div class=&quot;item photo&quot;&gt;
      &lt;figure class=&quot;content photo&quot;&gt;
        &lt;a href=&quot;http://zenibyfajnie.deviantart.com/art/and-there-s-a-light-on-171400460&quot;&gt;&lt;img src=&quot;http://27.media.tumblr.com/tumblr_lh8j1hUuvO1qashpbo1_500.jpg&quot; alt=&quot;and there&amp;amp;#8217;s a light on by *zenibyfajnie on deviantART&quot;&gt;&lt;/a&gt;
        &lt;figcaption&gt;&lt;p&gt;&lt;a href=&quot;http://zenibyfajnie.deviantart.com/art/and-there-s-a-light-on-171400460&quot;&gt;and there&amp;#8217;s a light on by *zenibyfajnie on deviantART&lt;/a&gt;&lt;/p&gt;&lt;/figcaption&gt;
      &lt;/figure&gt;
      
    &lt;/div&gt;
    
    &lt;div class=&quot;item link&quot;&gt;
      &lt;h2&gt;&lt;a href=&quot;http://www.kaplusa.com/blog/2011/01/twitter-icon-evolution/&quot; &gt;KA+A : Blog : Iconoclast &amp;ndash; A Twitter Icon&amp;rsquo;s Journey From Discreet to Disaster&lt;/a&gt;&lt;/h2&gt;
      &lt;p&gt;Via &lt;a href=&quot;https://twitter.com/kristianindy/status/31100858091442178&quot;&gt;kristianindy&lt;/a&gt;&lt;/p&gt;
    &lt;/div&gt;
    
    &lt;div class=&quot;item video&quot;&gt;
                  &lt;figure class=&quot;content video&quot;&gt;
                    &lt;object width=&quot;500&quot; height=&quot;305&quot;&gt;&lt;param name=&quot;movie&quot; value=&quot;http://www.youtube.com/v/7g0We1DY7WI&amp;amp;rel=0&amp;amp;egm=0&amp;amp;showinfo=0&amp;amp;fs=1&quot;&gt;&lt;/param&gt;&lt;param name=&quot;wmode&quot; value=&quot;transparent&quot;&gt;&lt;/param&gt;&lt;param name=&quot;allowFullScreen&quot; value=&quot;true&quot;&gt;&lt;/param&gt;&lt;embed src=&quot;http://www.youtube.com/v/7g0We1DY7WI&amp;amp;rel=0&amp;amp;egm=0&amp;amp;showinfo=0&amp;amp;fs=1&quot; type=&quot;application/x-shockwave-flash&quot; width=&quot;500&quot; height=&quot;305&quot; allowFullScreen=&quot;true&quot; wmode=&quot;transparent&quot;&gt;&lt;/embed&gt;&lt;/object&gt;
                    &lt;figcaption&gt;&lt;p&gt;&lt;a href=&quot;http://www.youtube.com/watch?v=7g0We1DY7WI&quot;&gt;Aloha - Ruins [Live @ DC 9 - Washington, DC - 4/15/10]&lt;/a&gt; (via &lt;a href=&quot;http://youtube.com/user/alohaband1&quot;&gt;alohaband1&lt;/a&gt;)&lt;/p&gt; 

      &lt;p&gt;I was at this show. This is my favorite song from 2010. I love Aloha so much.&lt;/p&gt;&lt;/figcaption&gt;
                  &lt;/figure&gt;
      
    &lt;/div&gt;
    
    &lt;div class=&quot;item video&quot;&gt;
      &lt;iframe title=&quot;YouTube video player&quot; width=&quot;500&quot; height=&quot;311&quot; src=&quot;http://www.youtube.com/embed/7g0We1DY7WI&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;
    &lt;/div&gt;
    
    
  &lt;/div&gt; &lt;!-- #container --&gt;

  &lt;script src=&quot;../js/vendor/jquery.min.js&quot;&gt;&lt;/script&gt;
  &lt;script src=&quot;../js/jquery.isotope.min.js&quot;&gt;&lt;/script&gt;
  &lt;script&gt; 
  
    $(function(){
      
      var $container = $(&#39;#container&#39;);
      
      $container.imagesLoaded(function(){
        $container.isotope({
          transformsEnabled: false,
          visibleStyle: { opacity: 1 },
          hiddenStyle: { opacity: 0 }
        });
      });
      
      
      var $optionSets = $(&#39;#options .option-set&#39;),
          $optionLinks = $optionSets.find(&#39;a&#39;);

      $optionLinks.click(function(){
        var $this = $(this);
        // don&#39;t proceed if already selected
        if ( $this.hasClass(&#39;selected&#39;) ) {
          return false;
        }
        var $optionSet = $this.parents(&#39;.option-set&#39;);
        $optionSet.find(&#39;.selected&#39;).removeClass(&#39;selected&#39;);
        $this.addClass(&#39;selected&#39;);
  
        // make option object dynamically, i.e. { filter: &#39;.my-filter-class&#39; }
        var options = {},
            key = $optionSet.attr(&#39;data-option-key&#39;),
            value = $this.attr(&#39;data-option-value&#39;);
        // parse &#39;false&#39; as false boolean
        value = value === &#39;false&#39; ? false : value;
        options[ key ] = value;
        if ( key === &#39;layoutMode&#39; &amp;&amp; typeof changeLayoutMode === &#39;function&#39; ) {
          // changes in layout modes need extra logic
          changeLayoutMode( $this, options )
        } else {
          // otherwise, apply new options
          $container.isotope( options );
        }
        
        return false;
      });

      
    });
  &lt;/script&gt;</description>
                <link>/tests/flash.html</link>
                <guid>/tests/flash</guid>
                <pubDate>2011-03-27T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>destroy</title>
                <description>  &lt;style&gt;
    #container {
      width: 80%;
      height: 80%;
    }
  &lt;/style&gt;

  &lt;section id=&quot;copy&quot;&gt;
    &lt;p&gt;Click &lt;em&gt;init&lt;/em&gt; button the &lt;em&gt;destroy&lt;/em&gt;. Original CSS, pre-init, should be re-applied, all items back to visibility.&lt;/p&gt;
  &lt;/section&gt;

  &lt;section id=&quot;options&quot;&gt;
    &lt;button id=&quot;init&quot;&gt;Init Isotope instance&lt;/button&gt;
    &lt;button id=&quot;destroy&quot;&gt;Destroy Isotope instance&lt;/button&gt;
  &lt;/section&gt;

  &lt;div id=&quot;container&quot; style=&quot;height: 600px&quot;&gt;
    
  &lt;/div&gt; &lt;!-- #container --&gt;

  &lt;script src=&quot;../js/vendor/jquery.min.js&quot;&gt;&lt;/script&gt;
  &lt;script src=&quot;../js/jquery.isotope.min.js&quot;&gt;&lt;/script&gt;
  &lt;script&gt;
    $(function(){
    
      var $container = $(&#39;#container&#39;);
    
      $(&#39;#init&#39;).click(function(){
        $container.isotope({
          itemSelector: &#39;.element&#39;,
          filter: &#39;.metal&#39;
        });
      });
      
      $(&#39;#destroy&#39;).click(function(){
        $container.isotope(&#39;destroy&#39;);
      });
    
    });
  &lt;/script&gt;</description>
                <link>/tests/destroy.html</link>
                <guid>/tests/destroy</guid>
                <pubDate>2011-03-27T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Bilder</title>
                <description>  &lt;section id=&quot;copy&quot;&gt;
    &lt;p&gt;Isotope is triggered after all images are loaded with the &lt;a href=&quot;../docs/help.html#imagesloaded_plugin&quot;&gt;&lt;code&gt;imagesLoaded&lt;/code&gt; plugin&lt;/a&gt;. &lt;/p&gt;
  &lt;/section&gt;
  
  &lt;div id=&quot;myModal&quot; class=&quot;modal fade&quot; tabindex=&quot;-1&quot; role=&quot;dialog&quot; aria-labelledby=&quot;myModalLabel&quot; aria-hidden=&quot;true&quot; style=&quot;display: none;&quot;&gt;
        &lt;div class=&quot;modal-dialog&quot;&gt;
          &lt;div class=&quot;modal-content&quot;&gt;
  
            &lt;div class=&quot;modal-header&quot;&gt;
              &lt;button type=&quot;button&quot; class=&quot;close&quot; data-dismiss=&quot;modal&quot; aria-hidden=&quot;true&quot;&gt;×&lt;/button&gt;
              &lt;h4 class=&quot;modal-title&quot; id=&quot;myModalLabel&quot;&gt;Modal Heading&lt;/h4&gt;
            &lt;/div&gt;
            &lt;div class=&quot;modal-body&quot;&gt;
              &lt;h4&gt;Text in a modal&lt;/h4&gt;
              &lt;p&gt;Duis mollis, est non commodo luctus, nisi erat porttitor ligula.&lt;/p&gt;
  
              &lt;h4&gt;Popover in a modal&lt;/h4&gt;
              &lt;p&gt;This &lt;a href=&quot;#&quot; role=&quot;button&quot; class=&quot;btn btn-default popover-test&quot; title=&quot;&quot; data-content=&quot;And here&#39;s some amazing content. It&#39;s very engaging. right?&quot; data-original-title=&quot;A Title&quot;&gt;button&lt;/a&gt; should trigger a popover on click.&lt;/p&gt;
  
              &lt;h4&gt;Tooltips in a modal&lt;/h4&gt;
              &lt;p&gt;&lt;a href=&quot;#&quot; class=&quot;tooltip-test&quot; title=&quot;&quot; data-original-title=&quot;Tooltip&quot;&gt;This link&lt;/a&gt; and &lt;a href=&quot;#&quot; class=&quot;tooltip-test&quot; title=&quot;&quot; data-original-title=&quot;Tooltip&quot;&gt;that link&lt;/a&gt; should have tooltips on hover.&lt;/p&gt;
  
              &lt;hr&gt;
  
              &lt;h4&gt;Overflowing text to show scroll behavior&lt;/h4&gt;
              &lt;p&gt;Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.&lt;/p&gt;
              &lt;p&gt;Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor.&lt;/p&gt;
              &lt;p&gt;Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla.&lt;/p&gt;
              &lt;p&gt;Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.&lt;/p&gt;
              &lt;p&gt;Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor.&lt;/p&gt;
              &lt;p&gt;Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla.&lt;/p&gt;
              &lt;p&gt;Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.&lt;/p&gt;
              &lt;p&gt;Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor.&lt;/p&gt;
              &lt;p&gt;Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla.&lt;/p&gt;
            &lt;/div&gt;
            &lt;div class=&quot;modal-footer&quot;&gt;
              &lt;button type=&quot;button&quot; class=&quot;btn btn-default&quot; data-dismiss=&quot;modal&quot;&gt;Close&lt;/button&gt;
              &lt;button type=&quot;button&quot; class=&quot;btn btn-primary&quot;&gt;Save changes&lt;/button&gt;
            &lt;/div&gt;
  
          &lt;/div&gt;&lt;!-- /.modal-content --&gt;
        &lt;/div&gt;&lt;!-- /.modal-dialog --&gt;
      &lt;/div&gt;

  &lt;div id=&quot;container&quot; class=&quot;photos clearfix&quot;&gt;
    
      &lt;div class=&quot;photo&quot;&gt;
        &lt;a href=&quot;#myModal&quot; class=&quot;img-responsive&quot; data-toggle=&quot;modal&quot; title=&quot;Lecker Tajine&quot;&gt;&lt;img src=&quot;../img/photosisotopedemo/bild01.jpg&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;
      &lt;/div&gt;
    
      &lt;div class=&quot;photo&quot;&gt;
        &lt;a href=&quot;&quot; title=&quot;Lecker Tajine&quot;&gt;&lt;img src=&quot;../img/photosisotopedemo/bild02.jpg&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;
      &lt;/div&gt;
    
      &lt;div class=&quot;photo&quot;&gt;
        &lt;a href=&quot;&quot; title=&quot;Lecker Tajine&quot;&gt;&lt;img src=&quot;../img/photosisotopedemo/bild03.jpg&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;
      &lt;/div&gt;
    
      &lt;div class=&quot;photo&quot;&gt;
        &lt;a href=&quot;&quot; title=&quot;Lecker Tajine&quot;&gt;&lt;img src=&quot;../img/photosisotopedemo/bild04.jpg&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;
      &lt;/div&gt;
    
      &lt;div class=&quot;photo&quot;&gt;
        &lt;a href=&quot;&quot; title=&quot;Lecker Tajine&quot;&gt;&lt;img src=&quot;../img/photosisotopedemo/bild05.jpg&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;
      &lt;/div&gt;
    
      &lt;div class=&quot;photo&quot;&gt;
        &lt;a href=&quot;&quot; title=&quot;Lecker Tajine&quot;&gt;&lt;img src=&quot;../img/photosisotopedemo/bild06.jpg&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;
      &lt;/div&gt;
    
      &lt;div class=&quot;photo&quot;&gt;
        &lt;a href=&quot;&quot; title=&quot;Lecker Tajine&quot;&gt;&lt;img src=&quot;../img/photosisotopedemo/bild07.jpg&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;
      &lt;/div&gt;
    
      &lt;div class=&quot;photo&quot;&gt;
        &lt;a href=&quot;&quot; title=&quot;Lecker Tajine&quot;&gt;&lt;img src=&quot;../img/photosisotopedemo/bild08.jpg&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;
      &lt;/div&gt;
    
      &lt;div class=&quot;photo&quot;&gt;
        &lt;a href=&quot;&quot; title=&quot;Lecker Tajine&quot;&gt;&lt;img src=&quot;../img/photosisotopedemo/bild09.jpg&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;
      &lt;/div&gt;
    
      &lt;div class=&quot;photo&quot;&gt;
        &lt;a href=&quot;&quot; title=&quot;Lecker Tajine&quot;&gt;&lt;img src=&quot;../img/photosisotopedemo/bild10.jpg&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;
      &lt;/div&gt;
    
      &lt;div class=&quot;photo&quot;&gt;
        &lt;a href=&quot;&quot; title=&quot;Lecker Tajine&quot;&gt;&lt;img src=&quot;../img/photosisotopedemo/bild11.jpg&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;
      &lt;/div&gt;
    
      &lt;div class=&quot;photo&quot;&gt;
        &lt;a href=&quot;&quot; title=&quot;Lecker Tajine&quot;&gt;&lt;img src=&quot;../img/photosisotopedemo/bild12.jpg&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;
      &lt;/div&gt;
    
      &lt;div class=&quot;photo&quot;&gt;
        &lt;a href=&quot;&quot; title=&quot;Lecker Tajine&quot;&gt;&lt;img src=&quot;../img/photosisotopedemo/bild13.jpg&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;
      &lt;/div&gt;
    
      &lt;div class=&quot;photo&quot;&gt;
        &lt;a href=&quot;&quot; title=&quot;Lecker Tajine&quot;&gt;&lt;img src=&quot;../img/photosisotopedemo/bild14.jpg&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;
      &lt;/div&gt;
    
      &lt;div class=&quot;photo&quot;&gt;
        &lt;a href=&quot;&quot; title=&quot;Lecker Tajine&quot;&gt;&lt;img src=&quot;../img/photosisotopedemo/bild15.jpg&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;
      &lt;/div&gt;
    
      &lt;div class=&quot;photo&quot;&gt;
        &lt;a href=&quot;&quot; title=&quot;Lecker Tajine&quot;&gt;&lt;img src=&quot;../img/photosisotopedemo/bild16.jpg&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;
      &lt;/div&gt;
    
      &lt;div class=&quot;photo&quot;&gt;
        &lt;a href=&quot;&quot; title=&quot;Lecker Tajine&quot;&gt;&lt;img src=&quot;../img/photosisotopedemo/bild17.jpg&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;
      &lt;/div&gt;
    
      &lt;div class=&quot;photo&quot;&gt;
        &lt;a href=&quot;&quot; title=&quot;Lecker Tajine&quot;&gt;&lt;img src=&quot;../img/photosisotopedemo/bild18.jpg&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;
      &lt;/div&gt;
    
      &lt;div class=&quot;photo&quot;&gt;
        &lt;a href=&quot;&quot; title=&quot;Lecker Tajine&quot;&gt;&lt;img src=&quot;../img/photosisotopedemo/bild19.jpg&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;
      &lt;/div&gt;
    
      &lt;div class=&quot;photo&quot;&gt;
        &lt;a href=&quot;&quot; title=&quot;Lecker Tajine&quot;&gt;&lt;img src=&quot;../img/photosisotopedemo/bild20.jpg&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;
      &lt;/div&gt;
    
      &lt;div class=&quot;photo&quot;&gt;
        &lt;a href=&quot;&quot; title=&quot;Lecker Tajine&quot;&gt;&lt;img src=&quot;../img/photosisotopedemo/bild21.jpg&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;
      &lt;/div&gt;
    
      &lt;div class=&quot;photo&quot;&gt;
        &lt;a href=&quot;&quot; title=&quot;Lecker Tajine&quot;&gt;&lt;img src=&quot;../img/photosisotopedemo/bild22.jpg&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;
      &lt;/div&gt;
    
      &lt;div class=&quot;photo&quot;&gt;
        &lt;a href=&quot;&quot; title=&quot;Lecker Tajine&quot;&gt;&lt;img src=&quot;../img/photosisotopedemo/bild23.jpg&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;
      &lt;/div&gt;
    
      &lt;div class=&quot;photo&quot;&gt;
        &lt;a href=&quot;&quot; title=&quot;Lecker Tajine&quot;&gt;&lt;img src=&quot;../img/photosisotopedemo/bild24.jpg&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;
      &lt;/div&gt;
    
      &lt;div class=&quot;photo&quot;&gt;
        &lt;a href=&quot;&quot; title=&quot;Lecker Tajine&quot;&gt;&lt;img src=&quot;../img/photosisotopedemo/bild25.jpg&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;
      &lt;/div&gt;
    
      &lt;div class=&quot;photo&quot;&gt;
        &lt;a href=&quot;&quot; title=&quot;Lecker Tajine&quot;&gt;&lt;img src=&quot;../img/photosisotopedemo/bild26.jpg&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;
      &lt;/div&gt;
    
  &lt;/div&gt; &lt;!-- #container --&gt;
  
  &lt;div class=&quot;modal fade&quot; id=&quot;bootstrap&quot; tabindex=&quot;-1&quot; role=&quot;dialog&quot; aria-labelledby=&quot;myModalLabel&quot; aria-hidden=&quot;true&quot;&gt;
      &lt;div class=&quot;modal-dialog&quot;&gt;
        &lt;div class=&quot;modal-content&quot;&gt;
          &lt;div class=&quot;modal-header&quot;&gt;
            &lt;button type=&quot;button&quot; class=&quot;close&quot; data-dismiss=&quot;modal&quot; aria-hidden=&quot;true&quot;&gt;&amp;times;&lt;/button&gt;
            &lt;h4 class=&quot;modal-title&quot;&gt;Modal title&lt;/h4&gt;
          &lt;/div&gt;
          &lt;div class=&quot;modal-body&quot;&gt;
            ...
          &lt;/div&gt;
          &lt;div class=&quot;modal-footer&quot;&gt;
            &lt;button type=&quot;button&quot; class=&quot;btn btn-default&quot; data-dismiss=&quot;modal&quot;&gt;Close&lt;/button&gt;
            &lt;button type=&quot;button&quot; class=&quot;btn btn-primary&quot;&gt;Save changes&lt;/button&gt;
          &lt;/div&gt;
        &lt;/div&gt;&lt;!-- /.modal-content --&gt;
      &lt;/div&gt;&lt;!-- /.modal-dialog --&gt;
    &lt;/div&gt;&lt;!-- /.modal --&gt;
  
  
  &lt;script src=&quot;../js/vendor/jquery.min.js&quot;&gt;&lt;/script&gt;
  &lt;script src=&quot;../js/jquery.isotope.min.js&quot;&gt;&lt;/script&gt;
  &lt;script&gt;
    $(function(){

      var $container = $(&#39;#container&#39;);
    
      $container.imagesLoaded( function(){
        $container.isotope({
          itemSelector : &#39;.photo&#39;
        });
      });
    
    
    });
  &lt;/script&gt;</description>
                <link>/demos/images.html</link>
                <guid>/demos/images</guid>
                <pubDate>2011-01-11T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Infinite Scroll</title>
                <description>  &lt;section id=&quot;copy&quot;&gt;
    &lt;p&gt;Isotope is interoperable with &lt;a href=&quot;http://www.infinite-scroll.com/&quot;&gt;Infinite Scroll&lt;/a&gt; by Paul Irish. Use the &lt;a href=&quot;../docs/methods.html#appended&quot;&gt;&lt;code&gt;appended&lt;/code&gt;&lt;/a&gt; method to add new items to the Isotope layout. CSS transitions have been disabled on the container element to avoid triggering AJAX call prematurely.&lt;/p&gt;
  &lt;/section&gt;

  &lt;div id=&quot;container&quot; class=&quot;variable-sizes clearfix infinite-scrolling&quot;&gt;
    
  &lt;/div&gt; &lt;!-- #container --&gt;
  
  &lt;nav id=&quot;page_nav&quot;&gt;
    &lt;a href=&quot;../pages/2.html&quot;&gt;&lt;/a&gt;
  &lt;/nav&gt;

  &lt;script src=&quot;../js/vendor/jquery.min.js&quot;&gt;&lt;/script&gt;
  &lt;script src=&quot;../js/jquery.isotope.min.js&quot;&gt;&lt;/script&gt;
  &lt;script src=&quot;../js/jquery.infinitescroll.min.js&quot;&gt;&lt;/script&gt;
  &lt;script&gt;
    $(function(){

      var $container = $(&#39;#container&#39;);
    
      $container.isotope({
        itemSelector : &#39;.element&#39;
      });
      
      $container.infinitescroll({
        navSelector  : &#39;#page_nav&#39;,    // selector for the paged navigation 
        nextSelector : &#39;#page_nav a&#39;,  // selector for the NEXT link (to page 2)
        itemSelector : &#39;.element&#39;,     // selector for all items you&#39;ll retrieve
        loading: {
            finishedMsg: &#39;No more pages to load.&#39;,
            img: &#39;http://i.imgur.com/qkKy8.gif&#39;
          }
        },
        // call Isotope as a callback
        function( newElements ) {
          $container.isotope( &#39;appended&#39;, $( newElements ) ); 
        }
      );
      
    
    });
  &lt;/script&gt;</description>
                <link>/demos/infinite-scroll.html</link>
                <guid>/demos/infinite-scroll</guid>
                <pubDate>2011-01-02T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Adding items</title>
                <description>  &lt;section id=&quot;copy&quot;&gt;
    &lt;p&gt;The &lt;code&gt;insert&lt;/code&gt; method will append, add items to the widget, filter, sort, and then layout all items&lt;/p&gt;
    &lt;p&gt;The &lt;code&gt;appended&lt;/code&gt; method adds items to the widget, and then lays out only the new items.&lt;/p&gt;
    &lt;p&gt;The &lt;code&gt;reloadItems&lt;/code&gt; method re-collects all items in their current order in the DOM, which can be useful for prepending items.&lt;/p&gt;
    &lt;p&gt;See docs on &lt;a href=&quot;../docs/adding-items.html&quot;&gt;adding items&lt;/a&gt;.&lt;/p&gt;
  &lt;/section&gt;

  &lt;section id=&quot;options&quot;&gt;
    &lt;ul class=&quot;clearfix&quot;&gt;
      &lt;li id=&quot;insert&quot;&gt;&lt;a href=&quot;#insert&quot;&gt;Insert new elements&lt;/a&gt;&lt;/li&gt;
      &lt;li id=&quot;append&quot;&gt;&lt;a href=&#39;#append&#39;&gt;Append new elements&lt;/a&gt;&lt;/li&gt;
      &lt;li id=&quot;prepend&quot;&gt;&lt;a href=&#39;#prepend&#39;&gt;Prepend&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/section&gt;

  &lt;div id=&quot;container&quot; class=&quot;clearfix&quot;&gt;
    
  &lt;/div&gt; &lt;!-- #container --&gt;

  &lt;script src=&quot;../js/vendor/jquery.min.js&quot;&gt;&lt;/script&gt;
  &lt;script src=&quot;../js/jquery.isotope.min.js&quot;&gt;&lt;/script&gt;
  &lt;script src=&quot;../js/fake-element.js&quot;&gt;&lt;/script&gt;
  &lt;script&gt;
    $(function(){
      
      var $container = $(&#39;#container&#39;);

      
      $(&#39;#insert a&#39;).click(function(){
        var $newEls = $( fakeElement.getGroup() );
        $container.isotope( &#39;insert&#39;, $newEls );

        return false;
      });

      $(&#39;#append a&#39;).click(function(){
        var $newEls = $( fakeElement.getGroup() );
        $container.append( $newEls ).isotope( &#39;appended&#39;, $newEls );

        return false;
      });


      $(&#39;#prepend a&#39;).click(function(){
        var $newEls = $( fakeElement.getGroup() );
        $container
          .prepend( $newEls ).isotope(&#39;reloadItems&#39;).isotope({ sortBy: &#39;original-order&#39; })
          // set sort back to symbol for inserting
          .isotope(&#39;option&#39;, { sortBy: &#39;symbol&#39; });

        return false;
      });

      $container.isotope({
        itemSelector : &#39;.element&#39;,
        filter: &#39;*&#39;,
        getSortData : {
          symbol : function( $elem ) {
            return $elem.attr(&#39;data-symbol&#39;);
          }
        },
        sortBy : &#39;symbol&#39;
      });
    
    });
  &lt;/script&gt;</description>
                <link>/demos/adding-items.html</link>
                <guid>/demos/adding-items</guid>
                <pubDate>2011-01-02T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Infinite Scroll Page 6</title>
                <description>&lt;div id=&quot;container&quot; class=&quot;variable-sizes&quot;&gt;
  
  
&lt;/div&gt;

&lt;script src=&quot;../js/vendor/jquery.min.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;../js/jquery.isotope.min.js&quot;&gt;&lt;/script&gt;
&lt;script&gt;
  $(function(){
    
    var $container = $(&#39;#container&#39;);
    
    $container.isotope({
      itemSelector : &#39;.element&#39;,
      layoutMode : &#39;fitRows&#39;
    });
    
  });
&lt;/script&gt;</description>
                <link>/pages/6.html</link>
                <guid>/pages/6</guid>
                <pubDate>2011-01-01T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Infinite Scroll Page 5</title>
                <description>&lt;div id=&quot;container&quot; class=&quot;variable-sizes&quot;&gt;
  
  
&lt;/div&gt;

&lt;script src=&quot;../js/vendor/jquery.min.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;../js/jquery.isotope.min.js&quot;&gt;&lt;/script&gt;
&lt;script&gt;
  $(function(){
    
    var $container = $(&#39;#container&#39;);
    
    $container.isotope({
      itemSelector : &#39;.element&#39;,
      layoutMode : &#39;fitRows&#39;
    });
    
  });
&lt;/script&gt;</description>
                <link>/pages/5.html</link>
                <guid>/pages/5</guid>
                <pubDate>2011-01-01T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Infinite Scroll Page 4</title>
                <description>&lt;div id=&quot;container&quot; class=&quot;variable-sizes&quot;&gt;
  
  
&lt;/div&gt;

&lt;script src=&quot;../js/vendor/jquery.min.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;../js/jquery.isotope.min.js&quot;&gt;&lt;/script&gt;
&lt;script&gt;
  $(function(){
    
    var $container = $(&#39;#container&#39;);
    
    $container.isotope({
      itemSelector : &#39;.element&#39;,
      layoutMode : &#39;fitRows&#39;
    });
    
  });
&lt;/script&gt;</description>
                <link>/pages/4.html</link>
                <guid>/pages/4</guid>
                <pubDate>2011-01-01T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Infinite Scroll Page 3</title>
                <description>&lt;div id=&quot;container&quot; class=&quot;variable-sizes&quot;&gt;
  
  
&lt;/div&gt;

&lt;script src=&quot;../js/vendor/jquery.min.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;../js/jquery.isotope.min.js&quot;&gt;&lt;/script&gt;
&lt;script&gt;
  $(function(){
    
    var $container = $(&#39;#container&#39;);
    
    $container.isotope({
      itemSelector : &#39;.element&#39;,
      layoutMode : &#39;fitRows&#39;
    });
    
  });
&lt;/script&gt;</description>
                <link>/pages/3.html</link>
                <guid>/pages/3</guid>
                <pubDate>2011-01-01T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Infinite Scroll Page 2</title>
                <description>&lt;div id=&quot;container&quot; class=&quot;variable-sizes&quot;&gt;
  
  
&lt;/div&gt;

&lt;script src=&quot;../js/vendor/jquery.min.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;../js/jquery.isotope.min.js&quot;&gt;&lt;/script&gt;
&lt;script&gt;
  $(function(){
    
    var $container = $(&#39;#container&#39;);
    
    $container.isotope({
      itemSelector : &#39;.element&#39;,
      layoutMode : &#39;fitRows&#39;
    });
    
  });
&lt;/script&gt;</description>
                <link>/pages/2.html</link>
                <guid>/pages/2</guid>
                <pubDate>2011-01-01T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>reLayout</title>
                <description>  &lt;section id=&quot;copy&quot;&gt;
    &lt;p&gt;Use the &lt;a href=&quot;../docs/methods.html#relayout&quot;&gt;&lt;code&gt;reLayout&lt;/code&gt; method&lt;/a&gt; to easily arrange item elements after a change.&lt;/p&gt;
    &lt;p&gt;Click on any item element to change its size.&lt;/p&gt;
  &lt;/section&gt;
  
  &lt;section id=&quot;options&quot;&gt;
    &lt;ul class=&quot;clearfix&quot;&gt;
      &lt;li id=&quot;toggle-sizes&quot;&gt;&lt;a href=&quot;#toggle-sizes&quot;&gt;Toggle variable sizes&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/section&gt;
  
  &lt;div id=&quot;container&quot; class=&quot;clickable clearfix&quot;&gt;
    
  &lt;/div&gt; &lt;!-- #container --&gt;
  
  &lt;script src=&quot;../js/vendor/jquery.min.js&quot;&gt;&lt;/script&gt;
  &lt;script src=&quot;../js/jquery.isotope.min.js&quot;&gt;&lt;/script&gt;
  &lt;script&gt;
    $(function(){
      
      var $container = $(&#39;#container&#39;);
      
      
      // add randomish size classes
      $container.find(&#39;.element&#39;).each(function(){
        var $this = $(this),
            number = parseInt( $this.find(&#39;.number&#39;).text(), 10 );
        if ( number % 7 % 2 === 1 ) {
          $this.addClass(&#39;width2&#39;);
        }
        if ( number % 3 === 0 ) {
          $this.addClass(&#39;height2&#39;);
        }
      });
      
      $container.isotope({
        itemSelector: &#39;.element&#39;,
        masonry : {
          columnWidth : 120
        }
      });
      
      
      // change size of clicked element
      $container.delegate( &#39;.element&#39;, &#39;click&#39;, function(){
        $(this).toggleClass(&#39;large&#39;);
        $container.isotope(&#39;reLayout&#39;);
      });

      // toggle variable sizes of all elements
      $(&#39;#toggle-sizes&#39;).find(&#39;a&#39;).click(function(){
        $container
          .toggleClass(&#39;variable-sizes&#39;)
          .isotope(&#39;reLayout&#39;);
        return false;
      });

      
    });
  &lt;/script&gt;
  
</description>
                <link>/demos/relayout.html</link>
                <guid>/demos/relayout</guid>
                <pubDate>2010-12-31T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Ali Baba Tajine</title>
                <description>  &lt;section id=&quot;copy&quot;&gt;
    &lt;p&gt;Sort item elements based on any data you can extract from them.&lt;/p&gt;
    &lt;p&gt;See &lt;a href=&quot;../docs/sorting.html&quot;&gt;docs on sorting&lt;/a&gt;.&lt;/p&gt;
  &lt;/section&gt;
  
  &lt;section id=&quot;options&quot; class=&quot;clearfix&quot;&gt;
    
    
    &lt;h3&gt;Sortierung&lt;/h3&gt;

    &lt;ul id=&quot;sort-by&quot; class=&quot;option-set clearfix&quot; data-option-key=&quot;sortBy&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=original-order&quot; data-option-value=&quot;original-order&quot; class=&quot;selected&quot; data&gt;Original&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=name&quot; data-option-value=&quot;name&quot;&gt;Name&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=symbol&quot; data-option-value=&quot;symbol&quot;&gt;Symbol&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=number&quot; data-option-value=&quot;number&quot;&gt;Nummer&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=weight&quot;  data-option-value=&quot;weight&quot;&gt;Gewicht&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=category&quot; data-option-value=&quot;category&quot;&gt;Kategorie&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=random&quot; data-option-value=&quot;random&quot;&gt;Zufall&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;

    &lt;h3&gt;Sortierreihenfolge&lt;/h3&gt;

    &lt;ul id=&quot;sort-direction&quot; class=&quot;option-set clearfix&quot; data-option-key=&quot;sortAscending&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;#sortAscending=true&quot; data-option-value=&quot;true&quot; class=&quot;selected&quot;&gt;Aufsteigend&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortAscending=false&quot; data-option-value=&quot;false&quot;&gt;Absteigend&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;


  &lt;/section&gt; &lt;!-- #options --&gt;
  
  &lt;div id=&quot;container&quot; class=&quot;clearfix&quot;&gt;
    
  &lt;/div&gt; &lt;!-- #container --&gt;
  
  &lt;script src=&quot;../js/vendor/jquery.min.js&quot;&gt;&lt;/script&gt;
  &lt;script src=&quot;../js/jquery.isotope.min.js&quot;&gt;&lt;/script&gt;
  &lt;script&gt;
    $(function(){
      
      var $container = $(&#39;#container&#39;);
      
      $container.isotope({
        itemSelector : &#39;.element&#39;,
        getSortData : {
          symbol : function( $elem ) {
            return $elem.attr(&#39;data-symbol&#39;);
          },
          category : function( $elem ) {
            return $elem.attr(&#39;data-category&#39;);
          },
          number : function( $elem ) {
            return parseInt( $elem.find(&#39;.number&#39;).text(), 10 );
          },
          weight : function( $elem ) {
            return parseFloat( $elem.find(&#39;.weight&#39;).text().replace( /[\(\)]/g, &#39;&#39;) );
          },
          name : function ( $elem ) {
            return $elem.find(&#39;.name&#39;).text();
          }
        }
      });
      
      
      var $optionSets = $(&#39;#options .option-set&#39;),
          $optionLinks = $optionSets.find(&#39;a&#39;);

      $optionLinks.click(function(){
        var $this = $(this);
        // don&#39;t proceed if already selected
        if ( $this.hasClass(&#39;selected&#39;) ) {
          return false;
        }
        var $optionSet = $this.parents(&#39;.option-set&#39;);
        $optionSet.find(&#39;.selected&#39;).removeClass(&#39;selected&#39;);
        $this.addClass(&#39;selected&#39;);
  
        // make option object dynamically, i.e. { filter: &#39;.my-filter-class&#39; }
        var options = {},
            key = $optionSet.attr(&#39;data-option-key&#39;),
            value = $this.attr(&#39;data-option-value&#39;);
        // parse &#39;false&#39; as false boolean
        value = value === &#39;false&#39; ? false : value;
        options[ key ] = value;
        if ( key === &#39;layoutMode&#39; &amp;&amp; typeof changeLayoutMode === &#39;function&#39; ) {
          // changes in layout modes need extra logic
          changeLayoutMode( $this, options )
        } else {
          // otherwise, apply new options
          $container.isotope( options );
        }
        
        return false;
      });

      
    });
  &lt;/script&gt;
</description>
                <link>/demos/sorting%203.html</link>
                <guid>/demos/sorting 3</guid>
                <pubDate>2010-12-30T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Sorting</title>
                <description>  &lt;section id=&quot;copy&quot;&gt;
    &lt;p&gt;Sort item elements based on any data you can extract from them.&lt;/p&gt;
    &lt;p&gt;See &lt;a href=&quot;../docs/sorting.html&quot;&gt;docs on sorting&lt;/a&gt;.&lt;/p&gt;
  &lt;/section&gt;
  
  &lt;section id=&quot;options&quot; class=&quot;clearfix&quot;&gt;
    
    
    &lt;h3&gt;Sortierung&lt;/h3&gt;

    &lt;ul id=&quot;sort-by&quot; class=&quot;option-set clearfix&quot; data-option-key=&quot;sortBy&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=original-order&quot; data-option-value=&quot;original-order&quot; class=&quot;selected&quot; data&gt;Original&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=name&quot; data-option-value=&quot;name&quot;&gt;Name&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=symbol&quot; data-option-value=&quot;symbol&quot;&gt;Symbol&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=number&quot; data-option-value=&quot;number&quot;&gt;Nummer&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=weight&quot;  data-option-value=&quot;weight&quot;&gt;Gewicht&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=category&quot; data-option-value=&quot;category&quot;&gt;Kategorie&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=random&quot; data-option-value=&quot;random&quot;&gt;Zufall&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;

    &lt;h3&gt;Sortierreihenfolge&lt;/h3&gt;

    &lt;ul id=&quot;sort-direction&quot; class=&quot;option-set clearfix&quot; data-option-key=&quot;sortAscending&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;#sortAscending=true&quot; data-option-value=&quot;true&quot; class=&quot;selected&quot;&gt;Aufsteigend&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortAscending=false&quot; data-option-value=&quot;false&quot;&gt;Absteigend&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;


  &lt;/section&gt; &lt;!-- #options --&gt;
  
  &lt;div id=&quot;container&quot; class=&quot;clearfix&quot;&gt;
    
  &lt;/div&gt; &lt;!-- #container --&gt;
  
  &lt;script src=&quot;../js/vendor/jquery.min.js&quot;&gt;&lt;/script&gt;
  &lt;script src=&quot;../js/jquery.isotope.min.js&quot;&gt;&lt;/script&gt;
  &lt;script&gt;
    $(function(){
      
      var $container = $(&#39;#container&#39;);
      
      $container.isotope({
        itemSelector : &#39;.element&#39;,
        getSortData : {
          symbol : function( $elem ) {
            return $elem.attr(&#39;data-symbol&#39;);
          },
          category : function( $elem ) {
            return $elem.attr(&#39;data-category&#39;);
          },
          number : function( $elem ) {
            return parseInt( $elem.find(&#39;.number&#39;).text(), 10 );
          },
          weight : function( $elem ) {
            return parseFloat( $elem.find(&#39;.weight&#39;).text().replace( /[\(\)]/g, &#39;&#39;) );
          },
          name : function ( $elem ) {
            return $elem.find(&#39;.name&#39;).text();
          }
        }
      });
      
      
      var $optionSets = $(&#39;#options .option-set&#39;),
          $optionLinks = $optionSets.find(&#39;a&#39;);

      $optionLinks.click(function(){
        var $this = $(this);
        // don&#39;t proceed if already selected
        if ( $this.hasClass(&#39;selected&#39;) ) {
          return false;
        }
        var $optionSet = $this.parents(&#39;.option-set&#39;);
        $optionSet.find(&#39;.selected&#39;).removeClass(&#39;selected&#39;);
        $this.addClass(&#39;selected&#39;);
  
        // make option object dynamically, i.e. { filter: &#39;.my-filter-class&#39; }
        var options = {},
            key = $optionSet.attr(&#39;data-option-key&#39;),
            value = $this.attr(&#39;data-option-value&#39;);
        // parse &#39;false&#39; as false boolean
        value = value === &#39;false&#39; ? false : value;
        options[ key ] = value;
        if ( key === &#39;layoutMode&#39; &amp;&amp; typeof changeLayoutMode === &#39;function&#39; ) {
          // changes in layout modes need extra logic
          changeLayoutMode( $this, options )
        } else {
          // otherwise, apply new options
          $container.isotope( options );
        }
        
        return false;
      });

      
    });
  &lt;/script&gt;
</description>
                <link>/demos/sorting%202.html</link>
                <guid>/demos/sorting 2</guid>
                <pubDate>2010-12-30T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>ABT Tabs</title>
                <description>  &lt;a href=&quot;https://github.com/twbs/bootstrap/archive/v3.0.0.zip&quot; class=&quot;btn btn-outline-inverse btn-lg&quot; onclick=&quot;_gaq.push([&#39;_trackEvent&#39;, &#39;Jumbotron actions&#39;, &#39;Download&#39;, &#39;Download 3.0.0&#39;]);&quot;&gt;Download Bootstrap&lt;/a&gt;
  
  
  &lt;section id=&quot;copy&quot;&gt;
    &lt;p&gt;Sort item elements based on any data you can extract from them.&lt;/p&gt;
    &lt;p&gt;See &lt;a href=&quot;../docs/sorting.html&quot;&gt;docs on sorting&lt;/a&gt;.&lt;/p&gt;
  &lt;/section&gt;
  
  &lt;section id=&quot;options&quot; class=&quot;clearfix&quot;&gt;
    
    
    &lt;h3&gt;Sortierung&lt;/h3&gt;

    &lt;ul id=&quot;sort-by&quot; class=&quot;option-set clearfix&quot; data-option-key=&quot;sortBy&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=original-order&quot; data-option-value=&quot;original-order&quot; class=&quot;selected&quot; data&gt;Original&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=name&quot; data-option-value=&quot;name&quot;&gt;Name&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=symbol&quot; data-option-value=&quot;symbol&quot;&gt;Symbol&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=number&quot; data-option-value=&quot;number&quot;&gt;Nummer&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=weight&quot;  data-option-value=&quot;weight&quot;&gt;Gewicht&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=category&quot; data-option-value=&quot;category&quot;&gt;Kategorie&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=random&quot; data-option-value=&quot;random&quot;&gt;Zufall&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;

    &lt;h3&gt;Sortierreihenfolge&lt;/h3&gt;

    &lt;ul id=&quot;sort-direction&quot; class=&quot;option-set clearfix&quot; data-option-key=&quot;sortAscending&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;#sortAscending=true&quot; data-option-value=&quot;true&quot; class=&quot;selected&quot;&gt;Aufsteigend&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortAscending=false&quot; data-option-value=&quot;false&quot;&gt;Absteigend&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;


  &lt;/section&gt; &lt;!-- #options --&gt;
  
  &lt;div id=&quot;container&quot; class=&quot;clearfix&quot;&gt;
    
  &lt;/div&gt; &lt;!-- #container --&gt;
  
  &lt;script src=&quot;../js/vendor/jquery.min.js&quot;&gt;&lt;/script&gt;
  &lt;script src=&quot;../js/jquery.isotope.min.js&quot;&gt;&lt;/script&gt;
  &lt;script&gt;
    $(function(){
      
      var $container = $(&#39;#container&#39;);
      
      $container.isotope({
        itemSelector : &#39;.element&#39;,
        getSortData : {
          symbol : function( $elem ) {
            return $elem.attr(&#39;data-symbol&#39;);
          },
          category : function( $elem ) {
            return $elem.attr(&#39;data-category&#39;);
          },
          number : function( $elem ) {
            return parseInt( $elem.find(&#39;.number&#39;).text(), 10 );
          },
          weight : function( $elem ) {
            return parseFloat( $elem.find(&#39;.weight&#39;).text().replace( /[\(\)]/g, &#39;&#39;) );
          },
          name : function ( $elem ) {
            return $elem.find(&#39;.name&#39;).text();
          }
        }
      });
      
      
      var $optionSets = $(&#39;#options .option-set&#39;),
          $optionLinks = $optionSets.find(&#39;a&#39;);

      $optionLinks.click(function(){
        var $this = $(this);
        // don&#39;t proceed if already selected
        if ( $this.hasClass(&#39;selected&#39;) ) {
          return false;
        }
        var $optionSet = $this.parents(&#39;.option-set&#39;);
        $optionSet.find(&#39;.selected&#39;).removeClass(&#39;selected&#39;);
        $this.addClass(&#39;selected&#39;);
  
        // make option object dynamically, i.e. { filter: &#39;.my-filter-class&#39; }
        var options = {},
            key = $optionSet.attr(&#39;data-option-key&#39;),
            value = $this.attr(&#39;data-option-value&#39;);
        // parse &#39;false&#39; as false boolean
        value = value === &#39;false&#39; ? false : value;
        options[ key ] = value;
        if ( key === &#39;layoutMode&#39; &amp;&amp; typeof changeLayoutMode === &#39;function&#39; ) {
          // changes in layout modes need extra logic
          changeLayoutMode( $this, options )
        } else {
          // otherwise, apply new options
          $container.isotope( options );
        }
        
        return false;
      });

      
    });
  &lt;/script&gt;
</description>
                <link>/demos/sorting.html</link>
                <guid>/demos/sorting</guid>
                <pubDate>2010-12-30T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Filtering</title>
                <description>  &lt;section id=&quot;copy&quot;&gt;
    &lt;p&gt;Filtering hides and reveals item elements.&lt;/p&gt;
    &lt;p&gt;See &lt;a href=&quot;../docs/filtering.html&quot;&gt;docs on filtering&lt;/a&gt;.&lt;/p&gt;
  &lt;/section&gt;
  

  &lt;section id=&quot;options&quot; class=&quot;clearfix&quot;&gt;
    
    
      &lt;h3&gt;Filter&lt;/h3&gt;

      &lt;ul id=&quot;filters&quot; class=&quot;option-set clearfix&quot; data-option-key=&quot;filter&quot;&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.metal&quot; class=&quot;selected&quot;&gt;Aktuell&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.nonmetal&quot;&gt;Veranstaltungen&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.alkali, .alkaline-earth&quot;&gt;Rezepte&lt;/a&gt;&lt;/li&gt;
        
        
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.transition&quot;&gt;transition&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.post-transition&quot;&gt;post-transition&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.inner-transition&quot;&gt;inner-transition&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;:not(.transition)&quot;&gt;not transition&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.metal:not(.transition)&quot;&gt;metal but not transition&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;*&quot;&gt;Alles zeigen&lt;/a&gt;&lt;/li&gt;
        
      &lt;/ul&gt;


  &lt;/section&gt; &lt;!-- #options --&gt;
  
  &lt;div id=&quot;container&quot; class=&quot;clearfix&quot;&gt;
    
  &lt;/div&gt; &lt;!-- #container --&gt;
  
  &lt;script src=&quot;../js/vendor/jquery.min.js&quot;&gt;&lt;/script&gt;
  &lt;script src=&quot;../js/jquery.isotope.min.js&quot;&gt;&lt;/script&gt;
  &lt;script&gt;
    $(function(){
      
      var $container = $(&#39;#container&#39;);

      $container.isotope({
        itemSelector : &#39;.element&#39;
      });
      
      
      var $optionSets = $(&#39;#options .option-set&#39;),
          $optionLinks = $optionSets.find(&#39;a&#39;);

      $optionLinks.click(function(){
        var $this = $(this);
        // don&#39;t proceed if already selected
        if ( $this.hasClass(&#39;selected&#39;) ) {
          return false;
        }
        var $optionSet = $this.parents(&#39;.option-set&#39;);
        $optionSet.find(&#39;.selected&#39;).removeClass(&#39;selected&#39;);
        $this.addClass(&#39;selected&#39;);
  
        // make option object dynamically, i.e. { filter: &#39;.my-filter-class&#39; }
        var options = {},
            key = $optionSet.attr(&#39;data-option-key&#39;),
            value = $this.attr(&#39;data-option-value&#39;);
        // parse &#39;false&#39; as false boolean
        value = value === &#39;false&#39; ? false : value;
        options[ key ] = value;
        if ( key === &#39;layoutMode&#39; &amp;&amp; typeof changeLayoutMode === &#39;function&#39; ) {
          // changes in layout modes need extra logic
          changeLayoutMode( $this, options )
        } else {
          // otherwise, apply new options
          $container.isotope( options );
        }
        
        return false;
      });

      
    });
  &lt;/script&gt;
  
</description>
                <link>/demos/filtering.html</link>
                <guid>/demos/filtering</guid>
                <pubDate>2010-12-30T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Layout modes</title>
                <description>  &lt;section id=&quot;copy&quot;&gt;
    &lt;p&gt;Isotope has a versatile layout engine that can accommodate multiple layout modes. Vertical layouts react to changes in browser width. Horizontal layouts react to browser height.&lt;/p&gt;
    &lt;p&gt;See &lt;a href=&quot;../docs/layout-modes.html&quot;&gt;docs on layout modes&lt;/a&gt;.&lt;/p&gt;
  &lt;/section&gt;
  
  &lt;section id=&quot;options&quot; class=&quot;clearfix&quot;&gt;
    
    
    &lt;h3&gt;Layout&lt;/h3&gt;

    &lt;ul id=&quot;layouts&quot; class=&quot;option-set clearfix&quot; data-option-key=&quot;layoutMode&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;#fitRows&quot; data-option-value=&quot;fitRows&quot; class=&quot;selected&quot;&gt;Standard&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#cellsByRow&quot; data-option-value=&quot;cellsByRow&quot;&gt;Zellen&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#masonry&quot; data-option-value=&quot;masonry&quot; &gt;Masonry&lt;/a&gt;&lt;/li&gt;
&lt;!--      &lt;li&gt;&lt;a href=&quot;#straightDown&quot; data-option-value=&quot;straightDown&quot;&gt;straightDown&lt;/a&gt;&lt;/li&gt;--&gt;
&lt;!--      &lt;li&gt;&lt;a href=&quot;#masonryHorizontal&quot; data-option-value=&quot;masonryHorizontal&quot; class=&quot;horizontal&quot;&gt;masonryHorizontal&lt;/a&gt;&lt;/li&gt;--&gt;
      &lt;li&gt;&lt;a href=&quot;#fitColumns&quot; data-option-value=&quot;fitColumns&quot; class=&quot;horizontal&quot;&gt;fitColumns&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#cellsByColumn&quot; data-option-value=&quot;cellsByColumn&quot; class=&quot;horizontal&quot;&gt;cellsByColumn&lt;/a&gt;&lt;/li&gt;
&lt;!--      &lt;li&gt;&lt;a href=&quot;#straightAcross&quot; data-option-value=&quot;straightAcross&quot; class=&quot;horizontal&quot;&gt;straightAcross&lt;/a&gt;&lt;/li&gt;--&gt;
    &lt;/ul&gt;


  &lt;/section&gt; &lt;!-- #options --&gt;
  
  &lt;div id=&quot;container&quot; class=&quot;variable-sizes clearfix&quot;&gt;
    
  &lt;/div&gt; &lt;!-- #container --&gt;
  
  &lt;script src=&quot;../js/vendor/jquery.min.js&quot;&gt;&lt;/script&gt;
  &lt;script src=&quot;../js/jquery.isotope.min.js&quot;&gt;&lt;/script&gt;
  &lt;script&gt;
    $(function(){
      
      var $container = $(&#39;#container&#39;);
      
      
      // add randomish size classes
      $container.find(&#39;.element&#39;).each(function(){
        var $this = $(this),
            number = parseInt( $this.find(&#39;.number&#39;).text(), 10 );
        if ( number % 7 % 2 === 1 ) {
          $this.addClass(&#39;width2&#39;);
        }
        if ( number % 3 === 0 ) {
          $this.addClass(&#39;height2&#39;);
        }
      });
      
      $container.isotope({
        itemSelector : &#39;.element&#39;,
        masonry : {
          columnWidth : 120
        },
        masonryHorizontal : {
          rowHeight: 120
        },
        cellsByRow : {
          columnWidth : 240,
          rowHeight : 240
        },
        cellsByColumn : {
          columnWidth : 240,
          rowHeight : 240
        }
      });
      
      
      // change layout
      var isHorizontal = false;
      function changeLayoutMode( $link, options ) {
        var wasHorizontal = isHorizontal;
        isHorizontal = $link.hasClass(&#39;horizontal&#39;);

        if ( wasHorizontal !== isHorizontal ) {
          // orientation change
          // need to do some clean up for transitions and sizes
          var style = isHorizontal ? 
            { height: &#39;80%&#39;, width: $container.width() } : 
            { width: &#39;auto&#39; };
          // stop any animation on container height / width
          $container.filter(&#39;:animated&#39;).stop();
          // disable transition, apply revised style
          $container.addClass(&#39;no-transition&#39;).css( style );
          setTimeout(function(){
            $container.removeClass(&#39;no-transition&#39;).isotope( options );
          }, 100 )
        } else {
          $container.isotope( options );
        }
      }


      
      var $optionSets = $(&#39;#options .option-set&#39;),
          $optionLinks = $optionSets.find(&#39;a&#39;);

      $optionLinks.click(function(){
        var $this = $(this);
        // don&#39;t proceed if already selected
        if ( $this.hasClass(&#39;selected&#39;) ) {
          return false;
        }
        var $optionSet = $this.parents(&#39;.option-set&#39;);
        $optionSet.find(&#39;.selected&#39;).removeClass(&#39;selected&#39;);
        $this.addClass(&#39;selected&#39;);
  
        // make option object dynamically, i.e. { filter: &#39;.my-filter-class&#39; }
        var options = {},
            key = $optionSet.attr(&#39;data-option-key&#39;),
            value = $this.attr(&#39;data-option-value&#39;);
        // parse &#39;false&#39; as false boolean
        value = value === &#39;false&#39; ? false : value;
        options[ key ] = value;
        if ( key === &#39;layoutMode&#39; &amp;&amp; typeof changeLayoutMode === &#39;function&#39; ) {
          // changes in layout modes need extra logic
          changeLayoutMode( $this, options )
        } else {
          // otherwise, apply new options
          $container.isotope( options );
        }
        
        return false;
      });



      
    });
  &lt;/script&gt;
  
</description>
                <link>/demos/layout-modes.html</link>
                <guid>/demos/layout-modes</guid>
                <pubDate>2010-12-29T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Elements Partial</title>
                <description>&lt;section id=&quot;copy&quot;&gt;
  &lt;p&gt;Isotope&amp;rsquo;s capabilities are designed to be used together cohesively. You can do it all &amp;mdash; filter, sort, change layout modes, add items &amp;mdash; and Isotope will handle it with ease.&lt;/p&gt;
&lt;/section&gt;

&lt;section id=&quot;options&quot; class=&quot;clearfix&quot;&gt;

  
      &lt;h3&gt;Filter&lt;/h3&gt;

      &lt;ul id=&quot;filters&quot; class=&quot;option-set clearfix&quot; data-option-key=&quot;filter&quot;&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.metal&quot; class=&quot;selected&quot;&gt;Aktuell&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.nonmetal&quot;&gt;Veranstaltungen&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.alkali, .alkaline-earth&quot;&gt;Rezepte&lt;/a&gt;&lt;/li&gt;
        
        
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.transition&quot;&gt;transition&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.post-transition&quot;&gt;post-transition&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.inner-transition&quot;&gt;inner-transition&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;:not(.transition)&quot;&gt;not transition&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.metal:not(.transition)&quot;&gt;metal but not transition&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;*&quot;&gt;Alles zeigen&lt;/a&gt;&lt;/li&gt;
        
      &lt;/ul&gt;


  
    &lt;h3&gt;Sortierung&lt;/h3&gt;

    &lt;ul id=&quot;sort-by&quot; class=&quot;option-set clearfix&quot; data-option-key=&quot;sortBy&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=original-order&quot; data-option-value=&quot;original-order&quot; class=&quot;selected&quot; data&gt;Original&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=name&quot; data-option-value=&quot;name&quot;&gt;Name&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=symbol&quot; data-option-value=&quot;symbol&quot;&gt;Symbol&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=number&quot; data-option-value=&quot;number&quot;&gt;Nummer&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=weight&quot;  data-option-value=&quot;weight&quot;&gt;Gewicht&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=category&quot; data-option-value=&quot;category&quot;&gt;Kategorie&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=random&quot; data-option-value=&quot;random&quot;&gt;Zufall&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;

    &lt;h3&gt;Sortierreihenfolge&lt;/h3&gt;

    &lt;ul id=&quot;sort-direction&quot; class=&quot;option-set clearfix&quot; data-option-key=&quot;sortAscending&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;#sortAscending=true&quot; data-option-value=&quot;true&quot; class=&quot;selected&quot;&gt;Aufsteigend&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortAscending=false&quot; data-option-value=&quot;false&quot;&gt;Absteigend&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;


  
    &lt;h3&gt;Layout&lt;/h3&gt;

    &lt;ul id=&quot;layouts&quot; class=&quot;option-set clearfix&quot; data-option-key=&quot;layoutMode&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;#fitRows&quot; data-option-value=&quot;fitRows&quot; class=&quot;selected&quot;&gt;Standard&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#cellsByRow&quot; data-option-value=&quot;cellsByRow&quot;&gt;Zellen&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#masonry&quot; data-option-value=&quot;masonry&quot; &gt;Masonry&lt;/a&gt;&lt;/li&gt;
&lt;!--      &lt;li&gt;&lt;a href=&quot;#straightDown&quot; data-option-value=&quot;straightDown&quot;&gt;straightDown&lt;/a&gt;&lt;/li&gt;--&gt;
&lt;!--      &lt;li&gt;&lt;a href=&quot;#masonryHorizontal&quot; data-option-value=&quot;masonryHorizontal&quot; class=&quot;horizontal&quot;&gt;masonryHorizontal&lt;/a&gt;&lt;/li&gt;--&gt;
      &lt;li&gt;&lt;a href=&quot;#fitColumns&quot; data-option-value=&quot;fitColumns&quot; class=&quot;horizontal&quot;&gt;fitColumns&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#cellsByColumn&quot; data-option-value=&quot;cellsByColumn&quot; class=&quot;horizontal&quot;&gt;cellsByColumn&lt;/a&gt;&lt;/li&gt;
&lt;!--      &lt;li&gt;&lt;a href=&quot;#straightAcross&quot; data-option-value=&quot;straightAcross&quot; class=&quot;horizontal&quot;&gt;straightAcross&lt;/a&gt;&lt;/li&gt;--&gt;
    &lt;/ul&gt;


  &lt;h3&gt;Etc&lt;/h3&gt;

  &lt;ul id=&quot;etc&quot; class=&quot;clearfix&quot;&gt;
    &lt;li id=&quot;toggle-sizes&quot;&gt;&lt;a href=&quot;#toggle-sizes&quot;&gt;Toggle variable sizes&lt;/a&gt;&lt;/li&gt;
    &lt;li id=&quot;insert&quot;&gt;&lt;a href=&quot;#insert&quot;&gt;Insert new elements&lt;/a&gt;&lt;/li&gt;
    &lt;li id=&quot;append&quot;&gt;&lt;a href=&#39;#append&#39;&gt;Append new elements&lt;/a&gt;&lt;/li&gt;
    &lt;li id=&quot;shuffle&quot;&gt;&lt;a href=&#39;#shuffle&#39;&gt;Shuffle&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;

&lt;/section&gt; &lt;!-- #options --&gt;

&lt;div id=&quot;container&quot; class=&quot;clickable clearfix&quot;&gt;
  
&lt;/div&gt;

&lt;script src=&quot;../js/vendor/jquery.min.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;../js/jquery.isotope.min.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;../js/fake-element.js&quot;&gt;&lt;/script&gt;
&lt;script&gt;
  $(function(){
    
    var $container = $(&#39;#container&#39;);
    
    
      // add randomish size classes
      $container.find(&#39;.element&#39;).each(function(){
        var $this = $(this),
            number = parseInt( $this.find(&#39;.number&#39;).text(), 10 );
        if ( number % 7 % 2 === 1 ) {
          $this.addClass(&#39;width2&#39;);
        }
        if ( number % 3 === 0 ) {
          $this.addClass(&#39;height2&#39;);
        }
      });
    
    $container.isotope({
      itemSelector : &#39;.element&#39;,
      masonry : {
        columnWidth : 120
      },
      masonryHorizontal : {
        rowHeight: 120
      },
      cellsByRow : {
        columnWidth : 240,
        rowHeight : 240
      },
      cellsByColumn : {
        columnWidth : 240,
        rowHeight : 240
      },
      getSortData : {
        symbol : function( $elem ) {
          return $elem.attr(&#39;data-symbol&#39;);
        },
        category : function( $elem ) {
          return $elem.attr(&#39;data-category&#39;);
        },
        number : function( $elem ) {
          return parseInt( $elem.find(&#39;.number&#39;).text(), 10 );
        },
        weight : function( $elem ) {
          return parseFloat( $elem.find(&#39;.weight&#39;).text().replace( /[\(\)]/g, &#39;&#39;) );
        },
        name : function ( $elem ) {
          return $elem.find(&#39;.name&#39;).text();
        }
      }
    });
    
    
      var $optionSets = $(&#39;#options .option-set&#39;),
          $optionLinks = $optionSets.find(&#39;a&#39;);

      $optionLinks.click(function(){
        var $this = $(this);
        // don&#39;t proceed if already selected
        if ( $this.hasClass(&#39;selected&#39;) ) {
          return false;
        }
        var $optionSet = $this.parents(&#39;.option-set&#39;);
        $optionSet.find(&#39;.selected&#39;).removeClass(&#39;selected&#39;);
        $this.addClass(&#39;selected&#39;);
  
        // make option object dynamically, i.e. { filter: &#39;.my-filter-class&#39; }
        var options = {},
            key = $optionSet.attr(&#39;data-option-key&#39;),
            value = $this.attr(&#39;data-option-value&#39;);
        // parse &#39;false&#39; as false boolean
        value = value === &#39;false&#39; ? false : value;
        options[ key ] = value;
        if ( key === &#39;layoutMode&#39; &amp;&amp; typeof changeLayoutMode === &#39;function&#39; ) {
          // changes in layout modes need extra logic
          changeLayoutMode( $this, options )
        } else {
          // otherwise, apply new options
          $container.isotope( options );
        }
        
        return false;
      });


    
      // change layout
      var isHorizontal = false;
      function changeLayoutMode( $link, options ) {
        var wasHorizontal = isHorizontal;
        isHorizontal = $link.hasClass(&#39;horizontal&#39;);

        if ( wasHorizontal !== isHorizontal ) {
          // orientation change
          // need to do some clean up for transitions and sizes
          var style = isHorizontal ? 
            { height: &#39;80%&#39;, width: $container.width() } : 
            { width: &#39;auto&#39; };
          // stop any animation on container height / width
          $container.filter(&#39;:animated&#39;).stop();
          // disable transition, apply revised style
          $container.addClass(&#39;no-transition&#39;).css( style );
          setTimeout(function(){
            $container.removeClass(&#39;no-transition&#39;).isotope( options );
          }, 100 )
        } else {
          $container.isotope( options );
        }
      }


    
      // change size of clicked element
      $container.delegate( &#39;.element&#39;, &#39;click&#39;, function(){
        $(this).toggleClass(&#39;large&#39;);
        $container.isotope(&#39;reLayout&#39;);
      });

      // toggle variable sizes of all elements
      $(&#39;#toggle-sizes&#39;).find(&#39;a&#39;).click(function(){
        $container
          .toggleClass(&#39;variable-sizes&#39;)
          .isotope(&#39;reLayout&#39;);
        return false;
      });


    
      $(&#39;#insert a&#39;).click(function(){
        var $newEls = $( fakeElement.getGroup() );
        $container.isotope( &#39;insert&#39;, $newEls );

        return false;
      });

      $(&#39;#append a&#39;).click(function(){
        var $newEls = $( fakeElement.getGroup() );
        $container.append( $newEls ).isotope( &#39;appended&#39;, $newEls );

        return false;
      });


    var $sortBy = $(&#39;#sort-by&#39;);
    $(&#39;#shuffle a&#39;).click(function(){
      $container.isotope(&#39;shuffle&#39;);
      $sortBy.find(&#39;.selected&#39;).removeClass(&#39;selected&#39;);
      $sortBy.find(&#39;[data-option-value=&quot;random&quot;]&#39;).addClass(&#39;selected&#39;);
      return false;
    });


  });
&lt;/script&gt;
</description>
                <link>/demos/elements-partial.html</link>
                <guid>/demos/elements-partial</guid>
                <pubDate>2010-12-16T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Elements Complete</title>
                <description>&lt;section id=&quot;copy&quot;&gt;
  &lt;p&gt;Isotope&amp;rsquo;s capabilities are designed to be used together cohesively. You can do it all &amp;mdash; filter, sort, change layout modes, add items &amp;mdash; and Isotope will handle it with ease.&lt;/p&gt;
&lt;/section&gt;

&lt;section id=&quot;options&quot; class=&quot;clearfix&quot;&gt;

  
      &lt;h3&gt;Filter&lt;/h3&gt;

      &lt;ul id=&quot;filters&quot; class=&quot;option-set clearfix&quot; data-option-key=&quot;filter&quot;&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.metal&quot; class=&quot;selected&quot;&gt;Aktuell&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.nonmetal&quot;&gt;Veranstaltungen&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.alkali, .alkaline-earth&quot;&gt;Rezepte&lt;/a&gt;&lt;/li&gt;
        
        
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.transition&quot;&gt;transition&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.post-transition&quot;&gt;post-transition&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.inner-transition&quot;&gt;inner-transition&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;:not(.transition)&quot;&gt;not transition&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;.metal:not(.transition)&quot;&gt;metal but not transition&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#filter&quot; data-option-value=&quot;*&quot;&gt;Alles zeigen&lt;/a&gt;&lt;/li&gt;
        
      &lt;/ul&gt;


  
    &lt;h3&gt;Sortierung&lt;/h3&gt;

    &lt;ul id=&quot;sort-by&quot; class=&quot;option-set clearfix&quot; data-option-key=&quot;sortBy&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=original-order&quot; data-option-value=&quot;original-order&quot; class=&quot;selected&quot; data&gt;Original&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=name&quot; data-option-value=&quot;name&quot;&gt;Name&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=symbol&quot; data-option-value=&quot;symbol&quot;&gt;Symbol&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=number&quot; data-option-value=&quot;number&quot;&gt;Nummer&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=weight&quot;  data-option-value=&quot;weight&quot;&gt;Gewicht&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=category&quot; data-option-value=&quot;category&quot;&gt;Kategorie&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortBy=random&quot; data-option-value=&quot;random&quot;&gt;Zufall&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;

    &lt;h3&gt;Sortierreihenfolge&lt;/h3&gt;

    &lt;ul id=&quot;sort-direction&quot; class=&quot;option-set clearfix&quot; data-option-key=&quot;sortAscending&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;#sortAscending=true&quot; data-option-value=&quot;true&quot; class=&quot;selected&quot;&gt;Aufsteigend&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sortAscending=false&quot; data-option-value=&quot;false&quot;&gt;Absteigend&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;


  
    &lt;h3&gt;Layout&lt;/h3&gt;

    &lt;ul id=&quot;layouts&quot; class=&quot;option-set clearfix&quot; data-option-key=&quot;layoutMode&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;#fitRows&quot; data-option-value=&quot;fitRows&quot; class=&quot;selected&quot;&gt;Standard&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#cellsByRow&quot; data-option-value=&quot;cellsByRow&quot;&gt;Zellen&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#masonry&quot; data-option-value=&quot;masonry&quot; &gt;Masonry&lt;/a&gt;&lt;/li&gt;
&lt;!--      &lt;li&gt;&lt;a href=&quot;#straightDown&quot; data-option-value=&quot;straightDown&quot;&gt;straightDown&lt;/a&gt;&lt;/li&gt;--&gt;
&lt;!--      &lt;li&gt;&lt;a href=&quot;#masonryHorizontal&quot; data-option-value=&quot;masonryHorizontal&quot; class=&quot;horizontal&quot;&gt;masonryHorizontal&lt;/a&gt;&lt;/li&gt;--&gt;
      &lt;li&gt;&lt;a href=&quot;#fitColumns&quot; data-option-value=&quot;fitColumns&quot; class=&quot;horizontal&quot;&gt;fitColumns&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#cellsByColumn&quot; data-option-value=&quot;cellsByColumn&quot; class=&quot;horizontal&quot;&gt;cellsByColumn&lt;/a&gt;&lt;/li&gt;
&lt;!--      &lt;li&gt;&lt;a href=&quot;#straightAcross&quot; data-option-value=&quot;straightAcross&quot; class=&quot;horizontal&quot;&gt;straightAcross&lt;/a&gt;&lt;/li&gt;--&gt;
    &lt;/ul&gt;


  &lt;h3&gt;Etc&lt;/h3&gt;

  &lt;ul id=&quot;etc&quot; class=&quot;clearfix&quot;&gt;
    &lt;li id=&quot;toggle-sizes&quot;&gt;&lt;a href=&quot;#toggle-sizes&quot;&gt;Toggle variable sizes&lt;/a&gt;&lt;/li&gt;
    &lt;li id=&quot;insert&quot;&gt;&lt;a href=&quot;#insert&quot;&gt;Insert new elements&lt;/a&gt;&lt;/li&gt;
    &lt;li id=&quot;append&quot;&gt;&lt;a href=&#39;#append&#39;&gt;Append new elements&lt;/a&gt;&lt;/li&gt;
    &lt;li id=&quot;shuffle&quot;&gt;&lt;a href=&#39;#shuffle&#39;&gt;Shuffle&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;

&lt;/section&gt; &lt;!-- #options --&gt;

&lt;div id=&quot;container&quot; class=&quot;clickable clearfix&quot;&gt;
  
&lt;/div&gt;

&lt;script src=&quot;../js/vendor/jquery.min.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;../js/jquery.isotope.min.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;../js/fake-element.js&quot;&gt;&lt;/script&gt;
&lt;script&gt;
  $(function(){
    
    var $container = $(&#39;#container&#39;);
    
    
      // add randomish size classes
      $container.find(&#39;.element&#39;).each(function(){
        var $this = $(this),
            number = parseInt( $this.find(&#39;.number&#39;).text(), 10 );
        if ( number % 7 % 2 === 1 ) {
          $this.addClass(&#39;width2&#39;);
        }
        if ( number % 3 === 0 ) {
          $this.addClass(&#39;height2&#39;);
        }
      });
    
    $container.isotope({
      itemSelector : &#39;.element&#39;,
      masonry : {
        columnWidth : 120
      },
      masonryHorizontal : {
        rowHeight: 120
      },
      cellsByRow : {
        columnWidth : 240,
        rowHeight : 240
      },
      cellsByColumn : {
        columnWidth : 240,
        rowHeight : 240
      },
      getSortData : {
        symbol : function( $elem ) {
          return $elem.attr(&#39;data-symbol&#39;);
        },
        category : function( $elem ) {
          return $elem.attr(&#39;data-category&#39;);
        },
        number : function( $elem ) {
          return parseInt( $elem.find(&#39;.number&#39;).text(), 10 );
        },
        weight : function( $elem ) {
          return parseFloat( $elem.find(&#39;.weight&#39;).text().replace( /[\(\)]/g, &#39;&#39;) );
        },
        name : function ( $elem ) {
          return $elem.find(&#39;.name&#39;).text();
        }
      }
    });
    
    
      var $optionSets = $(&#39;#options .option-set&#39;),
          $optionLinks = $optionSets.find(&#39;a&#39;);

      $optionLinks.click(function(){
        var $this = $(this);
        // don&#39;t proceed if already selected
        if ( $this.hasClass(&#39;selected&#39;) ) {
          return false;
        }
        var $optionSet = $this.parents(&#39;.option-set&#39;);
        $optionSet.find(&#39;.selected&#39;).removeClass(&#39;selected&#39;);
        $this.addClass(&#39;selected&#39;);
  
        // make option object dynamically, i.e. { filter: &#39;.my-filter-class&#39; }
        var options = {},
            key = $optionSet.attr(&#39;data-option-key&#39;),
            value = $this.attr(&#39;data-option-value&#39;);
        // parse &#39;false&#39; as false boolean
        value = value === &#39;false&#39; ? false : value;
        options[ key ] = value;
        if ( key === &#39;layoutMode&#39; &amp;&amp; typeof changeLayoutMode === &#39;function&#39; ) {
          // changes in layout modes need extra logic
          changeLayoutMode( $this, options )
        } else {
          // otherwise, apply new options
          $container.isotope( options );
        }
        
        return false;
      });


    
      // change layout
      var isHorizontal = false;
      function changeLayoutMode( $link, options ) {
        var wasHorizontal = isHorizontal;
        isHorizontal = $link.hasClass(&#39;horizontal&#39;);

        if ( wasHorizontal !== isHorizontal ) {
          // orientation change
          // need to do some clean up for transitions and sizes
          var style = isHorizontal ? 
            { height: &#39;80%&#39;, width: $container.width() } : 
            { width: &#39;auto&#39; };
          // stop any animation on container height / width
          $container.filter(&#39;:animated&#39;).stop();
          // disable transition, apply revised style
          $container.addClass(&#39;no-transition&#39;).css( style );
          setTimeout(function(){
            $container.removeClass(&#39;no-transition&#39;).isotope( options );
          }, 100 )
        } else {
          $container.isotope( options );
        }
      }


    
      // change size of clicked element
      $container.delegate( &#39;.element&#39;, &#39;click&#39;, function(){
        $(this).toggleClass(&#39;large&#39;);
        $container.isotope(&#39;reLayout&#39;);
      });

      // toggle variable sizes of all elements
      $(&#39;#toggle-sizes&#39;).find(&#39;a&#39;).click(function(){
        $container
          .toggleClass(&#39;variable-sizes&#39;)
          .isotope(&#39;reLayout&#39;);
        return false;
      });


    
      $(&#39;#insert a&#39;).click(function(){
        var $newEls = $( fakeElement.getGroup() );
        $container.isotope( &#39;insert&#39;, $newEls );

        return false;
      });

      $(&#39;#append a&#39;).click(function(){
        var $newEls = $( fakeElement.getGroup() );
        $container.append( $newEls ).isotope( &#39;appended&#39;, $newEls );

        return false;
      });


    var $sortBy = $(&#39;#sort-by&#39;);
    $(&#39;#shuffle a&#39;).click(function(){
      $container.isotope(&#39;shuffle&#39;);
      $sortBy.find(&#39;.selected&#39;).removeClass(&#39;selected&#39;);
      $sortBy.find(&#39;[data-option-value=&quot;random&quot;]&#39;).addClass(&#39;selected&#39;);
      return false;
    });


  });
&lt;/script&gt;</description>
                <link>/demos/elements-complete.html</link>
                <guid>/demos/elements-complete</guid>
                <pubDate>2010-12-13T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Basic</title>
                <description>  &lt;section id=&quot;copy&quot;&gt;
    &lt;p&gt;This is a basic demo of Isotope. Resize the browser window to see the layout animate.&lt;/p&gt;
  &lt;/section&gt;
  
  &lt;div id=&quot;container&quot;&gt;
    
  &lt;/div&gt; &lt;!-- #container --&gt;
  
  &lt;script src=&quot;../js/vendor/jquery.min.js&quot;&gt;&lt;/script&gt;
  &lt;script src=&quot;../js/jquery.isotope.min.js&quot;&gt;&lt;/script&gt;
  &lt;script&gt;
    $(function(){
      
      var $container = $(&#39;#container&#39;);
      
      $container.isotope({
        itemSelector: &#39;.element&#39;
      });
      
    });
  &lt;/script&gt;
  
</description>
                <link>/demos/basic.html</link>
                <guid>/demos/basic</guid>
                <pubDate>2010-12-12T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Adding items</title>
                <description>&lt;p&gt;If your application dynamically adds new content, Isotope provides several methods to add items.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;../demos/adding-items.html&quot;&gt;&lt;strong&gt;See Demo: Adding items&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;additems-method&quot;&gt;addItems method&lt;/h2&gt;

&lt;p&gt;The &lt;a href=&quot;methods.html#additems&quot;&gt;&lt;code&gt;addItems&lt;/code&gt; method&lt;/a&gt; adds new content to an Isotope container. This applies the proper styles to the items so they can be positioned and any sorting data is retrieved. But that’s it. The new content will &lt;em&gt;not&lt;/em&gt; be filtered, sorted, or positioned properly, nor will it be appended to the container element.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$newItems&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;lt;div class=&amp;quot;item&amp;quot; /&amp;gt;&amp;lt;div class=&amp;quot;item&amp;quot; /&amp;gt;&amp;lt;div class=&amp;quot;item&amp;quot; /&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#container&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$newItems&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isotope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;addItems&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$newItems&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;insert-method&quot;&gt;insert method&lt;/h2&gt;

&lt;p&gt;More likely, you want to use the &lt;a href=&quot;methods.html#insert&quot;&gt;&lt;code&gt;insert&lt;/code&gt; method&lt;/a&gt;, which does everything that &lt;code&gt;addItems&lt;/code&gt; misses. &lt;code&gt;insert&lt;/code&gt; will append the content to the container, filter the new content, sort all the content, then trigger a &lt;code&gt;reLayout&lt;/code&gt; so all item elements are properly laid out.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$newItems&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;lt;div class=&amp;quot;item&amp;quot; /&amp;gt;&amp;lt;div class=&amp;quot;item&amp;quot; /&amp;gt;&amp;lt;div class=&amp;quot;item&amp;quot; /&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#container&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isotope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;insert&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$newItems&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;appended-method&quot;&gt;appended method&lt;/h2&gt;

&lt;p&gt;The &lt;a href=&quot;methods.html#appended&quot;&gt;&lt;code&gt;appended&lt;/code&gt; method&lt;/a&gt; is a convenience method triggers &lt;code&gt;addItems&lt;/code&gt; on new content, then lays out &lt;em&gt;only the new content&lt;/em&gt; at the end of the layout. This method is useful if you know you only want to add new content to the end, and &lt;strong&gt;not&lt;/strong&gt; use filtering or sorting.  &lt;code&gt;appended&lt;/code&gt; is the best method to use with Infinite Scroll.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;../demos/infinite-scroll.html&quot;&gt;&lt;strong&gt;See Demo: Infinite Scroll&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;See also &lt;a href=&quot;help.html#infinite_scroll_with_filtering_or_sorting&quot;&gt;Infinite Scroll with filtering or sorting&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;prepending&quot;&gt;Prepending&lt;/h2&gt;

&lt;p&gt;Because of Isotope’s sorting functionality, prepending isn’t as straight forward as might expect. However, it can be replicated fairly easy.  After prepending new content to the container, you can re-collect all the item elements and update their sorting order with the &lt;a href=&quot;methods.html#reloaditems&quot;&gt;&lt;code&gt;reloadItems&lt;/code&gt; method&lt;/a&gt;. Then trigger a re-layout, with the original DOM order.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$newItems&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;lt;div class=&amp;quot;item&amp;quot; /&amp;gt;&amp;lt;div class=&amp;quot;item&amp;quot; /&amp;gt;&amp;lt;div class=&amp;quot;item&amp;quot; /&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#container&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prepend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$newItems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isotope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;reloadItems&amp;#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isotope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sortBy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;original-order&amp;#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;recommended-css&quot;&gt;Recommended CSS&lt;/h2&gt;

&lt;p&gt;You’ll need these styles in your CSS for the reveal animation when adding items.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;&lt;span class=&quot;c&quot;&gt;/**** disabling Isotope CSS3 transitions ****/&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.isotope.no-transition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.isotope.no-transition&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.isotope-item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.isotope&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.isotope-item.no-transition&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;webkit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;duration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
     &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;moz&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;duration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ms&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;duration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
       &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;duration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;duration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

</description>
                <link>/docs/adding-items.html</link>
                <guid>/docs/adding-items</guid>
                <pubDate>2010-12-10T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Animating</title>
                <description>&lt;p&gt;Isotope was developed to take advantage of the best browser features available. For animations, you can use CSS3 transitions and transforms in capable browsers. Isotope provides Javascript animation fall back for lesser browsers.&lt;/p&gt;

&lt;h2 id=&quot;animationengine-option&quot;&gt;animationEngine option&lt;/h2&gt;

&lt;p&gt;You can control how Isotope handles animation with the &lt;a href=&quot;options.html#animationengine&quot;&gt;&lt;code&gt;animationEngine&lt;/code&gt;&lt;/a&gt; option. This option has three values which control whether jQuery applies styles with&lt;code&gt;.css()&lt;/code&gt; or &lt;code&gt;.animate()&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;&#39;best-available&#39;&lt;/code&gt;: if browser supports CSS transitions, Isotope uses &lt;code&gt;.css()&lt;/code&gt;. If not, falls back to using &lt;code&gt;.animate()&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;&#39;css&#39;&lt;/code&gt;: Isotope uses &lt;code&gt;.css()&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;&#39;jquery&#39;&lt;/code&gt;: Isotope uses &lt;code&gt;.animate()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;css-transitions&quot;&gt;CSS transitions&lt;/h2&gt;

&lt;p&gt;To enable animation with CSS transitions, you’ll need the following code in your CSS:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.isotope&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.isotope&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.isotope-item&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;/* change duration value to whatever you like */&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;webkit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;duration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0.8s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
     &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;moz&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;duration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0.8s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ms&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;duration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0.8s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
       &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;duration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0.8s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;duration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0.8s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.isotope&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;webkit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
     &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;moz&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ms&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
       &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.isotope&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.isotope-item&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;webkit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;webkit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;opacity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
     &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;moz&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;moz&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;opacity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ms&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ms&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;opacity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
       &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;      &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;opacity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;         &lt;span class=&quot;n&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;opacity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;/**** disabling Isotope CSS3 transitions ****/&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.isotope.no-transition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.isotope.no-transition&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.isotope-item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.isotope&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.isotope-item.no-transition&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;webkit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;duration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
     &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;moz&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;duration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ms&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;duration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
       &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;duration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;duration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;variations&quot;&gt;Variations&lt;/h2&gt;

&lt;p&gt;With these two options you can finely control how animation is handled across browsers.&lt;/p&gt;

&lt;h3 id=&quot;best-available-recommended&quot;&gt;Best available (recommended)&lt;/h3&gt;

&lt;p&gt;Browsers that support CSS transitions will use them. Other browsers will fall back to using jQuery animation.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Add&lt;/strong&gt; CSS transition declarations&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;always-use-jquery&quot;&gt;Always use jQuery&lt;/h3&gt;

&lt;p&gt;All browsers will use jQuery animation, regardless of their CSS transition support.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;animationEngine : &#39;jquery&#39;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;No&lt;/strong&gt; CSS transition declarations&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Never set &lt;code&gt;animationEngine : &#39;jquery&#39;&lt;/code&gt; AND add CSS transition declarations. This will cause double-animation in browser that support CSS transitions — which is a bad thing.&lt;/p&gt;

&lt;h3 id=&quot;only-css-transitions&quot;&gt;Only CSS transitions&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;animationEngine: &#39;css&#39;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Add&lt;/strong&gt; CSS transition declarations&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;none&quot;&gt;None&lt;/h3&gt;

&lt;p&gt;Animation is not enabled in any browser&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;animationEngine : &#39;css&#39;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;No&lt;/strong&gt; CSS transition declarations&lt;/li&gt;
&lt;/ul&gt;

</description>
                <link>/docs/animating.html</link>
                <guid>/docs/animating</guid>
                <pubDate>2010-12-09T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Sorting</title>
                <description>&lt;p&gt;Collect data from item element and rearrange their order in the layout with sorting.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;../demos/sorting.html&quot;&gt;&lt;strong&gt;See Demo: Sorting&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;markup&quot;&gt;Markup&lt;/h2&gt;

&lt;p&gt;Any group of similar items have their own data. It could be a text value, like a title or tag, or a numerical value, like a measurement or grade. For our example, each item element has several data points that can be used for sorting. There’s the elemental symbol, number, name of the element, weight, and category.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;container&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;element transition metal&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-category=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;transition&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; 
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;number&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;79&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt; 
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;h3&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;symbol&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Au&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h3&amp;gt;&lt;/span&gt; 
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;h2&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Gold&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt; 
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;weight&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;196.966569&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt; 
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt; 
    
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;element metalloid&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-category=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;metalloid&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; 
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;number&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;51&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt; 
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;h3&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;symbol&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Sb&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h3&amp;gt;&lt;/span&gt; 
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;h2&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Antimony&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt; 
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;weight&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;121.76&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt; 
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;getsortdata-option&quot;&gt;getSortData option&lt;/h2&gt;

&lt;p&gt;In order to extract this data from the element, we need to pass in a function to get it via the &lt;a href=&quot;options.html#getsortdata&quot;&gt;&lt;code&gt;getSortData&lt;/code&gt;&lt;/a&gt; option.  This option accepts an object, whose values are the functions to extract the data.&lt;/p&gt;

&lt;p&gt;Each function receives one argument, which represents a jQuery object for each item element. With that argument, the function needs to return the data point.&lt;/p&gt;

&lt;p&gt;In the example above, to get element name, we would need to get the text from the &lt;code&gt;.name&lt;/code&gt; element. The same works for symbol.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#container&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isotope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;getSortData&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$elem&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$elem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;.name&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;symbol&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$elem&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$elem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;.symbol&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;For numerical data, we can convert a text value into a number with &lt;code&gt;parseInt()&lt;/code&gt; or &lt;code&gt;parseFloat()&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;getSortData&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$elem&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;parseInt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$elem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;.number&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;weight&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$elem&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;parseFloat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$elem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;.weight&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The data extracted can be anything accessible in the item element via jQuery. To extract the category data held within the &lt;code&gt;data-category&lt;/code&gt; attribute, we can use the &lt;code&gt;.attr()&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;getSortData&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;category&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$elem&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$elem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;data-category&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Get creative! You could sort a list by the width of each item element.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;getSortData&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$elem&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$elem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;sortby-option&quot;&gt;sortBy option&lt;/h2&gt;

&lt;p&gt;For every method set in &lt;code&gt;getSortData&lt;/code&gt;, Isotope uses that method to build the data for sorting. The data cache is built on initialization so it can be quickly accessed when sorting. With the methods above, we have built data for an item elements name, symbol, number, weight and category.&lt;/p&gt;

&lt;p&gt;Sorting elements is done with the &lt;a href=&quot;options.html#sortby&quot;&gt;&lt;code&gt;sortBy&lt;/code&gt; option&lt;/a&gt;. The value needs to match the property name used in the &lt;code&gt;getSortData&lt;/code&gt; object.&lt;/p&gt;

&lt;p&gt;With our example, we can use &lt;code&gt;&#39;name&#39;&lt;/code&gt;, &lt;code&gt;&#39;symbol&#39;&lt;/code&gt;, &lt;code&gt;&#39;number&#39;&lt;/code&gt;, &lt;code&gt;&#39;weight&#39;&lt;/code&gt; and &lt;code&gt;&#39;category&#39;&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#container&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isotope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sortBy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;symbol&amp;#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;There are two additional sorting data methods built in to Isotope. &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;&#39;original-order&#39;&lt;/code&gt; will use the original order of the item elements to arrange them in the layout.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;&#39;random&#39;&lt;/code&gt; is a random order.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;sortascending-option&quot;&gt;sortAscending option&lt;/h2&gt;

&lt;p&gt;By default, Isotope sorts data in ascension. If our data for name is “Gold, Antimony, Lead, Iron, Silver”, when sorted by name, the elements will be ordered ABC.. : “Antimony, Gold, Iron, Lead, Silver.”  To reverse the order and sort data in descension, set &lt;a href=&quot;options.html#sortascending&quot;&gt;&lt;code&gt;sortAscending&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#container&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isotope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; 
  &lt;span class=&quot;nx&quot;&gt;sortBy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;sortAscending&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;creating-interactive-buttons&quot;&gt;Creating interactive buttons&lt;/h2&gt;

&lt;p&gt;We can use a simple list for our buttons.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;sort-by&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;#name&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;name&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;#symbol&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;symbol&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;#number&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;number&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;#weight&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;weight&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;#category&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;category&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;When one of these links is clicked, we can use the &lt;code&gt;href&lt;/code&gt; attribute as the value for &lt;code&gt;sortBy&lt;/code&gt; in the Isotope script.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#sort-by a&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// get href attribute, minus the &amp;#39;#&amp;#39;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sortName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;href&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;slice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#container&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isotope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sortBy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sortName&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

</description>
                <link>/docs/sorting.html</link>
                <guid>/docs/sorting</guid>
                <pubDate>2010-12-07T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Filtering</title>
                <description>&lt;p&gt;Isotope can hide and show item elements via the &lt;a href=&quot;options.html#filter&quot;&gt;&lt;code&gt;filter&lt;/code&gt; option&lt;/a&gt;. &lt;code&gt;filter&lt;/code&gt; accepts a jQuery selector. Items that match that selector will be shown. Items that do not match will be hidden.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;../demos/filtering.html&quot;&gt;&lt;strong&gt;See Demo: Filtering&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;markup&quot;&gt;Markup&lt;/h2&gt;

&lt;p&gt;Each item element has several identifying classes. In this case, &lt;code&gt;transition&lt;/code&gt;, &lt;code&gt;metal&lt;/code&gt;, &lt;code&gt;lanthanoid&lt;/code&gt;, &lt;code&gt;alkali&lt;/code&gt;, etc.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;container&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;element transition metal&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;...&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;element post-transition metal&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;...&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;element alkali metal&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;...&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;element transition metal&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;...&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;element lanthanoid metal inner-transition&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;...&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt; 
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;element halogen nonmetal&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;...&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt; 
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;element alkaline-earth metal&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;...&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  ...
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;jquery-script&quot;&gt;jQuery script&lt;/h2&gt;

&lt;p&gt;To show only &lt;code&gt;.metal&lt;/code&gt; items, the jQuery script would be:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#container&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isotope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;.metal&amp;#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The &lt;code&gt;filter&lt;/code&gt; option uses a &lt;a href=&quot;http://api.jquery.com/category/selectors/&quot;&gt;jQuery selector&lt;/a&gt; to show item elements that match a selector, and hide all others that do not. For example:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;.alkali, .alkaline-earth&lt;/code&gt; will show &lt;code&gt;.alkali&lt;/code&gt; AND ` .alkaline-earth` item elements.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;.metal.transition&lt;/code&gt; will show item elements that have BOTH &lt;code&gt;.metal&lt;/code&gt; and &lt;code&gt;.transition&lt;/code&gt; classes.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;.metal:not(.transition)&lt;/code&gt; will show &lt;code&gt;.metal&lt;/code&gt; item elements that are NOT &lt;code&gt;.transition&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;creating-interactive-buttons&quot;&gt;Creating interactive buttons&lt;/h2&gt;

&lt;p&gt;Let’s use a basic list for our buttons&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;filters&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;#&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-filter=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;*&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;show all&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;#&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-filter=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;.metal&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;metal&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;#&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-filter=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;.transition&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;transition&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;#&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-filter=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;.alkali, .alkaline-earth&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;alkali and alkaline-earth&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;#&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-filter=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;:not(.transition)&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;not transition&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;#&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-filter=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;.metal:not(.transition)&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;metal but not transition&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Here we set the filter for each link with a &lt;code&gt;data-filter&lt;/code&gt; attribute. In our jQuery script, whenever a link is clicked, we’ll use this attribute as the filter selector.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// cache container&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$container&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#container&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// initialize isotope&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;$container&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isotope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// options...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// filter items when filter link is clicked&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#filters a&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;selector&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;data-filter&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$container&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isotope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;selector&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;recommended-css&quot;&gt;Recommended CSS&lt;/h2&gt;

&lt;p&gt;If you choose to use the filtering functionality, add the following CSS to your stylesheet:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;&lt;span class=&quot;c&quot;&gt;/**** Isotope filtering ****/&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.isotope-item&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;z-index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.isotope-hidden.isotope-item&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;pointer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;events&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;z-index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;These styles ensure that hidden items will not interfere with interactions.&lt;/p&gt;
</description>
                <link>/docs/filtering.html</link>
                <guid>/docs/filtering</guid>
                <pubDate>2010-12-06T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Layout modes</title>
                <description>&lt;p&gt;Isotope has a versatile layout engine that can accommodate multiple layout modes. You can set and change the layout mode via the &lt;code&gt;layoutMode&lt;/code&gt; option.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;../demos/layout-modes.html&quot;&gt;&lt;strong&gt;See Demo: Layout modes&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;example&quot;&gt;Example&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#container&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isotope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;layoutMode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;fitRows&amp;#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Several layout modes are built into Isotope.&lt;/p&gt;

&lt;h3 id=&quot;horizontal-layouts&quot;&gt;Horizontal layouts&lt;/h3&gt;

&lt;p&gt;Horizontal layout modes (masonryHorizontal, fitColumns, cellsByColumn, and straightAcross) need a container that has a height value. Be sure that your CSS has height set.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;&lt;span class=&quot;nf&quot;&gt;#container&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;/* either of these will work for horizontal Isotope layouts */&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;80&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;480px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;cellsbycolumn&quot;&gt;cellsByColumn&lt;/h2&gt;

&lt;p&gt;A &lt;strong&gt;horizontal&lt;/strong&gt; grid layout where items are centered inside each cell. The grid is defined by two options, &lt;code&gt;columnWidth&lt;/code&gt; and &lt;code&gt;rowHeight&lt;/code&gt;. The horizontal equivalent of cellsByRow.&lt;/p&gt;

&lt;h3 id=&quot;cellsByColumn-options&quot;&gt;Options&lt;/h3&gt;

&lt;dl class=&quot;clearfix&quot;&gt;
  &lt;dt&gt;&lt;code&gt;columnWidth&lt;/code&gt;&lt;/dt&gt;
  &lt;dd class=&quot;option-type&quot;&gt;Integer&lt;/dd&gt;
&lt;/dl&gt;
&lt;dl class=&quot;clearfix&quot;&gt;
  &lt;dt&gt;&lt;code&gt;rowHeight&lt;/code&gt;&lt;/dt&gt;
  &lt;dd class=&quot;option-type&quot;&gt;Integer&lt;/dd&gt;
&lt;/dl&gt;

&lt;h3 id=&quot;cellsByColumn-example&quot;&gt;Example&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#container&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isotope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;layoutMode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;cellsByColumn&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;cellsByColumn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;columnWidth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;240&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;rowHeight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;360&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;cellsbyrow&quot;&gt;cellsByRow&lt;/h2&gt;

&lt;p&gt;A &lt;strong&gt;vertical&lt;/strong&gt; grid layout where items are centered inside each cell. The grid is defined by two options, &lt;code&gt;columnWidth&lt;/code&gt; and &lt;code&gt;rowHeight&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;cellsByRow-options&quot;&gt;Options&lt;/h3&gt;

&lt;dl class=&quot;clearfix&quot;&gt;
  &lt;dt&gt;&lt;code&gt;columnWidth&lt;/code&gt;&lt;/dt&gt;
  &lt;dd class=&quot;option-type&quot;&gt;Integer&lt;/dd&gt;
&lt;/dl&gt;
&lt;dl class=&quot;clearfix&quot;&gt;
  &lt;dt&gt;&lt;code&gt;rowHeight&lt;/code&gt;&lt;/dt&gt;
  &lt;dd class=&quot;option-type&quot;&gt;Integer&lt;/dd&gt;
&lt;/dl&gt;

&lt;h3 id=&quot;cellsByRow-example&quot;&gt;Example&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#container&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isotope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;layoutMode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;cellsByRow&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;cellsByRow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;columnWidth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;240&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;rowHeight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;360&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;fitcolumns&quot;&gt;fitColumns&lt;/h2&gt;

&lt;p&gt;Item elements are arranged into columns. Columns progress &lt;strong&gt;horizontally&lt;/strong&gt; from left to right. Items within those columns are arranged top-to-bottom. The horizontal equivalent of fitRows. &lt;/p&gt;

&lt;h2 id=&quot;fitrows&quot;&gt;fitRows&lt;/h2&gt;

&lt;p&gt;Item elements are arranged into rows. Rows progress &lt;strong&gt;vertically&lt;/strong&gt; top to bottom. Similar to what you would expect from a layout that uses &lt;code&gt;float: left&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;masonry&quot;&gt;masonry&lt;/h2&gt;

&lt;p&gt;Masonry is the default layout mode for Isotope. Item elements are arranged intelligently within a &lt;strong&gt;vertical&lt;/strong&gt; grid. For each item element, the script calculates the next best fit for the item within the grid.&lt;/p&gt;

&lt;h3 id=&quot;masonry-options&quot;&gt;Options&lt;/h3&gt;

&lt;dl class=&quot;clearfix&quot;&gt;
  &lt;dt&gt;&lt;code&gt;columnWidth&lt;/code&gt;&lt;/dt&gt;
  &lt;dd class=&quot;option-type&quot;&gt;Integer&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;The width of one column in the grid. If no value is set for &lt;code&gt;columnWidth&lt;/code&gt;, default is the width of the first item element.&lt;/p&gt;

&lt;h3 id=&quot;masonry-example&quot;&gt;Example&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#container&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isotope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;masonry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;columnWidth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;240&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;masonryhorizontal&quot;&gt;masonryHorizontal&lt;/h2&gt;

&lt;p&gt;The &lt;strong&gt;horizontal&lt;/strong&gt; equivalent of masonry layout. Instead of progressing top-to-bottom, masonryHorizontal layout will progress left-to-right. Item elements are arranged intelligently within a grid. For each item element, the script calculates the next best fit for the item within the grid.&lt;/p&gt;

&lt;h3 id=&quot;masonryHorizontal-options&quot;&gt;Options&lt;/h3&gt;

&lt;dl class=&quot;clearfix&quot;&gt;
  &lt;dt&gt;&lt;code&gt;rowHeight&lt;/code&gt;&lt;/dt&gt;
  &lt;dd class=&quot;option-type&quot;&gt;Integer&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;The width of one column in the grid. If no value is set for &lt;code&gt;rowHeight&lt;/code&gt;, default is the height of the first item element.&lt;/p&gt;

&lt;h3 id=&quot;masonryHorizontal-example&quot;&gt;Example&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#container&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isotope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;masonryHorizontal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;rowHeight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;360&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;straightacross&quot;&gt;straightAcross&lt;/h2&gt;

&lt;p&gt;Item elements are arranged &lt;strong&gt;horizontally&lt;/strong&gt; left to right. Useful for simple lists.&lt;/p&gt;

&lt;h2 id=&quot;straightdown&quot;&gt;straightDown&lt;/h2&gt;

&lt;p&gt;Item elements are arranged &lt;strong&gt;vertically&lt;/strong&gt; top to bottom. Useful for simple lists.&lt;/p&gt;

&lt;h2 id=&quot;modified-layout-modes&quot;&gt;Modified layout modes&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;extending-isotope.html&quot;&gt;Isotope’s methods can be extended and overwritten&lt;/a&gt; to shim-in additional functionality. See these modified layout modes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;../custom-layout-modes/centered-masonry.html&quot;&gt;&lt;strong&gt;Centered masonry&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;../custom-layout-modes/masonry-corner-stamp.html&quot;&gt;&lt;strong&gt;Masonry corner stamp&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;../custom-layout-modes/masonry-gutters.html&quot;&gt;&lt;strong&gt;Masonry gutters&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To use these mods, copy the revised methods found in the demos’ page source. They look like:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Isotope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_masonryReset&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// modified code..&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

</description>
                <link>/docs/layout-modes.html</link>
                <guid>/docs/layout-modes</guid>
                <pubDate>2010-12-05T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Methods</title>
                <description>&lt;p&gt;Isotope offers several methods to extend functionality. Isotope’s methods follow the jQuery UI pattern.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#container&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isotope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;methodName&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;optionalParameters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;additems&quot;&gt;addItems&lt;/h2&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isotope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;addItems&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;callback&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Adds item elements to the pool of item elements of the container, but does not sort, filter or layout. See &lt;a href=&quot;adding-items.html&quot;&gt;Adding items&lt;/a&gt; for more details. The argument within the callback is the group of elements that were added. &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;../demos/adding-items.html&quot;&gt;&lt;strong&gt;See Demo: Adding items&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;appended&quot;&gt;appended&lt;/h2&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isotope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;appended&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;callback&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Adds item elements via &lt;code&gt;addItems&lt;/code&gt; method, then triggers &lt;code&gt;layout&lt;/code&gt; just for those new elements. Useful for Infinite Scroll. See &lt;a href=&quot;adding-items.html&quot;&gt;Adding items&lt;/a&gt; for more details.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;../demos/adding-items.html&quot;&gt;&lt;strong&gt;See Demo: Adding items&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;destroy&quot;&gt;destroy&lt;/h2&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isotope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;destroy&amp;#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Removes Isotope functionality completely. Returns element back to pre-init state.&lt;/p&gt;

&lt;h2 id=&quot;insert&quot;&gt;insert&lt;/h2&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isotope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;insert&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;callback&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Appends items elements to container, adds items to via &lt;code&gt;addItems&lt;/code&gt; method, and then triggers &lt;code&gt;reLayout&lt;/code&gt; method so new elements are properly filtered, sorted and laid-out. See &lt;a href=&quot;adding-items.html&quot;&gt;Adding items&lt;/a&gt; for more details.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;../demos/adding-items.html&quot;&gt;&lt;strong&gt;See Demo: Adding items&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;layout&quot;&gt;layout&lt;/h2&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isotope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;layout&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;callback&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Positions specified item elements in layout.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;layout&lt;/code&gt; will only position specified elements, and those elements will be positioned at the end of layout. Whereas &lt;code&gt;reLayout&lt;/code&gt; will position all elements in the Isotope widget.&lt;/p&gt;

&lt;h2 id=&quot;option&quot;&gt;option&lt;/h2&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isotope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;option&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;options&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Sets options for plugin instance. Unlike passing options through &lt;code&gt;.isotope()&lt;/code&gt;, using the &lt;code&gt;option&lt;/code&gt; method will not trigger layout.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// sets multiple options&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isotope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;option&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;layoutMode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;fitRows&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;.my-filter&amp;#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;relayout&quot;&gt;reLayout&lt;/h2&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isotope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;reLayout&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;callback&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Resets layout properties and lays-out every item element.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;../demos/relayout.html&quot;&gt;&lt;strong&gt;See Demo: reLayout&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;reloaditems&quot;&gt;reloadItems&lt;/h2&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isotope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;reloadItems&amp;#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Re-collects all item elements in their current order in the DOM.  Useful for prepending.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;../demos/adding-items.html&quot;&gt;&lt;strong&gt;See Demo: Adding items&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;remove&quot;&gt;remove&lt;/h2&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isotope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;remove&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;callback&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Removes specified item elements from Isotope widget and the DOM.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;../demos/removing.html&quot;&gt;&lt;strong&gt;See Demo: Removing&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;shuffle&quot;&gt;shuffle&lt;/h2&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isotope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;shuffle&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;callback&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Shuffles order of items. Sets &lt;a href=&quot;options.html#sortby&quot;&gt;&lt;code&gt;sortBy&lt;/code&gt; option&lt;/a&gt; to &lt;a href=&quot;sorting.html#sortby_option&quot;&gt;&lt;code&gt;&#39;random&#39;&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;updatesortdata&quot;&gt;updateSortData&lt;/h2&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isotope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;updateSortData&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$items&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Updates the sorting data on specified item elements. This method is useful if the data within an item is changed dynamically after Isotope has been initialized.&lt;/p&gt;
</description>
                <link>/docs/methods.html</link>
                <guid>/docs/methods</guid>
                <pubDate>2010-12-04T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Options</title>
                <description>&lt;dl class=&quot;header clearfix&quot;&gt;
  &lt;dt&gt;&lt;code&gt;option&lt;/code&gt;&lt;/dt&gt;
  &lt;dd class=&quot;option-type&quot;&gt;Type&lt;/dd&gt;
  &lt;dd class=&quot;default&quot;&gt;Default&lt;/dd&gt;
&lt;/dl&gt;

&lt;h2 id=&quot;animationengine&quot;&gt;animationEngine&lt;/h2&gt;

&lt;dl class=&quot;clearfix&quot;&gt;
  &lt;dt&gt;&lt;code&gt;animationEngine&lt;/code&gt;&lt;/dt&gt;
  &lt;dd class=&quot;option-type&quot;&gt;String&lt;/dd&gt;
  &lt;dd class=&quot;default&quot;&gt;&lt;code&gt;&lt;span class=&quot;s1&quot;&gt;&#39;best-available&#39;&lt;/span&gt;&lt;/code&gt;&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;Determines the jQuery method to apply styles, &lt;code&gt;.css()&lt;/code&gt; or &lt;code&gt;.animate()&lt;/code&gt;. Useful for relying on CSS transitions to handle animation.&lt;/p&gt;

&lt;h3 id=&quot;animationEngine-values&quot;&gt;Values&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;&#39;best-available&#39;&lt;/code&gt;: if browser supports CSS transitions, Isotope uses &lt;code&gt;.css()&lt;/code&gt;. If not, falls back to using &lt;code&gt;.animate()&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;&#39;css&#39;&lt;/code&gt;: Isotope uses &lt;code&gt;.css()&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;&#39;jquery&#39;&lt;/code&gt;: Isotope uses &lt;code&gt;.animate()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;animationoptions&quot;&gt;animationOptions&lt;/h2&gt;

&lt;dl class=&quot;clearfix&quot;&gt;
  &lt;dt&gt;&lt;code&gt;animationOptions&lt;/code&gt;&lt;/dt&gt;
  &lt;dd class=&quot;option-type&quot;&gt;Object&lt;/dd&gt;
  &lt;dd class=&quot;default&quot;&gt;&lt;code&gt;{ queue: &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;, duration: &lt;span class=&quot;mi&quot;&gt;800&lt;/span&gt; }&lt;/code&gt;&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;When jQuery is the animation engine (see above), these options will be used in &lt;code&gt;.animate()&lt;/code&gt;. See the &lt;a href=&quot;http://api.jquery.com/animate/#animate-properties-options&quot;&gt;jQuery API for animate options&lt;/a&gt; for details.&lt;/p&gt;

&lt;h3 id=&quot;example&quot;&gt;Example&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#container&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isotope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;animationOptions&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;nx&quot;&gt;duration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;750&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
     &lt;span class=&quot;nx&quot;&gt;easing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;linear&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
     &lt;span class=&quot;nx&quot;&gt;queue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;containerclass&quot;&gt;containerClass&lt;/h2&gt;

&lt;dl class=&quot;clearfix&quot;&gt;
  &lt;dt&gt;&lt;code&gt;containerClass&lt;/code&gt;&lt;/dt&gt;
  &lt;dd class=&quot;option-type&quot;&gt;String&lt;/dd&gt;
  &lt;dd class=&quot;default&quot;&gt;&lt;code&gt;&lt;span class=&quot;s1&quot;&gt;&#39;isotope&#39;&lt;/span&gt;&lt;/code&gt;&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;The class applied to the container element.&lt;/p&gt;

&lt;h2 id=&quot;containerstyle&quot;&gt;containerStyle&lt;/h2&gt;

&lt;dl class=&quot;clearfix&quot;&gt;
  &lt;dt&gt;&lt;code&gt;containerStyle&lt;/code&gt;&lt;/dt&gt;
  &lt;dd class=&quot;option-type&quot;&gt;Object&lt;/dd&gt;
  &lt;dd class=&quot;default&quot;&gt;&lt;code&gt;{ position: &lt;span class=&quot;s1&quot;&gt;&#39;relative&#39;&lt;/span&gt;, overflow: &lt;span class=&quot;s1&quot;&gt;&#39;hidden&#39;&lt;/span&gt; }&lt;/code&gt;&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;CSS styles applied to the container element. Relative positioning enables absolute positioning on child items. Hidden overflow ensures that filtered items that lie outside the container do not interfer with subsequent content.&lt;/p&gt;

&lt;h2 id=&quot;filter&quot;&gt;filter&lt;/h2&gt;

&lt;dl class=&quot;clearfix&quot;&gt;
  &lt;dt&gt;&lt;code&gt;filter&lt;/code&gt;&lt;/dt&gt;
  &lt;dd class=&quot;option-type&quot;&gt;Selector&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;Setting a filter with show item elements that match the selector, and hide elements that do not match. See &lt;a href=&quot;filtering.html&quot;&gt;docs on filering&lt;/a&gt; for more details.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;../demos/filtering.html&quot;&gt;&lt;strong&gt;See Demo: Filtering&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;filter-values&quot;&gt;Values&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;&lt;span class=&quot;s1&quot;&gt;&#39;*&#39;&lt;/span&gt;&lt;/code&gt; or &lt;code&gt;&lt;span class=&quot;s1&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;/code&gt; (an empty string): Shows all item elements&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;getsortdata&quot;&gt;getSortData&lt;/h2&gt;

&lt;dl class=&quot;clearfix&quot;&gt;
  &lt;dt&gt;&lt;code&gt;getSortData&lt;/code&gt;&lt;/dt&gt;
  &lt;dd class=&quot;option-type&quot;&gt;Object&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;An object containing one or several methods to retrieve data for Sorting. The methods receive one parameter (&lt;code&gt;$elem&lt;/code&gt; in the example below) which is a jQuery object representing each item element. The methods need to return a value. See &lt;a href=&quot;sorting.html&quot;&gt;docs on sorting&lt;/a&gt; for more details.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;../demos/sorting.html&quot;&gt;&lt;strong&gt;See Demo: Sorting&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;example-1&quot;&gt;Example&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#container&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isotope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;getSortData&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;symbol&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$elem&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$elem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;data-symbol&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$elem&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;parseInt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$elem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;.number&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$elem&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$elem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;.name&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;hiddenclass&quot;&gt;hiddenClass&lt;/h2&gt;

&lt;dl class=&quot;clearfix&quot;&gt;
  &lt;dt&gt;&lt;code&gt;hiddenClass&lt;/code&gt;&lt;/dt&gt;
  &lt;dd class=&quot;option-type&quot;&gt;String&lt;/dd&gt;
  &lt;dd class=&quot;default&quot;&gt;&lt;code&gt;&lt;span class=&quot;s1&quot;&gt;&#39;isotope-hidden&#39;&lt;/span&gt;&lt;/code&gt;&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;The class applied to item elements hidden by Filtering.&lt;/p&gt;

&lt;h2 id=&quot;hiddenstyle&quot;&gt;hiddenStyle&lt;/h2&gt;

&lt;dl class=&quot;clearfix&quot;&gt;
  &lt;dt&gt;&lt;code&gt;hiddenStyle&lt;/code&gt;&lt;/dt&gt;
  &lt;dd class=&quot;option-type&quot;&gt;Object&lt;/dd&gt;
  &lt;dd class=&quot;default&quot;&gt;&lt;code&gt;{ opacity : &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;, scale : &lt;span class=&quot;mi&quot;&gt;0.001&lt;/span&gt; }&lt;/code&gt;&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;The style applied to item elements hidden by Filtering.&lt;/p&gt;

&lt;h2 id=&quot;itemclass&quot;&gt;itemClass&lt;/h2&gt;

&lt;dl class=&quot;clearfix&quot;&gt;
  &lt;dt&gt;&lt;code&gt;itemClass&lt;/code&gt;&lt;/dt&gt;
  &lt;dd class=&quot;option-type&quot;&gt;String&lt;/dd&gt;
  &lt;dd class=&quot;default&quot;&gt;&lt;code&gt;&lt;span class=&quot;s1&quot;&gt;&#39;isotope-item&#39;&lt;/span&gt;&lt;/code&gt;&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;The class applied to item elements.&lt;/p&gt;

&lt;h2 id=&quot;itempositiondataenabled&quot;&gt;itemPositionDataEnabled&lt;/h2&gt;

&lt;dl class=&quot;clearfix&quot;&gt;
  &lt;dt&gt;&lt;code&gt;itemPositionDataEnabled&lt;/code&gt;&lt;/dt&gt;
  &lt;dd class=&quot;option-type&quot;&gt;Boolean&lt;/dd&gt;
  &lt;dd class=&quot;default&quot;&gt;&lt;code&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;/code&gt;&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;When enabled, the position of item elements will exposed as data, which you can retrieve with jQuery’s data method with &lt;code&gt;&lt;span class=&quot;s1&quot;&gt;&#39;isotope-item-position&#39;&lt;/span&gt;&lt;/code&gt; name space. Position is return as an object with &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;;&lt;/p&gt;

&lt;h3 id=&quot;example-2&quot;&gt;Example&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#container&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isotope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;itemSelector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;.element&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;itemPositionDataEnabled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// log position of each item&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;.element&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;each&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;position&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;isotope-item-position&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;item position is x: &amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;, y: &amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;itemselector&quot;&gt;itemSelector&lt;/h2&gt;

&lt;dl class=&quot;clearfix&quot;&gt;
  &lt;dt&gt;&lt;code&gt;itemSelector&lt;/code&gt;&lt;/dt&gt;
  &lt;dd class=&quot;option-type&quot;&gt;Selector&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;Restricts Isotope item elements to selector.&lt;/p&gt;

&lt;h2 id=&quot;layoutmode&quot;&gt;layoutMode&lt;/h2&gt;

&lt;dl class=&quot;clearfix&quot;&gt;
  &lt;dt&gt;&lt;code&gt;layoutMode&lt;/code&gt;&lt;/dt&gt;
  &lt;dd class=&quot;option-type&quot;&gt;String&lt;/dd&gt;
  &lt;dd class=&quot;default&quot;&gt;&lt;code&gt;&lt;span class=&quot;s1&quot;&gt;&#39;masonry&#39;&lt;/span&gt;&lt;/code&gt;&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;See also docs on &lt;a href=&quot;layout-modes.html&quot;&gt;Layout modes&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;../demos/layout-modes.html&quot;&gt;&lt;strong&gt;See Demo: Layout modes&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;onlayout&quot;&gt;onLayout&lt;/h2&gt;

&lt;dl class=&quot;clearfix&quot;&gt;
  &lt;dt&gt;&lt;code&gt;onLayout&lt;/code&gt;&lt;/dt&gt;
  &lt;dd class=&quot;option-type&quot;&gt;Function&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;Similiar to a callback, &lt;code&gt;onLayout&lt;/code&gt; is a function that will be triggered after every time an Isotope instance runs through its layout logic.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#container&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isotope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;onLayout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$elems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;instance&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// `this` refers to jQuery object of the container element&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// callback provides jQuery object of laid-out item elements&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;$elems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;css&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;blue&amp;#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// instance is the Isotope instance&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;instance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$filteredAtoms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;resizable&quot;&gt;resizable&lt;/h2&gt;

&lt;dl class=&quot;clearfix&quot;&gt;
  &lt;dt&gt;&lt;code&gt;resizable&lt;/code&gt;&lt;/dt&gt;
  &lt;dd class=&quot;option-type&quot;&gt;Boolean&lt;/dd&gt;
  &lt;dd class=&quot;default&quot;&gt;&lt;code&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;/code&gt;&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;Triggers layout logic when browser window is resized. &lt;/p&gt;

&lt;h2 id=&quot;resizescontainer&quot;&gt;resizesContainer&lt;/h2&gt;

&lt;dl class=&quot;clearfix&quot;&gt;
  &lt;dt&gt;&lt;code&gt;resizesContainer&lt;/code&gt;&lt;/dt&gt;
  &lt;dd class=&quot;option-type&quot;&gt;Boolean&lt;/dd&gt;
  &lt;dd class=&quot;default&quot;&gt;&lt;code&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;/code&gt;&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;Isotope will set the height (for vertical layout modes) or width (for horizontal layout modes) of the container after layout. If &lt;code&gt;resizesContainer&lt;/code&gt; is set to &lt;code&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;/code&gt;, be sure to set a size for the container in your CSS, so it doesn’t collapse when Isotope is triggered.&lt;/p&gt;

&lt;h2 id=&quot;sortascending&quot;&gt;sortAscending&lt;/h2&gt;

&lt;dl class=&quot;clearfix&quot;&gt;
  &lt;dt&gt;&lt;code&gt;sortAscending&lt;/code&gt;&lt;/dt&gt;
  &lt;dd class=&quot;option-type&quot;&gt;Boolean&lt;/dd&gt;
  &lt;dd class=&quot;default&quot;&gt;&lt;code&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;/code&gt;&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;Used with sorting. If true, items are sorted ascending: “1, 2, 3” or “A, B, C…”. If false, items are sorted descending “Z, Y, X” or “9, 8, 7…”. See &lt;a href=&quot;sorting.html&quot;&gt;docs on sorting&lt;/a&gt; for more details.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;../demos/sorting.html&quot;&gt;&lt;strong&gt;See Demo: Sorting&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;sortby&quot;&gt;sortBy&lt;/h2&gt;

&lt;dl class=&quot;clearfix&quot;&gt;
  &lt;dt&gt;&lt;code&gt;sortBy&lt;/code&gt;&lt;/dt&gt;
  &lt;dd class=&quot;option-type&quot;&gt;String&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;The property name of the method within the &lt;code&gt;getSortData&lt;/code&gt; option to sort item elements.  See &lt;a href=&quot;sorting.html&quot;&gt;docs on sorting&lt;/a&gt; for more details.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;../demos/sorting.html&quot;&gt;&lt;strong&gt;See Demo: Sorting&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;sortBy-values&quot;&gt;Values&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;&#39;original-order&#39;&lt;/code&gt; Sorts item elements by their original order.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;transformsenabled&quot;&gt;transformsEnabled&lt;/h2&gt;

&lt;dl class=&quot;clearfix&quot;&gt;
  &lt;dt&gt;&lt;code&gt;transformsEnabled&lt;/code&gt;&lt;/dt&gt;
  &lt;dd class=&quot;option-type&quot;&gt;Boolean&lt;/dd&gt;
  &lt;dd class=&quot;default&quot;&gt;&lt;code&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;/code&gt;&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;Isotope uses CSS3 transforms to position item elements, when available in the browser. Setting &lt;code&gt;transformsEnabled&lt;/code&gt; to &lt;code&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;/code&gt; will disable this feature so all browsers use top/left absolute positioning. Useful for &lt;a href=&quot;help.html#css-transforms&quot;&gt;resolving issues with CSS transforms&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;transformsEnabled-css&quot;&gt;Additional CSS&lt;/h3&gt;

&lt;p&gt;If you do disable transforms, but still want to use &lt;a href=&quot;animating.html#css_transitions&quot;&gt;CSS transitions&lt;/a&gt;, you’ll need add the following CSS:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.isotope&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.isotope-item&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;webkit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;opacity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
     &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;moz&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;opacity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ms&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;opacity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
       &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;opacity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;opacity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;visiblestyle&quot;&gt;visibleStyle&lt;/h2&gt;

&lt;dl class=&quot;clearfix&quot;&gt;
  &lt;dt&gt;&lt;code&gt;visibleStyle&lt;/code&gt;&lt;/dt&gt;
  &lt;dd class=&quot;option-type&quot;&gt;Object&lt;/dd&gt;
  &lt;dd class=&quot;default&quot;&gt;&lt;code&gt;{ opacity : &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;, scale : &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; }&lt;/code&gt;&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;The style applied to item elements made visible by Filtering.&lt;/p&gt;

&lt;h2 id=&quot;layout-specific-options&quot;&gt;Layout-specific options&lt;/h2&gt;

&lt;p&gt;In addition the general options listed above, certain layout modes each have their own options. In order to avoid conflict, these options are set with an option that matches the name of the layout mode.&lt;/p&gt;

&lt;p&gt;See docs on &lt;a href=&quot;layout-modes.html&quot;&gt;layout modes&lt;/a&gt; for each layout mode’s available options.&lt;/p&gt;

&lt;p&gt;For example, if your layout switched from &lt;code&gt;masonry&lt;/code&gt; to &lt;code&gt;cellsByRow&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#container&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isotope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;masonry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;columnWidth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;120&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;cellsByRow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;columnWidth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;220&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;rowHeight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;220&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;../demos/layout-modes.html&quot;&gt;&lt;strong&gt;See Demo: Layout modes&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
</description>
                <link>/docs/options.html</link>
                <guid>/docs/options</guid>
                <pubDate>2010-12-03T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Introduction</title>
                <description>&lt;p class=&quot;tagline&quot;&gt;Isotope: An exquisite jQuery plugin for magical layouts&lt;/p&gt;

&lt;h2 id=&quot;features&quot;&gt;Features&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;layout-modes.html&quot;&gt;&lt;strong&gt;Layout modes&lt;/strong&gt;&lt;/a&gt;: Intelligent, dynamic layouts that can’t be achieved with CSS alone.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;filtering.html&quot;&gt;&lt;strong&gt;Filtering&lt;/strong&gt;&lt;/a&gt;: Hide and reveal item elements easily with jQuery selectors.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;sorting.html&quot;&gt;&lt;strong&gt;Sorting&lt;/strong&gt;&lt;/a&gt;: Re-order item elements with sorting. Sorting data can be extracted from just about anything.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Interoperability&lt;/strong&gt;: features can be utilized together for a cohesive experience.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Progressive enhancement&lt;/strong&gt;: Isotope’s &lt;a href=&quot;animating.html&quot;&gt;animation engine&lt;/a&gt; takes advantage of the best browser features when available — CSS transitions and transforms, GPU acceleration — but will also fall back to JavaScript animation for lesser browsers.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;commercial-licensing&quot;&gt;Commercial Licensing&lt;/h2&gt;

&lt;p&gt;Isotope may be used in commercial projects and applications with the one-time purchase of a commercial license. &lt;a href=&quot;license.html&quot;&gt;Read more about Isotope commercial licensing.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.simplegoods.co/i/WFOLIVJF&quot; class=&quot;simple-goods-btn&quot;&gt;Buy Developer License - $25.00&lt;/a&gt;
 &lt;a href=&quot;https://www.simplegoods.co/i/NWONVKMO&quot; class=&quot;simple-goods-btn&quot;&gt;Buy Organization License - $90.00&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;Purchasing accepts most credit cards and takes seconds. Once purchased, you’ll receive a commercial license PDF and you will be all set to use Isotope in your commercial applications.&lt;/p&gt;

&lt;p&gt;For non-commercial, personal, or open source projects and applications, you may use Isotope under the terms of the MIT License. You may use Isotope for free.&lt;/p&gt;

&lt;h3 id=&quot;purchase-via-paypal&quot;&gt;Purchase via PayPal&lt;/h3&gt;

&lt;p&gt;If you’re having trouble using a credit card, try purchasing a license via PayPal:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://pul.ly/b/13620&quot;&gt;Buy Developer License via PayPal&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://pul.ly/b/36595&quot;&gt;Buy Organization License via PayPal&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;getting-started&quot;&gt;Getting started&lt;/h2&gt;

&lt;p&gt;Isotope requires jQuery 1.4.3 and greater.&lt;/p&gt;

&lt;h3 id=&quot;markup&quot;&gt;Markup&lt;/h3&gt;

&lt;p&gt;Isotope works on a container element with a group of similar child items.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;container&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;...&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;...&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;...&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  ...
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;script&quot;&gt;Script&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#container&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isotope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// options&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;itemSelector&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;.item&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;layoutMode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;fitRows&amp;#39;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;../demos/basic.html&quot;&gt;&lt;strong&gt;See Demo: Basic&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There are a number of &lt;a href=&quot;options.html&quot;&gt;options&lt;/a&gt; you can specify.  Within the options is where you can &lt;a href=&quot;layout-modes.html&quot;&gt;set the layout mode&lt;/a&gt;, &lt;a href=&quot;filtering.html&quot;&gt;filter items&lt;/a&gt;,  and &lt;a href=&quot;sorting.html&quot;&gt;sort items&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Additionally you can specify a callback after the options object. This function will be triggered after the animation has completed.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#container&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isotope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;.my-selector&amp;#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$items&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;len&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Isotope has filtered for &amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;len&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39; items in #&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Within this callback &lt;code&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;/code&gt; refers to the container, and &lt;code&gt;$items&lt;/code&gt; refers to the item elements. Both of these are jQuery objects and do &lt;em&gt;not&lt;/em&gt; need to be put in jQuery wrappers.&lt;/p&gt;

&lt;h3 id=&quot;css&quot;&gt;CSS&lt;/h3&gt;

&lt;p&gt;Add these styles to your CSS for &lt;a href=&quot;filtering.html&quot;&gt;filtering&lt;/a&gt;, &lt;a href=&quot;animating.html&quot;&gt;animation&lt;/a&gt; with CSS transitions, and &lt;a href=&quot;adding-items.html&quot;&gt;adding items&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;&lt;span class=&quot;c&quot;&gt;/**** Isotope Filtering ****/&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.isotope-item&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;z-index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.isotope-hidden.isotope-item&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;pointer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;events&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;z-index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;/**** Isotope CSS3 transitions ****/&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.isotope&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.isotope&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.isotope-item&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;webkit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;duration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0.8s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
     &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;moz&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;duration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0.8s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ms&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;duration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0.8s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
       &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;duration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0.8s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;duration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0.8s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.isotope&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;webkit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
     &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;moz&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ms&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
       &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.isotope&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.isotope-item&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;webkit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;webkit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;opacity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
     &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;moz&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;moz&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;opacity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ms&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ms&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;opacity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
       &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;      &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;opacity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;         &lt;span class=&quot;n&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;opacity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;/**** disabling Isotope CSS3 transitions ****/&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.isotope.no-transition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.isotope.no-transition&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.isotope-item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.isotope&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.isotope-item.no-transition&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;webkit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;duration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
     &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;moz&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;duration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ms&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;duration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
       &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;duration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;duration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;code-repository&quot;&gt;Code repository&lt;/h2&gt;

&lt;p&gt;This project lives on GitHub at &lt;a href=&quot;http://github.com/desandro/isotope&quot;&gt;github.com/desandro/isotope&lt;/a&gt;. There you can grab the latest code and follow development.&lt;/p&gt;

&lt;h2 id=&quot;a-word-about-moderation--moderation&quot;&gt;A word about moderation {: #moderation}&lt;/h2&gt;

&lt;p&gt;Isotope enables a wealth of functionality. But just because you can take advantage of its numerous features together, doesn’t mean you necessarily should. For each each feature you implement with Isotope, consider the benefit gained by users, at the cost of another level of complexity to your interface.&lt;/p&gt;

&lt;h2 id=&quot;acknowledgments&quot;&gt;Acknowledgments&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://benalman.com/&quot;&gt;&lt;strong&gt;“Cowboy” Ben Alman&lt;/strong&gt;&lt;/a&gt; for &lt;a href=&quot;http://benalman.com/projects/jquery-bbq-plugin/&quot;&gt;jQuery BBQ&lt;/a&gt; (included with docs)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://twitter.com/Louis_Remi&quot;&gt;&lt;strong&gt;Louis-Rémi Babé&lt;/strong&gt;&lt;/a&gt; for &lt;a href=&quot;https://github.com/louisremi/jquery-smartresize&quot;&gt;jQuery smartresize&lt;/a&gt; (used within Isotope) and for &lt;a href=&quot;https://github.com/louisremi/jquery.transform.js&quot;&gt;jQuery transform&lt;/a&gt; which clued me in to using jQuery 1.4.3’s CSS hooks&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://razorjack.net/&quot;&gt;&lt;strong&gt;Jacek Galanciak&lt;/strong&gt;&lt;/a&gt; for &lt;a href=&quot;http://razorjack.net/quicksand/&quot;&gt;jQuery Quicksand&lt;/a&gt;, an early kernel of inspiration&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://twitter.com/#!/ralphholzmann&quot;&gt;&lt;strong&gt;Ralph Holzmann&lt;/strong&gt;&lt;/a&gt; for re-writing the &lt;a href=&quot;http://docs.jquery.com/Plugins/Authoring&quot;&gt;jQuery Plugins/Authoring tutorial&lt;/a&gt; and opened my eyes to &lt;a href=&quot;http://docs.jquery.com/Plugins/Authoring#Plugin_Methods&quot;&gt;Plugin Methods&lt;/a&gt; pattern&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.erichynds.com/&quot;&gt;&lt;strong&gt;Eric Hynds&lt;/strong&gt;&lt;/a&gt; for his article &lt;a href=&quot;http://www.erichynds.com/jquery/using-jquery-ui-widget-factory-bridge/&quot;&gt;Using $.widget.bridge Outside of the Widget Factory&lt;/a&gt; which provided the architecture for Isotope&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://paul-irish.com&quot;&gt;&lt;strong&gt;Paul Irish&lt;/strong&gt;&lt;/a&gt; for &lt;a href=&quot;http://infinite-scroll.com&quot;&gt;Infinite Scroll&lt;/a&gt; (included with docs), the &lt;a href=&quot;http://gist.github.com/268257&quot;&gt;imagesLoaded plugin&lt;/a&gt; (included with Isotope), and  &lt;a href=&quot;http://paulirish.com/demo/resize&quot;&gt;Debounced resize() plugin&lt;/a&gt; (provided base for smartresize)&lt;/li&gt;
  &lt;li&gt;The &lt;a href=&quot;http://jqueryui.com/about&quot;&gt;&lt;strong&gt;jQuery UI Team&lt;/strong&gt;&lt;/a&gt; for &lt;a href=&quot;https://github.com/jquery/jquery-ui/blob/master/ui/jquery.ui.widget.js#L113-155&quot;&gt;$.widget.bridge&lt;/a&gt; (partially used within Isotope)&lt;/li&gt;
  &lt;li&gt;The Modernizr team for &lt;a href=&quot;http://www.modernizr.com/&quot;&gt;Modernizr&lt;/a&gt; (partially used within Isotope)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://perfectionkills.com&quot;&gt;&lt;strong&gt;Juriy Zaytsev aka “kangax”&lt;/strong&gt;&lt;/a&gt; for &lt;a href=&quot;http://perfectionkills.com/feature-testing-css-properties/&quot;&gt;getStyleProperty&lt;/a&gt; (used within Isotope)&lt;/li&gt;
&lt;/ul&gt;

&lt;script src=&quot;https://www.simplegoods.co/assets/embed.js&quot;&gt; &lt;/script&gt;

</description>
                <link>/docs/introduction.html</link>
                <guid>/docs/introduction</guid>
                <pubDate>2010-12-01T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Tests Index</title>
                <description>&lt;ul&gt;
  
    
  
    
      &lt;li&gt;&lt;a href=&quot;../tests/destroy.html&quot;&gt;destroy&lt;/a&gt;&lt;/li&gt;
    
  
    
      &lt;li&gt;&lt;a href=&quot;../tests/flash.html&quot;&gt;flash&lt;/a&gt;&lt;/li&gt;
    
  
    
      &lt;li&gt;&lt;a href=&quot;../tests/no-items.html&quot;&gt;no items&lt;/a&gt;&lt;/li&gt;
    
  
    
      &lt;li&gt;&lt;a href=&quot;../tests/item-position-data.html&quot;&gt;item position data&lt;/a&gt;&lt;/li&gt;
    
  
    
      &lt;li&gt;&lt;a href=&quot;../tests/jquery-animation.html&quot;&gt;jquery animation&lt;/a&gt;&lt;/li&gt;
    
  
    
      &lt;li&gt;&lt;a href=&quot;../tests/elements-complete-test.html&quot;&gt;elements complete test&lt;/a&gt;&lt;/li&gt;
    
  
    
      &lt;li&gt;&lt;a href=&quot;../tests/tiny-text.html&quot;&gt;Tiny text&lt;/a&gt;&lt;/li&gt;
    
  
    
      &lt;li&gt;&lt;a href=&quot;../tests/right-to-left.html&quot;&gt;Right to left&lt;/a&gt;&lt;/li&gt;
    
  
    
      &lt;li&gt;&lt;a href=&quot;../tests/unclickable-filtered.html&quot;&gt;Unclickable filtered&lt;/a&gt;&lt;/li&gt;
    
  
    
      &lt;li&gt;&lt;a href=&quot;../tests/callbacks.html&quot;&gt;Callbacks&lt;/a&gt;&lt;/li&gt;
    
  
    
      &lt;li&gt;&lt;a href=&quot;../tests/onlayout.html&quot;&gt;onLayout&lt;/a&gt;&lt;/li&gt;
    
  
    
      &lt;li&gt;&lt;a href=&quot;../tests/combo-sort-history.html&quot;&gt;Combo filters, sorting, AND hash history&lt;/a&gt;&lt;/li&gt;
    
  
&lt;/ul&gt;</description>
                <link>/tests/index.html</link>
                <guid>/tests/index</guid>
                <pubDate>2010-01-01T00:00:00+00:00</pubDate>
        </item>


</channel>
</rss>
